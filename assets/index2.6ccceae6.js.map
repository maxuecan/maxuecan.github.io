{"version":3,"file":"index2.6ccceae6.js","sources":["../../node_modules/three/examples/jsm/libs/tween.module.min.js","../../src/views/my-world/index2.vue"],"sourcesContent":["// tween.js 17.3.5 - https://github.com/tweenjs/tween.js\nvar _Group=function(){this._tweens={},this._tweensAddedDuringUpdate={}};_Group.prototype={getAll:function(){return Object.keys(this._tweens).map(function(t){return this._tweens[t]}.bind(this))},removeAll:function(){this._tweens={}},add:function(t){this._tweens[t.getId()]=t,this._tweensAddedDuringUpdate[t.getId()]=t},remove:function(t){delete this._tweens[t.getId()],delete this._tweensAddedDuringUpdate[t.getId()]},update:function(t,n){var e=Object.keys(this._tweens);if(0===e.length)return!1;for(t=void 0!==t?t:TWEEN.now();0<e.length;){this._tweensAddedDuringUpdate={};for(var i=0;i<e.length;i++){var r=this._tweens[e[i]];r&&!1===r.update(t)&&(r._isPlaying=!1,n||delete this._tweens[e[i]])}e=Object.keys(this._tweensAddedDuringUpdate)}return!0}};var TWEEN=new _Group;TWEEN.Group=_Group,TWEEN._nextId=0,TWEEN.nextId=function(){return TWEEN._nextId++},\"undefined\"==typeof self&&\"undefined\"!=typeof process&&process.hrtime?TWEEN.now=function(){var t=process.hrtime();return 1e3*t[0]+t[1]/1e6}:\"undefined\"!=typeof self&&void 0!==self.performance&&void 0!==self.performance.now?TWEEN.now=self.performance.now.bind(self.performance):void 0!==Date.now?TWEEN.now=Date.now:TWEEN.now=function(){return(new Date).getTime()},TWEEN.Tween=function(t,n){this._object=t,this._valuesStart={},this._valuesEnd={},this._valuesStartRepeat={},this._duration=1e3,this._repeat=0,this._repeatDelayTime=void 0,this._yoyo=!1,this._isPlaying=!1,this._reversed=!1,this._delayTime=0,this._startTime=null,this._easingFunction=TWEEN.Easing.Linear.None,this._interpolationFunction=TWEEN.Interpolation.Linear,this._chainedTweens=[],this._onStartCallback=null,this._onStartCallbackFired=!1,this._onUpdateCallback=null,this._onCompleteCallback=null,this._onStopCallback=null,this._group=n||TWEEN,this._id=TWEEN.nextId()},TWEEN.Tween.prototype={getId:function(){return this._id},isPlaying:function(){return this._isPlaying},to:function(t,n){return this._valuesEnd=Object.create(t),void 0!==n&&(this._duration=n),this},duration:function(t){return this._duration=t,this},start:function(t){for(var n in this._group.add(this),this._isPlaying=!0,this._onStartCallbackFired=!1,this._startTime=void 0!==t?\"string\"==typeof t?TWEEN.now()+parseFloat(t):t:TWEEN.now(),this._startTime+=this._delayTime,this._valuesEnd){if(this._valuesEnd[n]instanceof Array){if(0===this._valuesEnd[n].length)continue;this._valuesEnd[n]=[this._object[n]].concat(this._valuesEnd[n])}void 0!==this._object[n]&&(this._valuesStart[n]=this._object[n],this._valuesStart[n]instanceof Array==!1&&(this._valuesStart[n]*=1),this._valuesStartRepeat[n]=this._valuesStart[n]||0)}return this},stop:function(){return this._isPlaying&&(this._group.remove(this),this._isPlaying=!1,null!==this._onStopCallback&&this._onStopCallback(this._object),this.stopChainedTweens()),this},end:function(){return this.update(1/0),this},stopChainedTweens:function(){for(var t=0,n=this._chainedTweens.length;t<n;t++)this._chainedTweens[t].stop()},group:function(t){return this._group=t,this},delay:function(t){return this._delayTime=t,this},repeat:function(t){return this._repeat=t,this},repeatDelay:function(t){return this._repeatDelayTime=t,this},yoyo:function(t){return this._yoyo=t,this},easing:function(t){return this._easingFunction=t,this},interpolation:function(t){return this._interpolationFunction=t,this},chain:function(){return this._chainedTweens=arguments,this},onStart:function(t){return this._onStartCallback=t,this},onUpdate:function(t){return this._onUpdateCallback=t,this},onComplete:function(t){return this._onCompleteCallback=t,this},onStop:function(t){return this._onStopCallback=t,this},update:function(t){var n,e,i;if(t<this._startTime)return!0;for(n in!1===this._onStartCallbackFired&&(null!==this._onStartCallback&&this._onStartCallback(this._object),this._onStartCallbackFired=!0),e=(t-this._startTime)/this._duration,e=0===this._duration||1<e?1:e,i=this._easingFunction(e),this._valuesEnd)if(void 0!==this._valuesStart[n]){var r=this._valuesStart[n]||0,a=this._valuesEnd[n];a instanceof Array?this._object[n]=this._interpolationFunction(a,i):(\"string\"==typeof a&&(a=\"+\"===a.charAt(0)||\"-\"===a.charAt(0)?r+parseFloat(a):parseFloat(a)),\"number\"==typeof a&&(this._object[n]=r+(a-r)*i))}if(null!==this._onUpdateCallback&&this._onUpdateCallback(this._object),1!==e)return!0;if(0<this._repeat){for(n in isFinite(this._repeat)&&this._repeat--,this._valuesStartRepeat){if(\"string\"==typeof this._valuesEnd[n]&&(this._valuesStartRepeat[n]=this._valuesStartRepeat[n]+parseFloat(this._valuesEnd[n])),this._yoyo){var s=this._valuesStartRepeat[n];this._valuesStartRepeat[n]=this._valuesEnd[n],this._valuesEnd[n]=s}this._valuesStart[n]=this._valuesStartRepeat[n]}return this._yoyo&&(this._reversed=!this._reversed),void 0!==this._repeatDelayTime?this._startTime=t+this._repeatDelayTime:this._startTime=t+this._delayTime,!0}null!==this._onCompleteCallback&&this._onCompleteCallback(this._object);for(var o=0,u=this._chainedTweens.length;o<u;o++)this._chainedTweens[o].start(this._startTime+this._duration);return!1}},TWEEN.Easing={Linear:{None:function(t){return t}},Quadratic:{In:function(t){return t*t},Out:function(t){return t*(2-t)},InOut:function(t){return(t*=2)<1?.5*t*t:-.5*(--t*(t-2)-1)}},Cubic:{In:function(t){return t*t*t},Out:function(t){return--t*t*t+1},InOut:function(t){return(t*=2)<1?.5*t*t*t:.5*((t-=2)*t*t+2)}},Quartic:{In:function(t){return t*t*t*t},Out:function(t){return 1- --t*t*t*t},InOut:function(t){return(t*=2)<1?.5*t*t*t*t:-.5*((t-=2)*t*t*t-2)}},Quintic:{In:function(t){return t*t*t*t*t},Out:function(t){return--t*t*t*t*t+1},InOut:function(t){return(t*=2)<1?.5*t*t*t*t*t:.5*((t-=2)*t*t*t*t+2)}},Sinusoidal:{In:function(t){return 1-Math.cos(t*Math.PI/2)},Out:function(t){return Math.sin(t*Math.PI/2)},InOut:function(t){return.5*(1-Math.cos(Math.PI*t))}},Exponential:{In:function(t){return 0===t?0:Math.pow(1024,t-1)},Out:function(t){return 1===t?1:1-Math.pow(2,-10*t)},InOut:function(t){return 0===t?0:1===t?1:(t*=2)<1?.5*Math.pow(1024,t-1):.5*(2-Math.pow(2,-10*(t-1)))}},Circular:{In:function(t){return 1-Math.sqrt(1-t*t)},Out:function(t){return Math.sqrt(1- --t*t)},InOut:function(t){return(t*=2)<1?-.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-=2)*t)+1)}},Elastic:{In:function(t){return 0===t?0:1===t?1:-Math.pow(2,10*(t-1))*Math.sin(5*(t-1.1)*Math.PI)},Out:function(t){return 0===t?0:1===t?1:Math.pow(2,-10*t)*Math.sin(5*(t-.1)*Math.PI)+1},InOut:function(t){return 0===t?0:1===t?1:(t*=2)<1?-.5*Math.pow(2,10*(t-1))*Math.sin(5*(t-1.1)*Math.PI):.5*Math.pow(2,-10*(t-1))*Math.sin(5*(t-1.1)*Math.PI)+1}},Back:{In:function(t){return t*t*(2.70158*t-1.70158)},Out:function(t){return--t*t*(2.70158*t+1.70158)+1},InOut:function(t){var n=2.5949095;return(t*=2)<1?t*t*((1+n)*t-n)*.5:.5*((t-=2)*t*((1+n)*t+n)+2)}},Bounce:{In:function(t){return 1-TWEEN.Easing.Bounce.Out(1-t)},Out:function(t){return t<1/2.75?7.5625*t*t:t<2/2.75?7.5625*(t-=1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375},InOut:function(t){return t<.5?.5*TWEEN.Easing.Bounce.In(2*t):.5*TWEEN.Easing.Bounce.Out(2*t-1)+.5}}},TWEEN.Interpolation={Linear:function(t,n){var e=t.length-1,i=e*n,r=Math.floor(i),a=TWEEN.Interpolation.Utils.Linear;return n<0?a(t[0],t[1],i):1<n?a(t[e],t[e-1],e-i):a(t[r],t[e<r+1?e:r+1],i-r)},Bezier:function(t,n){for(var e=0,i=t.length-1,r=Math.pow,a=TWEEN.Interpolation.Utils.Bernstein,s=0;s<=i;s++)e+=r(1-n,i-s)*r(n,s)*t[s]*a(i,s);return e},CatmullRom:function(t,n){var e=t.length-1,i=e*n,r=Math.floor(i),a=TWEEN.Interpolation.Utils.CatmullRom;return t[0]===t[e]?(n<0&&(r=Math.floor(i=e*(1+n))),a(t[(r-1+e)%e],t[r],t[(r+1)%e],t[(r+2)%e],i-r)):n<0?t[0]-(a(t[0],t[0],t[1],t[1],-i)-t[0]):1<n?t[e]-(a(t[e],t[e],t[e-1],t[e-1],i-e)-t[e]):a(t[r?r-1:0],t[r],t[e<r+1?e:r+1],t[e<r+2?e:r+2],i-r)},Utils:{Linear:function(t,n,e){return(n-t)*e+t},Bernstein:function(t,n){var e=TWEEN.Interpolation.Utils.Factorial;return e(t)/e(n)/e(t-n)},Factorial:function(){var i=[1];return function(t){var n=1;if(i[t])return i[t];for(var e=t;1<e;e--)n*=e;return i[t]=n}}(),CatmullRom:function(t,n,e,i,r){var a=.5*(e-t),s=.5*(i-n),o=r*r;return(2*n-2*e+a+s)*(r*o)+(-3*n+3*e-2*a-s)*o+a*r+n}}},function(t){\"function\"==typeof define&&define.amd?define([],function(){return TWEEN}):\"undefined\"!=typeof module&&\"object\"==typeof exports?module.exports=TWEEN:void 0!==t&&(t.TWEEN=TWEEN)}(this);\nexport {TWEEN};\n","<template>\r\n    <div class=\"container\">\r\n        <canvas id=\"my-world\"></canvas>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport * as THREE from 'three'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\r\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader'\r\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader'\r\nimport { TWEEN } from 'three/examples/jsm/libs/tween.module.min.js'\r\nimport {\r\n    // templateVertexShader,\r\n    // templateFragmentShader,\r\n    sunNoiseVertexShader,\r\n    sunNoiseFragmentShader,\r\n    sunShapeVertexShader,\r\n    sunShapeFragmentShader,\r\n    sunRingVertexShader,\r\n    sunRingFragmentShader,\r\n} from './texture'\r\n\r\nimport { getCurrentInstance, onMounted, nextTick } from 'vue';\r\n\r\nlet { ctx } = getCurrentInstance() as any\r\nonMounted(async () => {\r\n    await nextTick()\r\n    main()\r\n})\r\n\r\nlet camera: THREE.Camera;\r\nlet controls: OrbitControls;\r\nlet tween: any;\r\nlet bodyMaterial = new THREE.MeshPhysicalMaterial({\r\n\tcolor: 0xff0000,\r\n\tmetalness: 1.0,\r\n\troughness: 0.5,\r\n\tclearcoat: 1.0,\r\n\tclearcoatRoughness: 0.03\r\n})\r\n// 汽车轮毂的材质，采用了标准网格材质，threejs解析gltf模型，会用两种材质PBR材质去解析\r\nlet detailsMaterial = new THREE.MeshStandardMaterial({\r\n\tcolor: 0xffffff,\r\n\tmetalness: 1.0,\r\n\troughness: 0.5\r\n})\r\n// 汽车玻璃的材质\r\nlet glassMaterial = new THREE.MeshPhysicalMaterial({\r\n\tcolor: 0xffffff,\r\n\tmetalness: 0.25,\r\n\troughness‌: 0,\r\n\ttransmission: 10\r\n})\r\n/**\r\n * 汽车模型\r\n */\r\n// const _car_texture = new URL('../../assets/dream-car/gltf/ferrari_ao.png', import.meta.url).href\r\n// const _car_texture2 = new URL('../../assets/dream-car/gltf/ferrari.glb', import.meta.url).href\r\n// const shadow = new THREE.TextureLoader().load(_car_texture)\r\n// const dracoLoader = new DRACOLoader()\r\n// dracoLoader.setDecoderPath('./draco/gltf/')\r\n\r\nfunction main() {\r\n    let clock = new THREE.Clock();\r\n    let tween;\r\n\r\n    const position = new THREE.Vector3(-20, 15, -15)\r\n    // const canvas = ctx.$refs.myWorld2;\r\n    const canvas = document.getElementById('my-world')\r\n    // 渲染器\r\n    const renderer = createRenderer(canvas);\r\n    // 相机\r\n    camera = createCamera()\r\n    // 控制器\r\n    controls = createControls(camera, canvas)\r\n    // 场景\r\n    let scene = createScene()\r\n\r\n    // 创建天空盒子\r\n    createSky(scene)\r\n    // 添加天空盒\r\n    // createSky(scene)\r\n    \r\n    // 创建草地\r\n    // createGrass(scene)\r\n\r\n    // 创建建筑\r\n    // createBuilding(scene)\r\n\r\n    // 创建跑车\r\n    // createDreamCar(scene)\r\n\r\n    // 创建地板\r\n    // let meterial = new THREE.MeshPhongMaterial({\r\n    //     color: 0xffffff\r\n    // })\r\n    // let PlaneGeometry = new THREE.PlaneGeometry(50, 50)\r\n    // let plane = new THREE.Mesh(PlaneGeometry, meterial)\r\n    // plane.position.set(0, -1, 0)\r\n    // plane.rotation.x = -Math.PI/2\r\n    // plane.receiveShadow = true\r\n    // scene.add(plane)\r\n\r\n    // 创建球体模拟灯光\r\n    // let SphereGemoetry = new THREE.SphereGeometry(1, 20, 20)\r\n    // let sphere = new THREE.Mesh(SphereGemoetry, meterial)\r\n    // sphere.castShadow = true\r\n    // scene.add(sphere)\r\n\r\n    // function createGrid() {\r\n    //     let grid = new THREE.GridHelper(200, 400, 0xffffff, 0xffffff)\r\n    //     grid.material.opacity = 0.2\r\n    //     grid.material.depthWrite = false\r\n    //     grid.material.transparent = true\r\n    //     grid.receiveShadow = true\r\n    //     return grid\r\n    // }\r\n    // scene.add(createGrid())\r\n\r\n    // 创建噪声网格\r\n    // const sunNoiseMaterial = new THREE.ShaderMaterial({\r\n    //     vertexShader: sunNoiseVertexShader,\r\n    //     fragmentShader: sunNoiseFragmentShader,\r\n    //     side: THREE.DoubleSide,\r\n    //     uniforms: {\r\n    //         uTime: {\r\n    //             value: 0\r\n    //         },\r\n    //         uMouse: {\r\n    //             value: new THREE.Vector2(0, 0)\r\n    //         },\r\n    //         uResolution: {\r\n    //             value: new THREE.Vector2(window.innerWidth, window.innerHeight)\r\n    //         }\r\n    //     }\r\n    // });\r\n    // const sunNoiseMesh = createSunNoiseMesh(sunNoiseMaterial)\r\n    // sunNoiseMesh.position.copy(new THREE.Vector3(0, 0, 0))\r\n\r\n    // 创建立方体离屏渲染目标，将其作为太阳本体的噪声贴图\r\n    // const cubeRt = new THREE.WebGLCubeRenderTarget(256)\r\n    // const cubeCamera = new THREE.CubeCamera(0.1, 10, cubeRt)\r\n    // const cubeScene = new THREE.Scene()\r\n    // cubeScene.add(sunNoiseMesh)\r\n\r\n    // 创建太阳本体网格\r\n    // const sunShapeMaterial = new THREE.ShaderMaterial({\r\n    //     vertexShader: sunShapeVertexShader,\r\n    //     fragmentShader: sunShapeFragmentShader,\r\n    //     side: THREE.DoubleSide,\r\n    //     uniforms: {\r\n    //         uTime: {\r\n    //             value: 0\r\n    //         },\r\n    //         uMouse: {\r\n    //             value: new THREE.Vector2(0, 0)\r\n    //         },\r\n    //         uResolution: {\r\n    //             value: new THREE.Vector2(window.innerWidth, window.innerHeight)\r\n    //         },\r\n    //         uNoiseTexture: {\r\n    //             value: null\r\n    //         },\r\n    //         uVelocity: {\r\n    //             value: 0.05\r\n    //         },\r\n    //         uBrightness: {\r\n    //             value: 0.33\r\n    //         },\r\n    //         uStagger: {\r\n    //             value: 16\r\n    //         }\r\n    //     }\r\n    // });\r\n    // const sunShapeMesh = createSunShapeMesh(sunShapeMaterial)\r\n    // sunShapeMesh.position.copy(position)\r\n    // 给太阳本体创建光源\r\n    // createSunShapeLight(sunShapeMesh)\r\n    // scene.add(sunShapeMesh)\r\n\r\n    // let smallBall = new THREE.Mesh(\r\n    //     new THREE.SphereGeometry(0.1, 20, 20),\r\n    //     new THREE.MeshBasicMaterial({color: 0xff0000})\r\n    // )\r\n    // smallBall.position.set(0, 10, 0)\r\n    // scene.add(smallBall)\r\n\r\n    // 创建太阳环网格\r\n    // const sunRingMaterial = new THREE.ShaderMaterial({\r\n    //     vertexShader: sunRingVertexShader,\r\n    //     fragmentShader: sunRingFragmentShader,\r\n    //     side: THREE.BackSide,\r\n    //     uniforms: {\r\n    //         uTime: {\r\n    //             value: 0\r\n    //         },\r\n    //         uMouse: {\r\n    //             value: new THREE.Vector2(0, 0)\r\n    //         },\r\n    //         uResolution: {\r\n    //             value: new THREE.Vector2(window.innerWidth, window.innerHeight)\r\n    //         }\r\n    //     }\r\n    // });\r\n    // const sunRingMesh = createSunRingMesh(sunRingMaterial)\r\n    // sunRingMesh.position.copy(position)\r\n    // scene.add(sunRingMesh)\r\n\r\n    // 创建云朵\r\n    // createCloud(scene)\r\n\r\n    // 创建dragon ball\r\n    // createDragonBall(scene)\r\n\r\n    // 创建人物\r\n    let minxerArr: string | any[] = []\r\n    // createPeople(scene, minxerArr)\r\n\r\n    // createPeople2(scene)\r\n\r\n    // 创建鸟\r\n    let bridMinxerArr: string | any[] = []\r\n    // createBird(scene, bridMinxerArr)\r\n\r\n    // 创建home_dioroma\r\n    // createHomeDioroma(scene)\r\n\r\n    // 渲染\r\n    function render() {\r\n        if (resizeRendererToDisplaySize(renderer)) {\r\n            const canvas = renderer.domElement\r\n            camera.aspect = canvas.clientWidth / canvas.clientHeight\r\n            camera.updateProjectionMatrix()\r\n        }\r\n\r\n        let dt = clock.getDelta()\r\n        // console.log(minxerArr)\r\n        for (let i = 0; i < minxerArr.length; i++) {\r\n            minxerArr[i].update(dt)\r\n        }\r\n\r\n        TWEEN.update()\r\n\r\n\r\n        for (let i = 0; i < bridMinxerArr.length; i++) {\r\n            bridMinxerArr[i].update(dt)\r\n        }\r\n\r\n        let elapsedTime = clock.getElapsedTime()\r\n        let mousePos = new THREE.Vector2(0, 0)\r\n        // cubeCamera.update(renderer, cubeScene)\r\n        // if (sunNoiseMaterial && sunShapeMaterial) {\r\n        //     sunNoiseMaterial.uniforms.uTime.value = elapsedTime;\r\n        //     sunNoiseMaterial.uniforms.uMouse.value = mousePos;\r\n        //     sunShapeMaterial.uniforms.uTime.value = elapsedTime;\r\n        //     sunShapeMaterial.uniforms.uMouse.value = mousePos;\r\n        //     sunShapeMaterial.uniforms.uNoiseTexture.value = cubeRt.texture;\r\n        //     sunRingMaterial.uniforms.uTime.value = elapsedTime;\r\n        //     sunRingMaterial.uniforms.uMouse.value = mousePos;\r\n        // }\r\n\r\n        requestAnimationFrame(render)\r\n        renderer.render(scene, camera)\r\n    }\r\n\r\n    // 监听单机拾取对象初始化球体\r\n    // document.addEventListener('click', pickupObjects, false)\r\n\r\n    requestAnimationFrame(render)\r\n}\r\n\r\n// 渲染器 (创建一个渲染器并设置大小，WebGLRenderer将会使用电脑显卡来渲染场景)\r\nfunction createRenderer(canvas: any) {\r\n    const renderer = new THREE.WebGLRenderer({\r\n        antialias: true,\r\n        logarithmicDepthBuffer: true,\r\n        canvas\r\n    })\r\n    renderer.shadowMap.enabled = true // 激活阴影，允许场景使用阴影贴图\r\n    // renderer.outputEncoding = THREE.LinearEncoding // outputEncoding属性控制输出渲染编码\r\n    // renderer.outputEncoding = THREE.sRGBEncoding\r\n    // renderer.setPixelRatio(window.devicePixelRatio) // 设置设备像素比 通常用于避免HiDPI设备上绘图模糊\r\n    // renderer.setSize(window.innerWidth, window.innerHeight) // 将输出canvas的大小调整为(width, height)并考虑设备像素比，且将视口从(0, 0)开始调整到适合大小 将updateStyle设置为false以阻止对canvas的样式做任何改变\r\n    renderer.setClearColor(0x000000, 0) // 设置背景颜色 默认黑色\r\n\r\n    return renderer\r\n}\r\n\r\n/**\r\n * 创建相机（THREE.Vector3实例化一个三维向量）\r\n * fov 视角\r\n * aspect 视宽比\r\n * near 进\r\n * far 远\r\n * */ \r\nfunction createCamera(fov = 40, aspect = window.innerWidth / window.innerHeight, near = 0.1, far = 10000) {\r\n    let camera = new THREE.PerspectiveCamera(fov, aspect, near, far)\r\n    camera.position.copy(new THREE.Vector3(0, 0, -5)) // copy将属性复制到新相机中\r\n    camera.lookAt(new THREE.Vector3(0, 0, 0)) // 设置视线方向\r\n    // camera.position.set(0, 10, 20) // 设置相机的位置\r\n\r\n    return camera\r\n}\r\n\r\n// 创建控制器\r\nfunction createControls(camera: any, canvas: any) {\r\n    let controls = new OrbitControls(camera, canvas)\r\n    // controls.enableZoom = false // 是否可以缩放\r\n    // controls.enablePan = false // 启用或禁用摄像机平移\r\n    // controls.enableRotate = false // 是否启用旋转功能\r\n    // controls.minPolarAngle = Math.PI / 3 // 上下两极的可视区域最小角度\r\n    // controls.maxPolarAngle = Math.PI / 2.05 // 上下两极的可视区域的最大角度\r\n\r\n    // controls.target = new THREE.Vector3(0, 1, 0) // 设置目标\r\n    // controls.object.position.set(0, 2, -4)\r\n    controls.target.copy(new THREE.Vector3(0, 0, 0))\r\n    controls.update()\r\n\r\n    return controls\r\n}\r\n\r\n// 创建场景\r\nfunction createScene() {\r\n    // // 场景纹理图\r\n    // let _texture = new URL('../../assets/texture/venice_sunset_1k.hdr', import.meta.url).href\r\n    let scene = new THREE.Scene()\r\n    scene.background = new THREE.Color('#8ec3ed') // #8ec3ed #000000\r\n    // scene.environment = new RGBELoader().load(_texture) // 控制场景的渲染方式\r\n    // scene.environment.mapping = THREE.EquirectangularReflectionMapping // 环境贴图的映射方式\r\n    // scene.fog = new THREE.Fog(0x333333, 10, 15) // 雾化效果\r\n\r\n    return scene\r\n}\r\n\r\n// 创建噪声网格\r\nfunction createSunNoiseMesh(sunNoiseMaterial: any) {\r\n    const sunNoiseGeometry = new THREE.SphereBufferGeometry(1, 100, 100);\r\n    return new THREE.Mesh(sunNoiseGeometry, sunNoiseMaterial)\r\n}\r\n\r\n// 创建太阳本体网格\r\nfunction createSunShapeMesh(sunShapeMaterial: any) {\r\n    const sunShapeGeometry = new THREE.SphereBufferGeometry(1, 100, 100);\r\n    return new THREE.Mesh(sunShapeGeometry, sunShapeMaterial)\r\n}\r\n\r\n// 创建太阳本体光源\r\nfunction createSunShapeLight(mesh: any) {\r\n    // let light = new THREE.DirectionalLight(new THREE.Color('#ffffff'), 0.5)\r\n    // let light = new THREE.AmbientLight(new THREE.Color('#ffffff'), 0.4)\r\n    let light = new THREE.PointLight(new THREE.Color('#ffffff'), 1)\r\n    light.castShadow = true\r\n    light.intensity = 1\r\n    mesh.add(light)\r\n}\r\n\r\n// 创建太阳环网格\r\nfunction createSunRingMesh(sunRingMaterial: any) {\r\n    const sunRingGeometry = new THREE.SphereBufferGeometry(1.2, 100, 100);\r\n\r\n    return new THREE.Mesh(sunRingGeometry, sunRingMaterial)\r\n}\r\n\r\n// 创建云层\r\nfunction createCloud(scene: THREE.Scene) {\r\n    // 纹理图\r\n    let cloud_num = 100\r\n    let clouds = new THREE.Group()\r\n    let sprites = [\r\n        new THREE.TextureLoader().load(new URL('../../assets/threejs/cloud.png', import.meta.url).href),\r\n        // new THREE.TextureLoader().load(new URL('../../assets/threejs/cloud2.png', import.meta.url).href),\r\n        // new THREE.TextureLoader().load(new URL('../../assets/threejs/cloud3.png', import.meta.url).href),\r\n        // new THREE.TextureLoader().load(new URL('../../assets/threejs/cloud4.png', import.meta.url).href)\r\n    ]\r\n    let x = 1\r\n    for (let i = 0; i < cloud_num; i++) {\r\n        for (let j = 0; j < 1; j++) {\r\n            let cloud = new THREE.Sprite(new THREE.SpriteMaterial({\r\n                map: sprites[j],\r\n                transparent: true,\r\n                opacity: 1\r\n            }))\r\n            cloud.position.set(\r\n                (Math.random() * 2 - 1)  * (x + Math.random() * 5),\r\n                (Math.random()* 2),\r\n                (Math.random() * 2 - 1) * (3 + Math.random() * 5)\r\n            )\r\n            cloud.scale.set(5, 5, 5)\r\n            x += 0.1\r\n            clouds.add(cloud)\r\n        }\r\n    }\r\n    scene.add(clouds)\r\n}\r\n\r\n// 创建天空盒\r\nfunction createSky(scene: THREE.Scene) {\r\n    // let _texture = new URL('../../assets/threejs/sky.png', import.meta.url).href\r\n    // let loader = new THREE.TextureLoader()\r\n    // let bg_texture = loader.load(_texture)\r\n    // bg_texture.colorSpace = THREE.SRGBColorSpace\r\n    // scene.background = bg_texture\r\n\r\n    // let sky = [\r\n    //     new URL('../../components/threeJS/source/sky/posx.jpg', import.meta.url).href,\r\n    //     new URL('../../components/threeJS/source/sky/negx.jpg', import.meta.url).href,\r\n    //     new URL('../../components/threeJS/source/sky/posy.jpg', import.meta.url).href,\r\n    //     new URL('../../components/threeJS/source/sky/negy.jpg', import.meta.url).href,\r\n    //     new URL('../../components/threeJS/source/sky/posz.jpg', import.meta.url).href,\r\n    //     new URL('../../components/threeJS/source/sky/negz.jpg', import.meta.url).href\r\n    // ]\r\n    // let cubeLoader = new THREE.CubeTextureLoader()\r\n    // scene.background = cubeLoader.load(sky)\r\n\r\n    // let _texture = new URL('../../assets/person/ship_in_clouds/scene.gltf', import.meta.url).href\r\n    // let loader = new GLTFLoader()\r\n    // loader.setDRACOLoader(new DRACOLoader())\r\n    // loader.load(_texture, (gltf) => {\r\n    //     let _obj = gltf.scene\r\n    //     _obj.traverse((o) => {\r\n    //         // 启用投射和接收阴影的能力\r\n    //         o.castShadow = true\r\n    //         o.receiveShadow = true\r\n    //     })\r\n    //     console.log(gltf)\r\n    //     _obj.scale.set(1, 1, 1)\r\n    //     _obj.position.set(0, 0, 0)\r\n    //     scene.add(_obj)\r\n    //     // let _obj = gltf.scene\r\n    //     // _obj.traverse((o) => {\r\n    //     //     // 启用投射和接收阴影的能力\r\n    //     //     // o.castShadow = true\r\n    //     //     // o.receiveShadow = true\r\n    //     //     // o.material = material\r\n    //     // })\r\n    //     // // _obj.scale.set(0.02, 0.02, 0.02)\r\n    //     // // _obj.rotation.set(0, -Math.PI / 2, 0)\r\n    //     // _obj.position.set(10, 0, -10)\r\n    //     // scene.add(_obj)\r\n    //     // scene.add(gltf.scene)\r\n    // })\r\n}\r\n\r\n// 创建草地\r\nfunction createGrass(scene: THREE.Scene) {\r\n    let _texture = new URL('../../assets/person/grass/scene.gltf', import.meta.url).href\r\n    let loader = new GLTFLoader()\r\n    loader.setDRACOLoader(new DRACOLoader())\r\n    loader.load(_texture, (gltf) => {\r\n        let _obj = gltf.scene\r\n        scene.add(_obj)\r\n    })\r\n    // let _texture = new URL('../../assets/threejs/grass.jpg', import.meta.url).href\r\n    // let loader = new THREE.TextureLoader()\r\n    // loader.load(_texture, (groundTexture) => {\r\n    //     // groundTexture.wrapS = groundTexture.wrapT = THREE.RepeatWrapping\r\n    //     // // groundTexture.repeat.set(repeatX / 5, repeatY / 5)\r\n    //     // groundTexture.anisotropy = 16\r\n    //     // // groundTexture.encoding = THREE.RGBEncoding\r\n\r\n    //     // const groundMaterial = new THREE.MeshLambertMaterial({ map: groundTexture })\r\n    //     // groundMaterial.side = THREE.FrontSide\r\n\r\n    //     // const mesh = new THREE.Mesh(new THREE.PlaneBufferGeometry(width, height), groundMaterial)\r\n    //     // mesh.rotation.x = -Math.PI / 2\r\n    //     // mesh.position.y = 0\r\n    //     // mesh.receiveShadow = true\r\n\r\n    //     let PlaneGeometry = new THREE.PlaneGeometry(50, 50)\r\n    //     let groundMaterial = new THREE.MeshLambertMaterial({ map: groundTexture })\r\n    //     let plane = new THREE.Mesh(PlaneGeometry, groundMaterial)\r\n    //     plane.position.set(0, -1, 0)\r\n    //     plane.rotation.x = -Math.PI/2\r\n    //     plane.receiveShadow = true\r\n    //     scene.add(plane)\r\n    // })\r\n}\r\n\r\n// 创建建筑\r\nfunction createBuilding(scene: THREE.Scene) {\r\n    let _texture = new URL('../../assets/person/house/scene.gltf', import.meta.url).href\r\n    let loader = new GLTFLoader()\r\n    loader.setDRACOLoader(new DRACOLoader())\r\n    loader.load(_texture, (gltf) => {\r\n        let _obj = gltf.scene\r\n        _obj.scale.set(0.5, 0.5, 0.5)\r\n        _obj.rotation.set(0, -Math.PI / 2, 0)\r\n        _obj.position.set(-10, 0, -10)\r\n        scene.add(_obj)\r\n    })\r\n\r\n    let _texture2 = new URL('../../assets/person/house1/scene.gltf', import.meta.url).href\r\n    let loader2 = new GLTFLoader()\r\n    loader2.setDRACOLoader(new DRACOLoader())\r\n    loader2.load(_texture2, (gltf) => {\r\n        let _obj = gltf.scene\r\n        _obj.traverse((o) => {\r\n            // 启用投射和接收阴影的能力\r\n            o.castShadow = true\r\n            o.receiveShadow = true\r\n            // o.material = material\r\n        })\r\n        _obj.scale.set(0.02, 0.02, 0.02)\r\n        // _obj.rotation.set(0, -Math.PI / 2, 0)\r\n        _obj.position.set(10, 0, -10)\r\n        scene.add(_obj)\r\n    })\r\n}\r\n\r\n// 创建dragon ball\r\nfunction createDragonBall(scene: THREE.Scene) {\r\n    let _texture = new URL('../../assets/person/dragon_ball/scene.gltf', import.meta.url).href\r\n    let loader = new GLTFLoader()\r\n    loader.setDRACOLoader(new DRACOLoader())\r\n    loader.load(_texture, (gltf) => {\r\n        let _obj = gltf.scene\r\n        _obj.traverse((o) => {\r\n            // 启用投射和接收阴影的能力\r\n            o.castShadow = true\r\n            o.receiveShadow = true\r\n            // o.material = material\r\n        })\r\n        scene.add(_obj)\r\n    })\r\n}\r\n\r\n// 创建人物\r\ntype T = any\r\nlet peopleObj: THREE.Object3D<THREE.Object3DEventMap> | THREE.AnimationObjectGroup, \r\n    peopleAnimations: any[], \r\n    activeAction: THREE.AnimationAction, \r\n    mixer: THREE.AnimationMixer;\r\nfunction createPeople(scene: any, minxerArr: Array<T>) {\r\n    const gltf_peo = new URL('../../components/threeJs/source/people1/people.glb', import.meta.url).href\r\n    let gloader = new GLTFLoader()\r\n    gloader.load(gltf_peo, result => {\r\n        peopleObj = result.scene\r\n        peopleObj.castShadow = true\r\n        // peopleObj.scale.set(0.7, 0.7, 0.7)\r\n        peopleAnimations = result.animations\r\n\r\n        scene.add(peopleObj)\r\n\r\n        // 默认人物站立动画\r\n        mixer = new THREE.AnimationMixer(peopleObj)\r\n        minxerArr.push(mixer)\r\n        activeAction = mixer.clipAction(peopleAnimations[0])\r\n        activeAction.play()\r\n    })\r\n}\r\n\r\n// 创建人物2\r\nfunction createPeople2(scene: any) {\r\n    const _texture = new URL('../../assets/people/scene.gltf', import.meta.url).href\r\n    let loader = new GLTFLoader()\r\n    loader.setDRACOLoader(new DRACOLoader())\r\n    loader.load(_texture, result => {\r\n        console.log(result)\r\n        // result.scene.traverse((child) => {\r\n        //     console.log(child)\r\n        //     // if (child.isMesh) {\r\n        //     //     child.material.metalness = 0;\r\n        //     //     child.material.roughness = 1;\r\n        //     // }\r\n        // })\r\n        peopleObj = result.scene\r\n        peopleObj.scale.set(1, 1, 1)\r\n        peopleObj.position.set(5, 0, 0)\r\n        scene.add(peopleObj)\r\n        // mixer = new THREE.AnimationMixer(peopleObj);\r\n        // peopleObj.animations.forEach((clip) => {\r\n        //   mixer.clipAction(clip).play();\r\n        // });\r\n    })\r\n}\r\n\r\nlet birdMixer, birdAction\r\nfunction createBird(scene: any, bridMinxerArr: any) {\r\n    const _texture = new URL('../../assets/bird/scene.gltf', import.meta.url).href\r\n    let loader = new GLTFLoader()\r\n    loader.setDRACOLoader(new DRACOLoader())\r\n    loader.load(_texture, result => {\r\n        let _obj = result.scene\r\n        _obj.traverse((o) => {\r\n            // 启用投射和接收阴影的能力\r\n            o.castShadow = true\r\n            o.receiveShadow = true\r\n        })\r\n\r\n        _obj.scale.set(0.01, 0.01, 0.01)\r\n        _obj.position.set(\r\n            -25 + +(Math.random() * 10).toFixed(1), \r\n            0, \r\n            Math.random() * 10\r\n        )\r\n        _obj.rotation.y = Math.PI / 3\r\n        scene.add(_obj)\r\n\r\n        // 动画数据\r\n        const animations = result.animations\r\n        // 创建模型动作混合器\r\n        birdMixer = new THREE.AnimationMixer(_obj) \r\n        bridMinxerArr.push(birdMixer)\r\n        birdAction = birdMixer.clipAction(animations[0])\r\n\r\n        birdAction.play()\r\n    })\r\n}\r\n\r\nfunction createHomeDioroma(scene: THREE.Scene) {\r\n    const _texture = new URL('../../assets/person/home_dioroma/scene.gltf', import.meta.url).href\r\n    let loader = new GLTFLoader()\r\n    loader.setDRACOLoader(new DRACOLoader())\r\n    loader.load(_texture, result => {\r\n        let _obj = result.scene\r\n        _obj.traverse((o) => {\r\n            // 启用投射和接收阴影的能力\r\n            o.castShadow = true\r\n            o.receiveShadow = true\r\n        })\r\n\r\n        _obj.scale.set(0.1, 0.1, 0.1)\r\n        _obj.position.set(\r\n            -50 + +(Math.random() * 10).toFixed(1), \r\n            -10 + +(Math.random() * 10).toFixed(1), \r\n            -100 + +(Math.random() * 10).toFixed(1)\r\n        )\r\n        _obj.rotation.y = Math.PI\r\n        scene.add(_obj)\r\n    })\r\n\r\n    // const _texture2 = new URL('../../assets/person/the_last_stronghold_animated/scene.gltf', import.meta.url).href\r\n    // loader.load(_texture2, result => {\r\n    //     let _obj = result.scene\r\n    //     _obj.traverse((o) => {\r\n    //         // 启用投射和接收阴影的能力\r\n    //         // o.castShadow = true\r\n    //         // o.receiveShadow = true\r\n    //     })\r\n\r\n    //     _obj.scale.set(1, 1, 1)\r\n    //     _obj.position.set(\r\n    //         0,\r\n    //         -10,\r\n    //         -10\r\n    //     )\r\n    //     _obj.rotation.y = Math.PI\r\n    //     scene.add(_obj)\r\n    // })\r\n}\r\n\r\n// 拾取对象\r\nfunction pickupObjects(e: any) {\r\n    // 点击屏幕创建一个向量\r\n    let raycaster = new THREE.Raycaster()\r\n    let vector = new THREE.Vector2(\r\n        (e.clientX / window.innerWidth) * 2 - 1,\r\n        -(e.clientY / window.innerHeight) * 2 + 1\r\n    )\r\n    let fxl = new THREE.Vector3(0, 1, 0)\r\n    let groundplane = new THREE.Plane(fxl, 0)\r\n    raycaster.setFromCamera(vector, camera)\r\n\r\n    let intersects = raycaster.ray.intersectPlane(groundplane, fxl)\r\n\r\n    if (!intersects) return\r\n\r\n    // 人物当前位置\r\n    let originPosition = new THREE.Vector3(\r\n        peopleObj.position.x,\r\n        0,\r\n        peopleObj.position.z\r\n    )\r\n    // 人物目标位置\r\n    let targetPosition = new THREE.Vector3(\r\n        intersects.x,\r\n        0,\r\n        intersects.z\r\n    )\r\n\r\n    // 移动位置\r\n    let distance = originPosition.distanceTo(targetPosition)\r\n\r\n    peopleObj.lookAt(intersects.x, 0, intersects.z)\r\n    // 在传入的时间间隔内，逐渐将此动作的权重（weight）由1降至0\r\n    // 判断当前人物是否空闲状态，如果空前则改成步行状态\r\n    if (activeAction.getClip() != peopleAnimations[1]) {\r\n        activeAction.fadeOut(0.2)\r\n        activeAction = mixer.clipAction(peopleAnimations[1])\r\n        activeAction\r\n            .reset()\r\n            .setEffectiveTimeScale(1)\r\n            .setEffectiveWeight(2)\r\n            .fadeIn(0.2)\r\n            .play();\r\n    }\r\n\r\n    if (tween) {\r\n        TWEEN.remove(tween)\r\n    }\r\n    tween = new TWEEN.Tween(originPosition)\r\n        .to(targetPosition, distance * 800)\r\n        .easing(TWEEN.Easing.Linear.None)\r\n        .onComplete(function() {\r\n            activeAction.fadeOut(0.2);\r\n            activeAction = mixer.clipAction(peopleAnimations[0]);\r\n            activeAction\r\n                .reset()\r\n                .setEffectiveTimeScale(1)\r\n                .setEffectiveWeight(2)\r\n                .fadeIn(0.2)\r\n                .play();\r\n\t\t})\r\n        .onUpdate(function() {\r\n            peopleObj.position.set(this._object.x, 0.04, this._object.z);\r\n\r\n            let pos = peopleObj.position.clone();\r\n            pos.y = 1;\r\n            controls.target = pos;\r\n            controls.update();\r\n\t\t})\r\n\t\t.start();\r\n\r\n}\r\n\r\n// 适配\r\nfunction resizeRendererToDisplaySize(renderer: { domElement: any; setSize: (arg0: any, arg1: any, arg2: boolean) => void; }) {\r\n    let canvas = renderer.domElement\r\n    let pixelRatio = window.devicePixelRatio\r\n    let width = canvas.clientWidth * pixelRatio | 0\r\n    let height = canvas.clientHeight * pixelRatio | 0\r\n    let needResize = canvas.width !== width || canvas.height !== height\r\n    if (needResize) {\r\n        renderer.setSize(width, height, false)\r\n    }\r\n    return needResize\r\n}\r\n\r\n// 创建跑车\r\nfunction createDreamCar(scene: any) {\r\n    const loader = new GLTFLoader()\r\n    loader.setDRACOLoader(dracoLoader)\r\n\r\n    loader.load(_car_texture2, function(gltf) {\r\n        gltf.scene.traverse((child) => {\r\n            if (child.isMesh) {\r\n                child.material.metalness = 0;\r\n                child.material.roughness = 1;\r\n            }\r\n        })\r\n\r\n\t\tconst carModel:any = gltf.scene.children[0]\r\n\t\t// carModel.getObjectByName('body').material = bodyMaterial\r\n\t\t// carModel.getObjectByName('rim_fl').material = detailsMaterial\r\n\t\t// carModel.getObjectByName('rim_fr').material = detailsMaterial\r\n\t\t// carModel.getObjectByName('rim_rr').material = detailsMaterial\r\n\t\t// carModel.getObjectByName('rim_rl').material = detailsMaterial\r\n\t\t// carModel.getObjectByName('trim').material = detailsMaterial\r\n\r\n\t\t// carModel.getObjectByName('glass').material = glassMaterial\r\n\r\n\t\t// wheels.push(\r\n\t\t// \tcarModel.getObjectByName('rim_fl'),\r\n\t\t// \tcarModel.getObjectByName('rim_fr'),\r\n\t\t// \tcarModel.getObjectByName('rim_rr'),\r\n\t\t// \tcarModel.getObjectByName('rim_rl')\r\n\t\t// )\r\n\r\n\t\t// shadow\r\n\t\tconst mesh = new THREE.Mesh(\r\n\t\t\tnew THREE.PlaneGeometry(0.655 * 4, 1.3 * 4),\r\n\t\t\tnew THREE.MeshBasicMaterial({\r\n\t\t\t\tmap: shadow,\r\n\t\t\t\tblending: THREE.MultiplyBlending,\r\n\t\t\t\ttoneMapped: false,\r\n\t\t\t\ttransparent: true\r\n\t\t\t})\r\n\t\t)\r\n\r\n\t\t// 设置阴影效果x轴方向的角度\r\n\t\tmesh.rotation.x = -Math.PI / 2\r\n\t\tmesh.renderOrder = 2\r\n\t\tcarModel.add(mesh)\r\n\t\tscene.add(carModel)\r\n\t})\r\n}\r\n\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.container {\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n#my-world {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: block;\r\n}\r\n</style>\r\n"],"names":["this","THREE.MeshPhysicalMaterial","THREE.MeshStandardMaterial","THREE.Clock","THREE.Vector3","THREE.Vector2","THREE.WebGLRenderer","THREE.PerspectiveCamera","THREE.Scene","THREE.Color"],"mappings":"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"}
{"version":3,"file":"index.8e5e2104.js","sources":["../../node_modules/@svgdotjs/svg.js/src/utils/methods.js","../../node_modules/@svgdotjs/svg.js/src/utils/utils.js","../../node_modules/@svgdotjs/svg.js/src/modules/core/namespaces.js","../../node_modules/@svgdotjs/svg.js/src/utils/window.js","../../node_modules/@svgdotjs/svg.js/src/types/Base.js","../../node_modules/@svgdotjs/svg.js/src/utils/adopter.js","../../node_modules/@svgdotjs/svg.js/src/modules/optional/arrange.js","../../node_modules/@svgdotjs/svg.js/src/modules/core/regex.js","../../node_modules/@svgdotjs/svg.js/src/modules/optional/class.js","../../node_modules/@svgdotjs/svg.js/src/modules/optional/css.js","../../node_modules/@svgdotjs/svg.js/src/modules/optional/data.js","../../node_modules/@svgdotjs/svg.js/src/modules/optional/memory.js","../../node_modules/@svgdotjs/svg.js/src/types/Color.js","../../node_modules/@svgdotjs/svg.js/src/types/Point.js","../../node_modules/@svgdotjs/svg.js/src/types/Matrix.js","../../node_modules/@svgdotjs/svg.js/src/modules/core/parser.js","../../node_modules/@svgdotjs/svg.js/src/types/Box.js","../../node_modules/@svgdotjs/svg.js/src/types/List.js","../../node_modules/@svgdotjs/svg.js/src/modules/core/selector.js","../../node_modules/@svgdotjs/svg.js/src/modules/core/event.js","../../node_modules/@svgdotjs/svg.js/src/types/EventTarget.js","../../node_modules/@svgdotjs/svg.js/src/modules/core/defaults.js","../../node_modules/@svgdotjs/svg.js/src/types/SVGArray.js","../../node_modules/@svgdotjs/svg.js/src/types/SVGNumber.js","../../node_modules/@svgdotjs/svg.js/src/modules/core/attr.js","../../node_modules/@svgdotjs/svg.js/src/elements/Dom.js","../../node_modules/@svgdotjs/svg.js/src/elements/Element.js","../../node_modules/@svgdotjs/svg.js/src/modules/optional/sugar.js","../../node_modules/@svgdotjs/svg.js/src/modules/optional/transform.js","../../node_modules/@svgdotjs/svg.js/src/elements/Container.js","../../node_modules/@svgdotjs/svg.js/src/elements/Defs.js","../../node_modules/@svgdotjs/svg.js/src/elements/Shape.js","../../node_modules/@svgdotjs/svg.js/src/modules/core/circled.js","../../node_modules/@svgdotjs/svg.js/src/elements/Ellipse.js","../../node_modules/@svgdotjs/svg.js/src/elements/Fragment.js","../../node_modules/@svgdotjs/svg.js/src/modules/core/gradiented.js","../../node_modules/@svgdotjs/svg.js/src/elements/Gradient.js","../../node_modules/@svgdotjs/svg.js/src/elements/Pattern.js","../../node_modules/@svgdotjs/svg.js/src/elements/Image.js","../../node_modules/@svgdotjs/svg.js/src/types/PointArray.js","../../node_modules/@svgdotjs/svg.js/src/modules/core/pointed.js","../../node_modules/@svgdotjs/svg.js/src/elements/Line.js","../../node_modules/@svgdotjs/svg.js/src/elements/Marker.js","../../node_modules/@svgdotjs/svg.js/src/animation/Controller.js","../../node_modules/@svgdotjs/svg.js/src/utils/pathParser.js","../../node_modules/@svgdotjs/svg.js/src/types/PathArray.js","../../node_modules/@svgdotjs/svg.js/src/animation/Morphable.js","../../node_modules/@svgdotjs/svg.js/src/elements/Path.js","../../node_modules/@svgdotjs/svg.js/src/modules/core/poly.js","../../node_modules/@svgdotjs/svg.js/src/elements/Polygon.js","../../node_modules/@svgdotjs/svg.js/src/elements/Polyline.js","../../node_modules/@svgdotjs/svg.js/src/elements/Rect.js","../../node_modules/@svgdotjs/svg.js/src/animation/Queue.js","../../node_modules/@svgdotjs/svg.js/src/animation/Animator.js","../../node_modules/@svgdotjs/svg.js/src/animation/Timeline.js","../../node_modules/@svgdotjs/svg.js/src/animation/Runner.js","../../node_modules/@svgdotjs/svg.js/src/elements/Svg.js","../../node_modules/@svgdotjs/svg.js/src/elements/Symbol.js","../../node_modules/@svgdotjs/svg.js/src/modules/core/textable.js","../../node_modules/@svgdotjs/svg.js/src/elements/Text.js","../../node_modules/@svgdotjs/svg.js/src/elements/Tspan.js","../../node_modules/@svgdotjs/svg.js/src/elements/Circle.js","../../node_modules/@svgdotjs/svg.js/src/elements/ClipPath.js","../../node_modules/@svgdotjs/svg.js/src/elements/ForeignObject.js","../../node_modules/@svgdotjs/svg.js/src/modules/core/containerGeometry.js","../../node_modules/@svgdotjs/svg.js/src/elements/G.js","../../node_modules/@svgdotjs/svg.js/src/elements/A.js","../../node_modules/@svgdotjs/svg.js/src/elements/Mask.js","../../node_modules/@svgdotjs/svg.js/src/elements/Stop.js","../../node_modules/@svgdotjs/svg.js/src/elements/Style.js","../../node_modules/@svgdotjs/svg.js/src/elements/TextPath.js","../../node_modules/@svgdotjs/svg.js/src/elements/Use.js","../../node_modules/@svgdotjs/svg.js/src/main.js","../../node_modules/turtle-graphics/dist/esm/index.js","../../src/views/turtle/index.vue"],"sourcesContent":["const methods = {}\nconst names = []\n\nexport function registerMethods(name, m) {\n  if (Array.isArray(name)) {\n    for (const _name of name) {\n      registerMethods(_name, m)\n    }\n    return\n  }\n\n  if (typeof name === 'object') {\n    for (const _name in name) {\n      registerMethods(_name, name[_name])\n    }\n    return\n  }\n\n  addMethodNames(Object.getOwnPropertyNames(m))\n  methods[name] = Object.assign(methods[name] || {}, m)\n}\n\nexport function getMethodsFor(name) {\n  return methods[name] || {}\n}\n\nexport function getMethodNames() {\n  return [...new Set(names)]\n}\n\nexport function addMethodNames(_names) {\n  names.push(..._names)\n}\n","// Map function\nexport function map(array, block) {\n  let i\n  const il = array.length\n  const result = []\n\n  for (i = 0; i < il; i++) {\n    result.push(block(array[i]))\n  }\n\n  return result\n}\n\n// Filter function\nexport function filter(array, block) {\n  let i\n  const il = array.length\n  const result = []\n\n  for (i = 0; i < il; i++) {\n    if (block(array[i])) {\n      result.push(array[i])\n    }\n  }\n\n  return result\n}\n\n// Degrees to radians\nexport function radians(d) {\n  return ((d % 360) * Math.PI) / 180\n}\n\n// Radians to degrees\nexport function degrees(r) {\n  return ((r * 180) / Math.PI) % 360\n}\n\n// Convert camel cased string to dash separated\nexport function unCamelCase(s) {\n  return s.replace(/([A-Z])/g, function (m, g) {\n    return '-' + g.toLowerCase()\n  })\n}\n\n// Capitalize first letter of a string\nexport function capitalize(s) {\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\n// Calculate proportional width and height values when necessary\nexport function proportionalSize(element, width, height, box) {\n  if (width == null || height == null) {\n    box = box || element.bbox()\n\n    if (width == null) {\n      width = (box.width / box.height) * height\n    } else if (height == null) {\n      height = (box.height / box.width) * width\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  }\n}\n\n/**\n * This function adds support for string origins.\n * It searches for an origin in o.origin o.ox and o.originX.\n * This way, origin: {x: 'center', y: 50} can be passed as well as ox: 'center', oy: 50\n **/\nexport function getOrigin(o, element) {\n  const origin = o.origin\n  // First check if origin is in ox or originX\n  let ox = o.ox != null ? o.ox : o.originX != null ? o.originX : 'center'\n  let oy = o.oy != null ? o.oy : o.originY != null ? o.originY : 'center'\n\n  // Then check if origin was used and overwrite in that case\n  if (origin != null) {\n    ;[ox, oy] = Array.isArray(origin)\n      ? origin\n      : typeof origin === 'object'\n        ? [origin.x, origin.y]\n        : [origin, origin]\n  }\n\n  // Make sure to only call bbox when actually needed\n  const condX = typeof ox === 'string'\n  const condY = typeof oy === 'string'\n  if (condX || condY) {\n    const { height, width, x, y } = element.bbox()\n\n    // And only overwrite if string was passed for this specific axis\n    if (condX) {\n      ox = ox.includes('left')\n        ? x\n        : ox.includes('right')\n          ? x + width\n          : x + width / 2\n    }\n\n    if (condY) {\n      oy = oy.includes('top')\n        ? y\n        : oy.includes('bottom')\n          ? y + height\n          : y + height / 2\n    }\n  }\n\n  // Return the origin as it is if it wasn't a string\n  return [ox, oy]\n}\n\nconst descriptiveElements = new Set(['desc', 'metadata', 'title'])\nexport const isDescriptive = (element) =>\n  descriptiveElements.has(element.nodeName)\n\nexport const writeDataToDom = (element, data, defaults = {}) => {\n  const cloned = { ...data }\n\n  for (const key in cloned) {\n    if (cloned[key].valueOf() === defaults[key]) {\n      delete cloned[key]\n    }\n  }\n\n  if (Object.keys(cloned).length) {\n    element.node.setAttribute('data-svgjs', JSON.stringify(cloned)) // see #428\n  } else {\n    element.node.removeAttribute('data-svgjs')\n    element.node.removeAttribute('svgjs:data')\n  }\n}\n","// Default namespaces\nexport const svg = 'http://www.w3.org/2000/svg'\nexport const html = 'http://www.w3.org/1999/xhtml'\nexport const xmlns = 'http://www.w3.org/2000/xmlns/'\nexport const xlink = 'http://www.w3.org/1999/xlink'\n","export const globals = {\n  window: typeof window === 'undefined' ? null : window,\n  document: typeof document === 'undefined' ? null : document\n}\n\nexport function registerWindow(win = null, doc = null) {\n  globals.window = win\n  globals.document = doc\n}\n\nconst save = {}\n\nexport function saveWindow() {\n  save.window = globals.window\n  save.document = globals.document\n}\n\nexport function restoreWindow() {\n  globals.window = save.window\n  globals.document = save.document\n}\n\nexport function withWindow(win, fn) {\n  saveWindow()\n  registerWindow(win, win.document)\n  fn(win, win.document)\n  restoreWindow()\n}\n\nexport function getWindow() {\n  return globals.window\n}\n","export default class Base {\n  // constructor (node/*, {extensions = []} */) {\n  //   // this.tags = []\n  //   //\n  //   // for (let extension of extensions) {\n  //   //   extension.setup.call(this, node)\n  //   //   this.tags.push(extension.name)\n  //   // }\n  // }\n}\n","import { addMethodNames } from './methods.js'\nimport { capitalize } from './utils.js'\nimport { svg } from '../modules/core/namespaces.js'\nimport { globals } from '../utils/window.js'\nimport Base from '../types/Base.js'\n\nconst elements = {}\nexport const root = '___SYMBOL___ROOT___'\n\n// Method for element creation\nexport function create(name, ns = svg) {\n  // create element\n  return globals.document.createElementNS(ns, name)\n}\n\nexport function makeInstance(element, isHTML = false) {\n  if (element instanceof Base) return element\n\n  if (typeof element === 'object') {\n    return adopter(element)\n  }\n\n  if (element == null) {\n    return new elements[root]()\n  }\n\n  if (typeof element === 'string' && element.charAt(0) !== '<') {\n    return adopter(globals.document.querySelector(element))\n  }\n\n  // Make sure, that HTML elements are created with the correct namespace\n  const wrapper = isHTML ? globals.document.createElement('div') : create('svg')\n  wrapper.innerHTML = element\n\n  // We can use firstChild here because we know,\n  // that the first char is < and thus an element\n  element = adopter(wrapper.firstChild)\n\n  // make sure, that element doesn't have its wrapper attached\n  wrapper.removeChild(wrapper.firstChild)\n  return element\n}\n\nexport function nodeOrNew(name, node) {\n  return node &&\n    (node instanceof globals.window.Node ||\n      (node.ownerDocument &&\n        node instanceof node.ownerDocument.defaultView.Node))\n    ? node\n    : create(name)\n}\n\n// Adopt existing svg elements\nexport function adopt(node) {\n  // check for presence of node\n  if (!node) return null\n\n  // make sure a node isn't already adopted\n  if (node.instance instanceof Base) return node.instance\n\n  if (node.nodeName === '#document-fragment') {\n    return new elements.Fragment(node)\n  }\n\n  // initialize variables\n  let className = capitalize(node.nodeName || 'Dom')\n\n  // Make sure that gradients are adopted correctly\n  if (className === 'LinearGradient' || className === 'RadialGradient') {\n    className = 'Gradient'\n\n    // Fallback to Dom if element is not known\n  } else if (!elements[className]) {\n    className = 'Dom'\n  }\n\n  return new elements[className](node)\n}\n\nlet adopter = adopt\n\nexport function mockAdopt(mock = adopt) {\n  adopter = mock\n}\n\nexport function register(element, name = element.name, asRoot = false) {\n  elements[name] = element\n  if (asRoot) elements[root] = element\n\n  addMethodNames(Object.getOwnPropertyNames(element.prototype))\n\n  return element\n}\n\nexport function getClass(name) {\n  return elements[name]\n}\n\n// Element id sequence\nlet did = 1000\n\n// Get next named element id\nexport function eid(name) {\n  return 'Svgjs' + capitalize(name) + did++\n}\n\n// Deep new id assignment\nexport function assignNewId(node) {\n  // do the same for SVG child nodes as well\n  for (let i = node.children.length - 1; i >= 0; i--) {\n    assignNewId(node.children[i])\n  }\n\n  if (node.id) {\n    node.id = eid(node.nodeName)\n    return node\n  }\n\n  return node\n}\n\n// Method for extending objects\nexport function extend(modules, methods) {\n  let key, i\n\n  modules = Array.isArray(modules) ? modules : [modules]\n\n  for (i = modules.length - 1; i >= 0; i--) {\n    for (key in methods) {\n      modules[i].prototype[key] = methods[key]\n    }\n  }\n}\n\nexport function wrapWithAttrCheck(fn) {\n  return function (...args) {\n    const o = args[args.length - 1]\n\n    if (o && o.constructor === Object && !(o instanceof Array)) {\n      return fn.apply(this, args.slice(0, -1)).attr(o)\n    } else {\n      return fn.apply(this, args)\n    }\n  }\n}\n","import { makeInstance } from '../../utils/adopter.js'\nimport { registerMethods } from '../../utils/methods.js'\n\n// Get all siblings, including myself\nexport function siblings() {\n  return this.parent().children()\n}\n\n// Get the current position siblings\nexport function position() {\n  return this.parent().index(this)\n}\n\n// Get the next element (will return null if there is none)\nexport function next() {\n  return this.siblings()[this.position() + 1]\n}\n\n// Get the next element (will return null if there is none)\nexport function prev() {\n  return this.siblings()[this.position() - 1]\n}\n\n// Send given element one step forward\nexport function forward() {\n  const i = this.position()\n  const p = this.parent()\n\n  // move node one step forward\n  p.add(this.remove(), i + 1)\n\n  return this\n}\n\n// Send given element one step backward\nexport function backward() {\n  const i = this.position()\n  const p = this.parent()\n\n  p.add(this.remove(), i ? i - 1 : 0)\n\n  return this\n}\n\n// Send given element all the way to the front\nexport function front() {\n  const p = this.parent()\n\n  // Move node forward\n  p.add(this.remove())\n\n  return this\n}\n\n// Send given element all the way to the back\nexport function back() {\n  const p = this.parent()\n\n  // Move node back\n  p.add(this.remove(), 0)\n\n  return this\n}\n\n// Inserts a given element before the targeted element\nexport function before(element) {\n  element = makeInstance(element)\n  element.remove()\n\n  const i = this.position()\n\n  this.parent().add(element, i)\n\n  return this\n}\n\n// Inserts a given element after the targeted element\nexport function after(element) {\n  element = makeInstance(element)\n  element.remove()\n\n  const i = this.position()\n\n  this.parent().add(element, i + 1)\n\n  return this\n}\n\nexport function insertBefore(element) {\n  element = makeInstance(element)\n  element.before(this)\n  return this\n}\n\nexport function insertAfter(element) {\n  element = makeInstance(element)\n  element.after(this)\n  return this\n}\n\nregisterMethods('Dom', {\n  siblings,\n  position,\n  next,\n  prev,\n  forward,\n  backward,\n  front,\n  back,\n  before,\n  after,\n  insertBefore,\n  insertAfter\n})\n","// Parse unit value\nexport const numberAndUnit =\n  /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\n\n// Parse hex value\nexport const hex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\n\n// Parse rgb value\nexport const rgb = /rgb\\((\\d+),(\\d+),(\\d+)\\)/\n\n// Parse reference id\nexport const reference = /(#[a-z_][a-z0-9\\-_]*)/i\n\n// splits a transformation chain\nexport const transforms = /\\)\\s*,?\\s*/\n\n// Whitespace\nexport const whitespace = /\\s/g\n\n// Test hex value\nexport const isHex = /^#[a-f0-9]{3}$|^#[a-f0-9]{6}$/i\n\n// Test rgb value\nexport const isRgb = /^rgb\\(/\n\n// Test for blank string\nexport const isBlank = /^(\\s+)?$/\n\n// Test for numeric string\nexport const isNumber = /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\n\n// Test for image url\nexport const isImage = /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\n\n// split at whitespace and comma\nexport const delimiter = /[\\s,]+/\n\n// Test for path letter\nexport const isPathLetter = /[MLHVCSQTAZ]/i\n","import { delimiter } from '../core/regex.js'\nimport { registerMethods } from '../../utils/methods.js'\n\n// Return array of classes on the node\nexport function classes() {\n  const attr = this.attr('class')\n  return attr == null ? [] : attr.trim().split(delimiter)\n}\n\n// Return true if class exists on the node, false otherwise\nexport function hasClass(name) {\n  return this.classes().indexOf(name) !== -1\n}\n\n// Add class to the node\nexport function addClass(name) {\n  if (!this.hasClass(name)) {\n    const array = this.classes()\n    array.push(name)\n    this.attr('class', array.join(' '))\n  }\n\n  return this\n}\n\n// Remove class from the node\nexport function removeClass(name) {\n  if (this.hasClass(name)) {\n    this.attr(\n      'class',\n      this.classes()\n        .filter(function (c) {\n          return c !== name\n        })\n        .join(' ')\n    )\n  }\n\n  return this\n}\n\n// Toggle the presence of a class on the node\nexport function toggleClass(name) {\n  return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\n}\n\nregisterMethods('Dom', {\n  classes,\n  hasClass,\n  addClass,\n  removeClass,\n  toggleClass\n})\n","import { isBlank } from '../core/regex.js'\nimport { registerMethods } from '../../utils/methods.js'\n\n// Dynamic style generator\nexport function css(style, val) {\n  const ret = {}\n  if (arguments.length === 0) {\n    // get full style as object\n    this.node.style.cssText\n      .split(/\\s*;\\s*/)\n      .filter(function (el) {\n        return !!el.length\n      })\n      .forEach(function (el) {\n        const t = el.split(/\\s*:\\s*/)\n        ret[t[0]] = t[1]\n      })\n    return ret\n  }\n\n  if (arguments.length < 2) {\n    // get style properties as array\n    if (Array.isArray(style)) {\n      for (const name of style) {\n        const cased = name\n        ret[name] = this.node.style.getPropertyValue(cased)\n      }\n      return ret\n    }\n\n    // get style for property\n    if (typeof style === 'string') {\n      return this.node.style.getPropertyValue(style)\n    }\n\n    // set styles in object\n    if (typeof style === 'object') {\n      for (const name in style) {\n        // set empty string if null/undefined/'' was given\n        this.node.style.setProperty(\n          name,\n          style[name] == null || isBlank.test(style[name]) ? '' : style[name]\n        )\n      }\n    }\n  }\n\n  // set style for property\n  if (arguments.length === 2) {\n    this.node.style.setProperty(\n      style,\n      val == null || isBlank.test(val) ? '' : val\n    )\n  }\n\n  return this\n}\n\n// Show element\nexport function show() {\n  return this.css('display', '')\n}\n\n// Hide element\nexport function hide() {\n  return this.css('display', 'none')\n}\n\n// Is element visible?\nexport function visible() {\n  return this.css('display') !== 'none'\n}\n\nregisterMethods('Dom', {\n  css,\n  show,\n  hide,\n  visible\n})\n","import { registerMethods } from '../../utils/methods.js'\nimport { filter, map } from '../../utils/utils.js'\n\n// Store data values on svg nodes\nexport function data(a, v, r) {\n  if (a == null) {\n    // get an object of attributes\n    return this.data(\n      map(\n        filter(\n          this.node.attributes,\n          (el) => el.nodeName.indexOf('data-') === 0\n        ),\n        (el) => el.nodeName.slice(5)\n      )\n    )\n  } else if (a instanceof Array) {\n    const data = {}\n    for (const key of a) {\n      data[key] = this.data(key)\n    }\n    return data\n  } else if (typeof a === 'object') {\n    for (v in a) {\n      this.data(v, a[v])\n    }\n  } else if (arguments.length < 2) {\n    try {\n      return JSON.parse(this.attr('data-' + a))\n    } catch (e) {\n      return this.attr('data-' + a)\n    }\n  } else {\n    this.attr(\n      'data-' + a,\n      v === null\n        ? null\n        : r === true || typeof v === 'string' || typeof v === 'number'\n          ? v\n          : JSON.stringify(v)\n    )\n  }\n\n  return this\n}\n\nregisterMethods('Dom', { data })\n","import { registerMethods } from '../../utils/methods.js'\n\n// Remember arbitrary data\nexport function remember(k, v) {\n  // remember every item in an object individually\n  if (typeof arguments[0] === 'object') {\n    for (const key in k) {\n      this.remember(key, k[key])\n    }\n  } else if (arguments.length === 1) {\n    // retrieve memory\n    return this.memory()[k]\n  } else {\n    // store memory\n    this.memory()[k] = v\n  }\n\n  return this\n}\n\n// Erase a given memory\nexport function forget() {\n  if (arguments.length === 0) {\n    this._memory = {}\n  } else {\n    for (let i = arguments.length - 1; i >= 0; i--) {\n      delete this.memory()[arguments[i]]\n    }\n  }\n  return this\n}\n\n// This triggers creation of a new hidden class which is not performant\n// However, this function is not rarely used so it will not happen frequently\n// Return local memory object\nexport function memory() {\n  return (this._memory = this._memory || {})\n}\n\nregisterMethods('Dom', { remember, forget, memory })\n","import { hex, isHex, isRgb, rgb, whitespace } from '../modules/core/regex.js'\n\nfunction sixDigitHex(hex) {\n  return hex.length === 4\n    ? [\n        '#',\n        hex.substring(1, 2),\n        hex.substring(1, 2),\n        hex.substring(2, 3),\n        hex.substring(2, 3),\n        hex.substring(3, 4),\n        hex.substring(3, 4)\n      ].join('')\n    : hex\n}\n\nfunction componentHex(component) {\n  const integer = Math.round(component)\n  const bounded = Math.max(0, Math.min(255, integer))\n  const hex = bounded.toString(16)\n  return hex.length === 1 ? '0' + hex : hex\n}\n\nfunction is(object, space) {\n  for (let i = space.length; i--; ) {\n    if (object[space[i]] == null) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getParameters(a, b) {\n  const params = is(a, 'rgb')\n    ? { _a: a.r, _b: a.g, _c: a.b, _d: 0, space: 'rgb' }\n    : is(a, 'xyz')\n      ? { _a: a.x, _b: a.y, _c: a.z, _d: 0, space: 'xyz' }\n      : is(a, 'hsl')\n        ? { _a: a.h, _b: a.s, _c: a.l, _d: 0, space: 'hsl' }\n        : is(a, 'lab')\n          ? { _a: a.l, _b: a.a, _c: a.b, _d: 0, space: 'lab' }\n          : is(a, 'lch')\n            ? { _a: a.l, _b: a.c, _c: a.h, _d: 0, space: 'lch' }\n            : is(a, 'cmyk')\n              ? { _a: a.c, _b: a.m, _c: a.y, _d: a.k, space: 'cmyk' }\n              : { _a: 0, _b: 0, _c: 0, space: 'rgb' }\n\n  params.space = b || params.space\n  return params\n}\n\nfunction cieSpace(space) {\n  if (space === 'lab' || space === 'xyz' || space === 'lch') {\n    return true\n  } else {\n    return false\n  }\n}\n\nfunction hueToRgb(p, q, t) {\n  if (t < 0) t += 1\n  if (t > 1) t -= 1\n  if (t < 1 / 6) return p + (q - p) * 6 * t\n  if (t < 1 / 2) return q\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\n  return p\n}\n\nexport default class Color {\n  constructor(...inputs) {\n    this.init(...inputs)\n  }\n\n  // Test if given value is a color\n  static isColor(color) {\n    return (\n      color && (color instanceof Color || this.isRgb(color) || this.test(color))\n    )\n  }\n\n  // Test if given value is an rgb object\n  static isRgb(color) {\n    return (\n      color &&\n      typeof color.r === 'number' &&\n      typeof color.g === 'number' &&\n      typeof color.b === 'number'\n    )\n  }\n\n  /*\n  Generating random colors\n  */\n  static random(mode = 'vibrant', t) {\n    // Get the math modules\n    const { random, round, sin, PI: pi } = Math\n\n    // Run the correct generator\n    if (mode === 'vibrant') {\n      const l = (81 - 57) * random() + 57\n      const c = (83 - 45) * random() + 45\n      const h = 360 * random()\n      const color = new Color(l, c, h, 'lch')\n      return color\n    } else if (mode === 'sine') {\n      t = t == null ? random() : t\n      const r = round(80 * sin((2 * pi * t) / 0.5 + 0.01) + 150)\n      const g = round(50 * sin((2 * pi * t) / 0.5 + 4.6) + 200)\n      const b = round(100 * sin((2 * pi * t) / 0.5 + 2.3) + 150)\n      const color = new Color(r, g, b)\n      return color\n    } else if (mode === 'pastel') {\n      const l = (94 - 86) * random() + 86\n      const c = (26 - 9) * random() + 9\n      const h = 360 * random()\n      const color = new Color(l, c, h, 'lch')\n      return color\n    } else if (mode === 'dark') {\n      const l = 10 + 10 * random()\n      const c = (125 - 75) * random() + 86\n      const h = 360 * random()\n      const color = new Color(l, c, h, 'lch')\n      return color\n    } else if (mode === 'rgb') {\n      const r = 255 * random()\n      const g = 255 * random()\n      const b = 255 * random()\n      const color = new Color(r, g, b)\n      return color\n    } else if (mode === 'lab') {\n      const l = 100 * random()\n      const a = 256 * random() - 128\n      const b = 256 * random() - 128\n      const color = new Color(l, a, b, 'lab')\n      return color\n    } else if (mode === 'grey') {\n      const grey = 255 * random()\n      const color = new Color(grey, grey, grey)\n      return color\n    } else {\n      throw new Error('Unsupported random color mode')\n    }\n  }\n\n  // Test if given value is a color string\n  static test(color) {\n    return typeof color === 'string' && (isHex.test(color) || isRgb.test(color))\n  }\n\n  cmyk() {\n    // Get the rgb values for the current color\n    const { _a, _b, _c } = this.rgb()\n    const [r, g, b] = [_a, _b, _c].map((v) => v / 255)\n\n    // Get the cmyk values in an unbounded format\n    const k = Math.min(1 - r, 1 - g, 1 - b)\n\n    if (k === 1) {\n      // Catch the black case\n      return new Color(0, 0, 0, 1, 'cmyk')\n    }\n\n    const c = (1 - r - k) / (1 - k)\n    const m = (1 - g - k) / (1 - k)\n    const y = (1 - b - k) / (1 - k)\n\n    // Construct the new color\n    const color = new Color(c, m, y, k, 'cmyk')\n    return color\n  }\n\n  hsl() {\n    // Get the rgb values\n    const { _a, _b, _c } = this.rgb()\n    const [r, g, b] = [_a, _b, _c].map((v) => v / 255)\n\n    // Find the maximum and minimum values to get the lightness\n    const max = Math.max(r, g, b)\n    const min = Math.min(r, g, b)\n    const l = (max + min) / 2\n\n    // If the r, g, v values are identical then we are grey\n    const isGrey = max === min\n\n    // Calculate the hue and saturation\n    const delta = max - min\n    const s = isGrey\n      ? 0\n      : l > 0.5\n        ? delta / (2 - max - min)\n        : delta / (max + min)\n    const h = isGrey\n      ? 0\n      : max === r\n        ? ((g - b) / delta + (g < b ? 6 : 0)) / 6\n        : max === g\n          ? ((b - r) / delta + 2) / 6\n          : max === b\n            ? ((r - g) / delta + 4) / 6\n            : 0\n\n    // Construct and return the new color\n    const color = new Color(360 * h, 100 * s, 100 * l, 'hsl')\n    return color\n  }\n\n  init(a = 0, b = 0, c = 0, d = 0, space = 'rgb') {\n    // This catches the case when a falsy value is passed like ''\n    a = !a ? 0 : a\n\n    // Reset all values in case the init function is rerun with new color space\n    if (this.space) {\n      for (const component in this.space) {\n        delete this[this.space[component]]\n      }\n    }\n\n    if (typeof a === 'number') {\n      // Allow for the case that we don't need d...\n      space = typeof d === 'string' ? d : space\n      d = typeof d === 'string' ? 0 : d\n\n      // Assign the values straight to the color\n      Object.assign(this, { _a: a, _b: b, _c: c, _d: d, space })\n      // If the user gave us an array, make the color from it\n    } else if (a instanceof Array) {\n      this.space = b || (typeof a[3] === 'string' ? a[3] : a[4]) || 'rgb'\n      Object.assign(this, { _a: a[0], _b: a[1], _c: a[2], _d: a[3] || 0 })\n    } else if (a instanceof Object) {\n      // Set the object up and assign its values directly\n      const values = getParameters(a, b)\n      Object.assign(this, values)\n    } else if (typeof a === 'string') {\n      if (isRgb.test(a)) {\n        const noWhitespace = a.replace(whitespace, '')\n        const [_a, _b, _c] = rgb\n          .exec(noWhitespace)\n          .slice(1, 4)\n          .map((v) => parseInt(v))\n        Object.assign(this, { _a, _b, _c, _d: 0, space: 'rgb' })\n      } else if (isHex.test(a)) {\n        const hexParse = (v) => parseInt(v, 16)\n        const [, _a, _b, _c] = hex.exec(sixDigitHex(a)).map(hexParse)\n        Object.assign(this, { _a, _b, _c, _d: 0, space: 'rgb' })\n      } else throw Error(\"Unsupported string format, can't construct Color\")\n    }\n\n    // Now add the components as a convenience\n    const { _a, _b, _c, _d } = this\n    const components =\n      this.space === 'rgb'\n        ? { r: _a, g: _b, b: _c }\n        : this.space === 'xyz'\n          ? { x: _a, y: _b, z: _c }\n          : this.space === 'hsl'\n            ? { h: _a, s: _b, l: _c }\n            : this.space === 'lab'\n              ? { l: _a, a: _b, b: _c }\n              : this.space === 'lch'\n                ? { l: _a, c: _b, h: _c }\n                : this.space === 'cmyk'\n                  ? { c: _a, m: _b, y: _c, k: _d }\n                  : {}\n    Object.assign(this, components)\n  }\n\n  lab() {\n    // Get the xyz color\n    const { x, y, z } = this.xyz()\n\n    // Get the lab components\n    const l = 116 * y - 16\n    const a = 500 * (x - y)\n    const b = 200 * (y - z)\n\n    // Construct and return a new color\n    const color = new Color(l, a, b, 'lab')\n    return color\n  }\n\n  lch() {\n    // Get the lab color directly\n    const { l, a, b } = this.lab()\n\n    // Get the chromaticity and the hue using polar coordinates\n    const c = Math.sqrt(a ** 2 + b ** 2)\n    let h = (180 * Math.atan2(b, a)) / Math.PI\n    if (h < 0) {\n      h *= -1\n      h = 360 - h\n    }\n\n    // Make a new color and return it\n    const color = new Color(l, c, h, 'lch')\n    return color\n  }\n  /*\n  Conversion Methods\n  */\n\n  rgb() {\n    if (this.space === 'rgb') {\n      return this\n    } else if (cieSpace(this.space)) {\n      // Convert to the xyz color space\n      let { x, y, z } = this\n      if (this.space === 'lab' || this.space === 'lch') {\n        // Get the values in the lab space\n        let { l, a, b } = this\n        if (this.space === 'lch') {\n          const { c, h } = this\n          const dToR = Math.PI / 180\n          a = c * Math.cos(dToR * h)\n          b = c * Math.sin(dToR * h)\n        }\n\n        // Undo the nonlinear function\n        const yL = (l + 16) / 116\n        const xL = a / 500 + yL\n        const zL = yL - b / 200\n\n        // Get the xyz values\n        const ct = 16 / 116\n        const mx = 0.008856\n        const nm = 7.787\n        x = 0.95047 * (xL ** 3 > mx ? xL ** 3 : (xL - ct) / nm)\n        y = 1.0 * (yL ** 3 > mx ? yL ** 3 : (yL - ct) / nm)\n        z = 1.08883 * (zL ** 3 > mx ? zL ** 3 : (zL - ct) / nm)\n      }\n\n      // Convert xyz to unbounded rgb values\n      const rU = x * 3.2406 + y * -1.5372 + z * -0.4986\n      const gU = x * -0.9689 + y * 1.8758 + z * 0.0415\n      const bU = x * 0.0557 + y * -0.204 + z * 1.057\n\n      // Convert the values to true rgb values\n      const pow = Math.pow\n      const bd = 0.0031308\n      const r = rU > bd ? 1.055 * pow(rU, 1 / 2.4) - 0.055 : 12.92 * rU\n      const g = gU > bd ? 1.055 * pow(gU, 1 / 2.4) - 0.055 : 12.92 * gU\n      const b = bU > bd ? 1.055 * pow(bU, 1 / 2.4) - 0.055 : 12.92 * bU\n\n      // Make and return the color\n      const color = new Color(255 * r, 255 * g, 255 * b)\n      return color\n    } else if (this.space === 'hsl') {\n      // https://bgrins.github.io/TinyColor/docs/tinycolor.html\n      // Get the current hsl values\n      let { h, s, l } = this\n      h /= 360\n      s /= 100\n      l /= 100\n\n      // If we are grey, then just make the color directly\n      if (s === 0) {\n        l *= 255\n        const color = new Color(l, l, l)\n        return color\n      }\n\n      // TODO I have no idea what this does :D If you figure it out, tell me!\n      const q = l < 0.5 ? l * (1 + s) : l + s - l * s\n      const p = 2 * l - q\n\n      // Get the rgb values\n      const r = 255 * hueToRgb(p, q, h + 1 / 3)\n      const g = 255 * hueToRgb(p, q, h)\n      const b = 255 * hueToRgb(p, q, h - 1 / 3)\n\n      // Make a new color\n      const color = new Color(r, g, b)\n      return color\n    } else if (this.space === 'cmyk') {\n      // https://gist.github.com/felipesabino/5066336\n      // Get the normalised cmyk values\n      const { c, m, y, k } = this\n\n      // Get the rgb values\n      const r = 255 * (1 - Math.min(1, c * (1 - k) + k))\n      const g = 255 * (1 - Math.min(1, m * (1 - k) + k))\n      const b = 255 * (1 - Math.min(1, y * (1 - k) + k))\n\n      // Form the color and return it\n      const color = new Color(r, g, b)\n      return color\n    } else {\n      return this\n    }\n  }\n\n  toArray() {\n    const { _a, _b, _c, _d, space } = this\n    return [_a, _b, _c, _d, space]\n  }\n\n  toHex() {\n    const [r, g, b] = this._clamped().map(componentHex)\n    return `#${r}${g}${b}`\n  }\n\n  toRgb() {\n    const [rV, gV, bV] = this._clamped()\n    const string = `rgb(${rV},${gV},${bV})`\n    return string\n  }\n\n  toString() {\n    return this.toHex()\n  }\n\n  xyz() {\n    // Normalise the red, green and blue values\n    const { _a: r255, _b: g255, _c: b255 } = this.rgb()\n    const [r, g, b] = [r255, g255, b255].map((v) => v / 255)\n\n    // Convert to the lab rgb space\n    const rL = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92\n    const gL = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92\n    const bL = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92\n\n    // Convert to the xyz color space without bounding the values\n    const xU = (rL * 0.4124 + gL * 0.3576 + bL * 0.1805) / 0.95047\n    const yU = (rL * 0.2126 + gL * 0.7152 + bL * 0.0722) / 1.0\n    const zU = (rL * 0.0193 + gL * 0.1192 + bL * 0.9505) / 1.08883\n\n    // Get the proper xyz values by applying the bounding\n    const x = xU > 0.008856 ? Math.pow(xU, 1 / 3) : 7.787 * xU + 16 / 116\n    const y = yU > 0.008856 ? Math.pow(yU, 1 / 3) : 7.787 * yU + 16 / 116\n    const z = zU > 0.008856 ? Math.pow(zU, 1 / 3) : 7.787 * zU + 16 / 116\n\n    // Make and return the color\n    const color = new Color(x, y, z, 'xyz')\n    return color\n  }\n\n  /*\n  Input and Output methods\n  */\n\n  _clamped() {\n    const { _a, _b, _c } = this.rgb()\n    const { max, min, round } = Math\n    const format = (v) => max(0, min(round(v), 255))\n    return [_a, _b, _c].map(format)\n  }\n\n  /*\n  Constructing colors\n  */\n}\n","import Matrix from './Matrix.js'\n\nexport default class Point {\n  // Initialize\n  constructor(...args) {\n    this.init(...args)\n  }\n\n  // Clone point\n  clone() {\n    return new Point(this)\n  }\n\n  init(x, y) {\n    const base = { x: 0, y: 0 }\n\n    // ensure source as object\n    const source = Array.isArray(x)\n      ? { x: x[0], y: x[1] }\n      : typeof x === 'object'\n        ? { x: x.x, y: x.y }\n        : { x: x, y: y }\n\n    // merge source\n    this.x = source.x == null ? base.x : source.x\n    this.y = source.y == null ? base.y : source.y\n\n    return this\n  }\n\n  toArray() {\n    return [this.x, this.y]\n  }\n\n  transform(m) {\n    return this.clone().transformO(m)\n  }\n\n  // Transform point with matrix\n  transformO(m) {\n    if (!Matrix.isMatrixLike(m)) {\n      m = new Matrix(m)\n    }\n\n    const { x, y } = this\n\n    // Perform the matrix multiplication\n    this.x = m.a * x + m.c * y + m.e\n    this.y = m.b * x + m.d * y + m.f\n\n    return this\n  }\n}\n\nexport function point(x, y) {\n  return new Point(x, y).transformO(this.screenCTM().inverseO())\n}\n","import { delimiter } from '../modules/core/regex.js'\nimport { radians } from '../utils/utils.js'\nimport { register } from '../utils/adopter.js'\nimport Element from '../elements/Element.js'\nimport Point from './Point.js'\n\nfunction closeEnough(a, b, threshold) {\n  return Math.abs(b - a) < (threshold || 1e-6)\n}\n\nexport default class Matrix {\n  constructor(...args) {\n    this.init(...args)\n  }\n\n  static formatTransforms(o) {\n    // Get all of the parameters required to form the matrix\n    const flipBoth = o.flip === 'both' || o.flip === true\n    const flipX = o.flip && (flipBoth || o.flip === 'x') ? -1 : 1\n    const flipY = o.flip && (flipBoth || o.flip === 'y') ? -1 : 1\n    const skewX =\n      o.skew && o.skew.length\n        ? o.skew[0]\n        : isFinite(o.skew)\n          ? o.skew\n          : isFinite(o.skewX)\n            ? o.skewX\n            : 0\n    const skewY =\n      o.skew && o.skew.length\n        ? o.skew[1]\n        : isFinite(o.skew)\n          ? o.skew\n          : isFinite(o.skewY)\n            ? o.skewY\n            : 0\n    const scaleX =\n      o.scale && o.scale.length\n        ? o.scale[0] * flipX\n        : isFinite(o.scale)\n          ? o.scale * flipX\n          : isFinite(o.scaleX)\n            ? o.scaleX * flipX\n            : flipX\n    const scaleY =\n      o.scale && o.scale.length\n        ? o.scale[1] * flipY\n        : isFinite(o.scale)\n          ? o.scale * flipY\n          : isFinite(o.scaleY)\n            ? o.scaleY * flipY\n            : flipY\n    const shear = o.shear || 0\n    const theta = o.rotate || o.theta || 0\n    const origin = new Point(\n      o.origin || o.around || o.ox || o.originX,\n      o.oy || o.originY\n    )\n    const ox = origin.x\n    const oy = origin.y\n    // We need Point to be invalid if nothing was passed because we cannot default to 0 here. That is why NaN\n    const position = new Point(\n      o.position || o.px || o.positionX || NaN,\n      o.py || o.positionY || NaN\n    )\n    const px = position.x\n    const py = position.y\n    const translate = new Point(\n      o.translate || o.tx || o.translateX,\n      o.ty || o.translateY\n    )\n    const tx = translate.x\n    const ty = translate.y\n    const relative = new Point(\n      o.relative || o.rx || o.relativeX,\n      o.ry || o.relativeY\n    )\n    const rx = relative.x\n    const ry = relative.y\n\n    // Populate all of the values\n    return {\n      scaleX,\n      scaleY,\n      skewX,\n      skewY,\n      shear,\n      theta,\n      rx,\n      ry,\n      tx,\n      ty,\n      ox,\n      oy,\n      px,\n      py\n    }\n  }\n\n  static fromArray(a) {\n    return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\n  }\n\n  static isMatrixLike(o) {\n    return (\n      o.a != null ||\n      o.b != null ||\n      o.c != null ||\n      o.d != null ||\n      o.e != null ||\n      o.f != null\n    )\n  }\n\n  // left matrix, right matrix, target matrix which is overwritten\n  static matrixMultiply(l, r, o) {\n    // Work out the product directly\n    const a = l.a * r.a + l.c * r.b\n    const b = l.b * r.a + l.d * r.b\n    const c = l.a * r.c + l.c * r.d\n    const d = l.b * r.c + l.d * r.d\n    const e = l.e + l.a * r.e + l.c * r.f\n    const f = l.f + l.b * r.e + l.d * r.f\n\n    // make sure to use local variables because l/r and o could be the same\n    o.a = a\n    o.b = b\n    o.c = c\n    o.d = d\n    o.e = e\n    o.f = f\n\n    return o\n  }\n\n  around(cx, cy, matrix) {\n    return this.clone().aroundO(cx, cy, matrix)\n  }\n\n  // Transform around a center point\n  aroundO(cx, cy, matrix) {\n    const dx = cx || 0\n    const dy = cy || 0\n    return this.translateO(-dx, -dy).lmultiplyO(matrix).translateO(dx, dy)\n  }\n\n  // Clones this matrix\n  clone() {\n    return new Matrix(this)\n  }\n\n  // Decomposes this matrix into its affine parameters\n  decompose(cx = 0, cy = 0) {\n    // Get the parameters from the matrix\n    const a = this.a\n    const b = this.b\n    const c = this.c\n    const d = this.d\n    const e = this.e\n    const f = this.f\n\n    // Figure out if the winding direction is clockwise or counterclockwise\n    const determinant = a * d - b * c\n    const ccw = determinant > 0 ? 1 : -1\n\n    // Since we only shear in x, we can use the x basis to get the x scale\n    // and the rotation of the resulting matrix\n    const sx = ccw * Math.sqrt(a * a + b * b)\n    const thetaRad = Math.atan2(ccw * b, ccw * a)\n    const theta = (180 / Math.PI) * thetaRad\n    const ct = Math.cos(thetaRad)\n    const st = Math.sin(thetaRad)\n\n    // We can then solve the y basis vector simultaneously to get the other\n    // two affine parameters directly from these parameters\n    const lam = (a * c + b * d) / determinant\n    const sy = (c * sx) / (lam * a - b) || (d * sx) / (lam * b + a)\n\n    // Use the translations\n    const tx = e - cx + cx * ct * sx + cy * (lam * ct * sx - st * sy)\n    const ty = f - cy + cx * st * sx + cy * (lam * st * sx + ct * sy)\n\n    // Construct the decomposition and return it\n    return {\n      // Return the affine parameters\n      scaleX: sx,\n      scaleY: sy,\n      shear: lam,\n      rotate: theta,\n      translateX: tx,\n      translateY: ty,\n      originX: cx,\n      originY: cy,\n\n      // Return the matrix parameters\n      a: this.a,\n      b: this.b,\n      c: this.c,\n      d: this.d,\n      e: this.e,\n      f: this.f\n    }\n  }\n\n  // Check if two matrices are equal\n  equals(other) {\n    if (other === this) return true\n    const comp = new Matrix(other)\n    return (\n      closeEnough(this.a, comp.a) &&\n      closeEnough(this.b, comp.b) &&\n      closeEnough(this.c, comp.c) &&\n      closeEnough(this.d, comp.d) &&\n      closeEnough(this.e, comp.e) &&\n      closeEnough(this.f, comp.f)\n    )\n  }\n\n  // Flip matrix on x or y, at a given offset\n  flip(axis, around) {\n    return this.clone().flipO(axis, around)\n  }\n\n  flipO(axis, around) {\n    return axis === 'x'\n      ? this.scaleO(-1, 1, around, 0)\n      : axis === 'y'\n        ? this.scaleO(1, -1, 0, around)\n        : this.scaleO(-1, -1, axis, around || axis) // Define an x, y flip point\n  }\n\n  // Initialize\n  init(source) {\n    const base = Matrix.fromArray([1, 0, 0, 1, 0, 0])\n\n    // ensure source as object\n    source =\n      source instanceof Element\n        ? source.matrixify()\n        : typeof source === 'string'\n          ? Matrix.fromArray(source.split(delimiter).map(parseFloat))\n          : Array.isArray(source)\n            ? Matrix.fromArray(source)\n            : typeof source === 'object' && Matrix.isMatrixLike(source)\n              ? source\n              : typeof source === 'object'\n                ? new Matrix().transform(source)\n                : arguments.length === 6\n                  ? Matrix.fromArray([].slice.call(arguments))\n                  : base\n\n    // Merge the source matrix with the base matrix\n    this.a = source.a != null ? source.a : base.a\n    this.b = source.b != null ? source.b : base.b\n    this.c = source.c != null ? source.c : base.c\n    this.d = source.d != null ? source.d : base.d\n    this.e = source.e != null ? source.e : base.e\n    this.f = source.f != null ? source.f : base.f\n\n    return this\n  }\n\n  inverse() {\n    return this.clone().inverseO()\n  }\n\n  // Inverses matrix\n  inverseO() {\n    // Get the current parameters out of the matrix\n    const a = this.a\n    const b = this.b\n    const c = this.c\n    const d = this.d\n    const e = this.e\n    const f = this.f\n\n    // Invert the 2x2 matrix in the top left\n    const det = a * d - b * c\n    if (!det) throw new Error('Cannot invert ' + this)\n\n    // Calculate the top 2x2 matrix\n    const na = d / det\n    const nb = -b / det\n    const nc = -c / det\n    const nd = a / det\n\n    // Apply the inverted matrix to the top right\n    const ne = -(na * e + nc * f)\n    const nf = -(nb * e + nd * f)\n\n    // Construct the inverted matrix\n    this.a = na\n    this.b = nb\n    this.c = nc\n    this.d = nd\n    this.e = ne\n    this.f = nf\n\n    return this\n  }\n\n  lmultiply(matrix) {\n    return this.clone().lmultiplyO(matrix)\n  }\n\n  lmultiplyO(matrix) {\n    const r = this\n    const l = matrix instanceof Matrix ? matrix : new Matrix(matrix)\n\n    return Matrix.matrixMultiply(l, r, this)\n  }\n\n  // Left multiplies by the given matrix\n  multiply(matrix) {\n    return this.clone().multiplyO(matrix)\n  }\n\n  multiplyO(matrix) {\n    // Get the matrices\n    const l = this\n    const r = matrix instanceof Matrix ? matrix : new Matrix(matrix)\n\n    return Matrix.matrixMultiply(l, r, this)\n  }\n\n  // Rotate matrix\n  rotate(r, cx, cy) {\n    return this.clone().rotateO(r, cx, cy)\n  }\n\n  rotateO(r, cx = 0, cy = 0) {\n    // Convert degrees to radians\n    r = radians(r)\n\n    const cos = Math.cos(r)\n    const sin = Math.sin(r)\n\n    const { a, b, c, d, e, f } = this\n\n    this.a = a * cos - b * sin\n    this.b = b * cos + a * sin\n    this.c = c * cos - d * sin\n    this.d = d * cos + c * sin\n    this.e = e * cos - f * sin + cy * sin - cx * cos + cx\n    this.f = f * cos + e * sin - cx * sin - cy * cos + cy\n\n    return this\n  }\n\n  // Scale matrix\n  scale() {\n    return this.clone().scaleO(...arguments)\n  }\n\n  scaleO(x, y = x, cx = 0, cy = 0) {\n    // Support uniform scaling\n    if (arguments.length === 3) {\n      cy = cx\n      cx = y\n      y = x\n    }\n\n    const { a, b, c, d, e, f } = this\n\n    this.a = a * x\n    this.b = b * y\n    this.c = c * x\n    this.d = d * y\n    this.e = e * x - cx * x + cx\n    this.f = f * y - cy * y + cy\n\n    return this\n  }\n\n  // Shear matrix\n  shear(a, cx, cy) {\n    return this.clone().shearO(a, cx, cy)\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  shearO(lx, cx = 0, cy = 0) {\n    const { a, b, c, d, e, f } = this\n\n    this.a = a + b * lx\n    this.c = c + d * lx\n    this.e = e + f * lx - cy * lx\n\n    return this\n  }\n\n  // Skew Matrix\n  skew() {\n    return this.clone().skewO(...arguments)\n  }\n\n  skewO(x, y = x, cx = 0, cy = 0) {\n    // support uniformal skew\n    if (arguments.length === 3) {\n      cy = cx\n      cx = y\n      y = x\n    }\n\n    // Convert degrees to radians\n    x = radians(x)\n    y = radians(y)\n\n    const lx = Math.tan(x)\n    const ly = Math.tan(y)\n\n    const { a, b, c, d, e, f } = this\n\n    this.a = a + b * lx\n    this.b = b + a * ly\n    this.c = c + d * lx\n    this.d = d + c * ly\n    this.e = e + f * lx - cy * lx\n    this.f = f + e * ly - cx * ly\n\n    return this\n  }\n\n  // SkewX\n  skewX(x, cx, cy) {\n    return this.skew(x, 0, cx, cy)\n  }\n\n  // SkewY\n  skewY(y, cx, cy) {\n    return this.skew(0, y, cx, cy)\n  }\n\n  toArray() {\n    return [this.a, this.b, this.c, this.d, this.e, this.f]\n  }\n\n  // Convert matrix to string\n  toString() {\n    return (\n      'matrix(' +\n      this.a +\n      ',' +\n      this.b +\n      ',' +\n      this.c +\n      ',' +\n      this.d +\n      ',' +\n      this.e +\n      ',' +\n      this.f +\n      ')'\n    )\n  }\n\n  // Transform a matrix into another matrix by manipulating the space\n  transform(o) {\n    // Check if o is a matrix and then left multiply it directly\n    if (Matrix.isMatrixLike(o)) {\n      const matrix = new Matrix(o)\n      return matrix.multiplyO(this)\n    }\n\n    // Get the proposed transformations and the current transformations\n    const t = Matrix.formatTransforms(o)\n    const current = this\n    const { x: ox, y: oy } = new Point(t.ox, t.oy).transform(current)\n\n    // Construct the resulting matrix\n    const transformer = new Matrix()\n      .translateO(t.rx, t.ry)\n      .lmultiplyO(current)\n      .translateO(-ox, -oy)\n      .scaleO(t.scaleX, t.scaleY)\n      .skewO(t.skewX, t.skewY)\n      .shearO(t.shear)\n      .rotateO(t.theta)\n      .translateO(ox, oy)\n\n    // If we want the origin at a particular place, we force it there\n    if (isFinite(t.px) || isFinite(t.py)) {\n      const origin = new Point(ox, oy).transform(transformer)\n      // TODO: Replace t.px with isFinite(t.px)\n      // Doesn't work because t.px is also 0 if it wasn't passed\n      const dx = isFinite(t.px) ? t.px - origin.x : 0\n      const dy = isFinite(t.py) ? t.py - origin.y : 0\n      transformer.translateO(dx, dy)\n    }\n\n    // Translate now after positioning\n    transformer.translateO(t.tx, t.ty)\n    return transformer\n  }\n\n  // Translate matrix\n  translate(x, y) {\n    return this.clone().translateO(x, y)\n  }\n\n  translateO(x, y) {\n    this.e += x || 0\n    this.f += y || 0\n    return this\n  }\n\n  valueOf() {\n    return {\n      a: this.a,\n      b: this.b,\n      c: this.c,\n      d: this.d,\n      e: this.e,\n      f: this.f\n    }\n  }\n}\n\nexport function ctm() {\n  return new Matrix(this.node.getCTM())\n}\n\nexport function screenCTM() {\n  try {\n    /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\n       This is needed because FF does not return the transformation matrix\n       for the inner coordinate system when getScreenCTM() is called on nested svgs.\n       However all other Browsers do that */\n    if (typeof this.isRoot === 'function' && !this.isRoot()) {\n      const rect = this.rect(1, 1)\n      const m = rect.node.getScreenCTM()\n      rect.remove()\n      return new Matrix(m)\n    }\n    return new Matrix(this.node.getScreenCTM())\n  } catch (e) {\n    console.warn(\n      `Cannot get CTM from SVG node ${this.node.nodeName}. Is the element rendered?`\n    )\n    return new Matrix()\n  }\n}\n\nregister(Matrix, 'Matrix')\n","import { globals } from '../../utils/window.js'\nimport { makeInstance } from '../../utils/adopter.js'\n\nexport default function parser() {\n  // Reuse cached element if possible\n  if (!parser.nodes) {\n    const svg = makeInstance().size(2, 0)\n    svg.node.style.cssText = [\n      'opacity: 0',\n      'position: absolute',\n      'left: -100%',\n      'top: -100%',\n      'overflow: hidden'\n    ].join(';')\n\n    svg.attr('focusable', 'false')\n    svg.attr('aria-hidden', 'true')\n\n    const path = svg.path().node\n\n    parser.nodes = { svg, path }\n  }\n\n  if (!parser.nodes.svg.node.parentNode) {\n    const b = globals.document.body || globals.document.documentElement\n    parser.nodes.svg.addTo(b)\n  }\n\n  return parser.nodes\n}\n","import { delimiter } from '../modules/core/regex.js'\nimport { globals } from '../utils/window.js'\nimport { register } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Matrix from './Matrix.js'\nimport Point from './Point.js'\nimport parser from '../modules/core/parser.js'\n\nexport function isNulledBox(box) {\n  return !box.width && !box.height && !box.x && !box.y\n}\n\nexport function domContains(node) {\n  return (\n    node === globals.document ||\n    (\n      globals.document.documentElement.contains ||\n      function (node) {\n        // This is IE - it does not support contains() for top-level SVGs\n        while (node.parentNode) {\n          node = node.parentNode\n        }\n        return node === globals.document\n      }\n    ).call(globals.document.documentElement, node)\n  )\n}\n\nexport default class Box {\n  constructor(...args) {\n    this.init(...args)\n  }\n\n  addOffset() {\n    // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\n    this.x += globals.window.pageXOffset\n    this.y += globals.window.pageYOffset\n    return new Box(this)\n  }\n\n  init(source) {\n    const base = [0, 0, 0, 0]\n    source =\n      typeof source === 'string'\n        ? source.split(delimiter).map(parseFloat)\n        : Array.isArray(source)\n          ? source\n          : typeof source === 'object'\n            ? [\n                source.left != null ? source.left : source.x,\n                source.top != null ? source.top : source.y,\n                source.width,\n                source.height\n              ]\n            : arguments.length === 4\n              ? [].slice.call(arguments)\n              : base\n\n    this.x = source[0] || 0\n    this.y = source[1] || 0\n    this.width = this.w = source[2] || 0\n    this.height = this.h = source[3] || 0\n\n    // Add more bounding box properties\n    this.x2 = this.x + this.w\n    this.y2 = this.y + this.h\n    this.cx = this.x + this.w / 2\n    this.cy = this.y + this.h / 2\n\n    return this\n  }\n\n  isNulled() {\n    return isNulledBox(this)\n  }\n\n  // Merge rect box with another, return a new instance\n  merge(box) {\n    const x = Math.min(this.x, box.x)\n    const y = Math.min(this.y, box.y)\n    const width = Math.max(this.x + this.width, box.x + box.width) - x\n    const height = Math.max(this.y + this.height, box.y + box.height) - y\n\n    return new Box(x, y, width, height)\n  }\n\n  toArray() {\n    return [this.x, this.y, this.width, this.height]\n  }\n\n  toString() {\n    return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height\n  }\n\n  transform(m) {\n    if (!(m instanceof Matrix)) {\n      m = new Matrix(m)\n    }\n\n    let xMin = Infinity\n    let xMax = -Infinity\n    let yMin = Infinity\n    let yMax = -Infinity\n\n    const pts = [\n      new Point(this.x, this.y),\n      new Point(this.x2, this.y),\n      new Point(this.x, this.y2),\n      new Point(this.x2, this.y2)\n    ]\n\n    pts.forEach(function (p) {\n      p = p.transform(m)\n      xMin = Math.min(xMin, p.x)\n      xMax = Math.max(xMax, p.x)\n      yMin = Math.min(yMin, p.y)\n      yMax = Math.max(yMax, p.y)\n    })\n\n    return new Box(xMin, yMin, xMax - xMin, yMax - yMin)\n  }\n}\n\nfunction getBox(el, getBBoxFn, retry) {\n  let box\n\n  try {\n    // Try to get the box with the provided function\n    box = getBBoxFn(el.node)\n\n    // If the box is worthless and not even in the dom, retry\n    // by throwing an error here...\n    if (isNulledBox(box) && !domContains(el.node)) {\n      throw new Error('Element not in the dom')\n    }\n  } catch (e) {\n    // ... and calling the retry handler here\n    box = retry(el)\n  }\n\n  return box\n}\n\nexport function bbox() {\n  // Function to get bbox is getBBox()\n  const getBBox = (node) => node.getBBox()\n\n  // Take all measures so that a stupid browser renders the element\n  // so we can get the bbox from it when we try again\n  const retry = (el) => {\n    try {\n      const clone = el.clone().addTo(parser().svg).show()\n      const box = clone.node.getBBox()\n      clone.remove()\n      return box\n    } catch (e) {\n      // We give up...\n      throw new Error(\n        `Getting bbox of element \"${\n          el.node.nodeName\n        }\" is not possible: ${e.toString()}`\n      )\n    }\n  }\n\n  const box = getBox(this, getBBox, retry)\n  const bbox = new Box(box)\n\n  return bbox\n}\n\nexport function rbox(el) {\n  const getRBox = (node) => node.getBoundingClientRect()\n  const retry = (el) => {\n    // There is no point in trying tricks here because if we insert the element into the dom ourselves\n    // it obviously will be at the wrong position\n    throw new Error(\n      `Getting rbox of element \"${el.node.nodeName}\" is not possible`\n    )\n  }\n\n  const box = getBox(this, getRBox, retry)\n  const rbox = new Box(box)\n\n  // If an element was passed, we want the bbox in the coordinate system of that element\n  if (el) {\n    return rbox.transform(el.screenCTM().inverseO())\n  }\n\n  // Else we want it in absolute screen coordinates\n  // Therefore we need to add the scrollOffset\n  return rbox.addOffset()\n}\n\n// Checks whether the given point is inside the bounding box\nexport function inside(x, y) {\n  const box = this.bbox()\n\n  return (\n    x > box.x && y > box.y && x < box.x + box.width && y < box.y + box.height\n  )\n}\n\nregisterMethods({\n  viewbox: {\n    viewbox(x, y, width, height) {\n      // act as getter\n      if (x == null) return new Box(this.attr('viewBox'))\n\n      // act as setter\n      return this.attr('viewBox', new Box(x, y, width, height))\n    },\n\n    zoom(level, point) {\n      // Its best to rely on the attributes here and here is why:\n      // clientXYZ: Doesn't work on non-root svgs because they dont have a CSSBox (silly!)\n      // getBoundingClientRect: Doesn't work because Chrome just ignores width and height of nested svgs completely\n      //                        that means, their clientRect is always as big as the content.\n      //                        Furthermore this size is incorrect if the element is further transformed by its parents\n      // computedStyle: Only returns meaningful values if css was used with px. We dont go this route here!\n      // getBBox: returns the bounding box of its content - that doesn't help!\n      let { width, height } = this.attr(['width', 'height'])\n\n      // Width and height is a string when a number with a unit is present which we can't use\n      // So we try clientXYZ\n      if (\n        (!width && !height) ||\n        typeof width === 'string' ||\n        typeof height === 'string'\n      ) {\n        width = this.node.clientWidth\n        height = this.node.clientHeight\n      }\n\n      // Giving up...\n      if (!width || !height) {\n        throw new Error(\n          'Impossible to get absolute width and height. Please provide an absolute width and height attribute on the zooming element'\n        )\n      }\n\n      const v = this.viewbox()\n\n      const zoomX = width / v.width\n      const zoomY = height / v.height\n      const zoom = Math.min(zoomX, zoomY)\n\n      if (level == null) {\n        return zoom\n      }\n\n      let zoomAmount = zoom / level\n\n      // Set the zoomAmount to the highest value which is safe to process and recover from\n      // The * 100 is a bit of wiggle room for the matrix transformation\n      if (zoomAmount === Infinity) zoomAmount = Number.MAX_SAFE_INTEGER / 100\n\n      point =\n        point || new Point(width / 2 / zoomX + v.x, height / 2 / zoomY + v.y)\n\n      const box = new Box(v).transform(\n        new Matrix({ scale: zoomAmount, origin: point })\n      )\n\n      return this.viewbox(box)\n    }\n  }\n})\n\nregister(Box, 'Box')\n","import { extend } from '../utils/adopter.js'\n// import { subClassArray } from './ArrayPolyfill.js'\n\nclass List extends Array {\n  constructor(arr = [], ...args) {\n    super(arr, ...args)\n    if (typeof arr === 'number') return this\n    this.length = 0\n    this.push(...arr)\n  }\n}\n\n/* = subClassArray('List', Array, function (arr = []) {\n  // This catches the case, that native map tries to create an array with new Array(1)\n  if (typeof arr === 'number') return this\n  this.length = 0\n  this.push(...arr)\n}) */\n\nexport default List\n\nextend([List], {\n  each(fnOrMethodName, ...args) {\n    if (typeof fnOrMethodName === 'function') {\n      return this.map((el, i, arr) => {\n        return fnOrMethodName.call(el, el, i, arr)\n      })\n    } else {\n      return this.map((el) => {\n        return el[fnOrMethodName](...args)\n      })\n    }\n  },\n\n  toArray() {\n    return Array.prototype.concat.apply([], this)\n  }\n})\n\nconst reserved = ['toArray', 'constructor', 'each']\n\nList.extend = function (methods) {\n  methods = methods.reduce((obj, name) => {\n    // Don't overwrite own methods\n    if (reserved.includes(name)) return obj\n\n    // Don't add private methods\n    if (name[0] === '_') return obj\n\n    // Allow access to original Array methods through a prefix\n    if (name in Array.prototype) {\n      obj['$' + name] = Array.prototype[name]\n    }\n\n    // Relay every call to each()\n    obj[name] = function (...attrs) {\n      return this.each(name, ...attrs)\n    }\n    return obj\n  }, {})\n\n  extend([List], methods)\n}\n","import { adopt } from '../../utils/adopter.js'\nimport { globals } from '../../utils/window.js'\nimport { map } from '../../utils/utils.js'\nimport List from '../../types/List.js'\n\nexport default function baseFind(query, parent) {\n  return new List(\n    map((parent || globals.document).querySelectorAll(query), function (node) {\n      return adopt(node)\n    })\n  )\n}\n\n// Scoped find method\nexport function find(query) {\n  return baseFind(query, this.node)\n}\n\nexport function findOne(query) {\n  return adopt(this.node.querySelector(query))\n}\n","import { delimiter } from './regex.js'\nimport { makeInstance } from '../../utils/adopter.js'\nimport { globals } from '../../utils/window.js'\n\nlet listenerId = 0\nexport const windowEvents = {}\n\nexport function getEvents(instance) {\n  let n = instance.getEventHolder()\n\n  // We dont want to save events in global space\n  if (n === globals.window) n = windowEvents\n  if (!n.events) n.events = {}\n  return n.events\n}\n\nexport function getEventTarget(instance) {\n  return instance.getEventTarget()\n}\n\nexport function clearEvents(instance) {\n  let n = instance.getEventHolder()\n  if (n === globals.window) n = windowEvents\n  if (n.events) n.events = {}\n}\n\n// Add event binder in the SVG namespace\nexport function on(node, events, listener, binding, options) {\n  const l = listener.bind(binding || node)\n  const instance = makeInstance(node)\n  const bag = getEvents(instance)\n  const n = getEventTarget(instance)\n\n  // events can be an array of events or a string of events\n  events = Array.isArray(events) ? events : events.split(delimiter)\n\n  // add id to listener\n  if (!listener._svgjsListenerId) {\n    listener._svgjsListenerId = ++listenerId\n  }\n\n  events.forEach(function (event) {\n    const ev = event.split('.')[0]\n    const ns = event.split('.')[1] || '*'\n\n    // ensure valid object\n    bag[ev] = bag[ev] || {}\n    bag[ev][ns] = bag[ev][ns] || {}\n\n    // reference listener\n    bag[ev][ns][listener._svgjsListenerId] = l\n\n    // add listener\n    n.addEventListener(ev, l, options || false)\n  })\n}\n\n// Add event unbinder in the SVG namespace\nexport function off(node, events, listener, options) {\n  const instance = makeInstance(node)\n  const bag = getEvents(instance)\n  const n = getEventTarget(instance)\n\n  // listener can be a function or a number\n  if (typeof listener === 'function') {\n    listener = listener._svgjsListenerId\n    if (!listener) return\n  }\n\n  // events can be an array of events or a string or undefined\n  events = Array.isArray(events) ? events : (events || '').split(delimiter)\n\n  events.forEach(function (event) {\n    const ev = event && event.split('.')[0]\n    const ns = event && event.split('.')[1]\n    let namespace, l\n\n    if (listener) {\n      // remove listener reference\n      if (bag[ev] && bag[ev][ns || '*']) {\n        // removeListener\n        n.removeEventListener(\n          ev,\n          bag[ev][ns || '*'][listener],\n          options || false\n        )\n\n        delete bag[ev][ns || '*'][listener]\n      }\n    } else if (ev && ns) {\n      // remove all listeners for a namespaced event\n      if (bag[ev] && bag[ev][ns]) {\n        for (l in bag[ev][ns]) {\n          off(n, [ev, ns].join('.'), l)\n        }\n\n        delete bag[ev][ns]\n      }\n    } else if (ns) {\n      // remove all listeners for a specific namespace\n      for (event in bag) {\n        for (namespace in bag[event]) {\n          if (ns === namespace) {\n            off(n, [event, ns].join('.'))\n          }\n        }\n      }\n    } else if (ev) {\n      // remove all listeners for the event\n      if (bag[ev]) {\n        for (namespace in bag[ev]) {\n          off(n, [ev, namespace].join('.'))\n        }\n\n        delete bag[ev]\n      }\n    } else {\n      // remove all listeners on a given node\n      for (event in bag) {\n        off(n, event)\n      }\n\n      clearEvents(instance)\n    }\n  })\n}\n\nexport function dispatch(node, event, data, options) {\n  const n = getEventTarget(node)\n\n  // Dispatch event\n  if (event instanceof globals.window.Event) {\n    n.dispatchEvent(event)\n  } else {\n    event = new globals.window.CustomEvent(event, {\n      detail: data,\n      cancelable: true,\n      ...options\n    })\n    n.dispatchEvent(event)\n  }\n  return event\n}\n","import { dispatch, off, on } from '../modules/core/event.js'\nimport { register } from '../utils/adopter.js'\nimport Base from './Base.js'\n\nexport default class EventTarget extends Base {\n  addEventListener() {}\n\n  dispatch(event, data, options) {\n    return dispatch(this, event, data, options)\n  }\n\n  dispatchEvent(event) {\n    const bag = this.getEventHolder().events\n    if (!bag) return true\n\n    const events = bag[event.type]\n\n    for (const i in events) {\n      for (const j in events[i]) {\n        events[i][j](event)\n      }\n    }\n\n    return !event.defaultPrevented\n  }\n\n  // Fire given event\n  fire(event, data, options) {\n    this.dispatch(event, data, options)\n    return this\n  }\n\n  getEventHolder() {\n    return this\n  }\n\n  getEventTarget() {\n    return this\n  }\n\n  // Unbind event from listener\n  off(event, listener, options) {\n    off(this, event, listener, options)\n    return this\n  }\n\n  // Bind given event to listener\n  on(event, listener, binding, options) {\n    on(this, event, listener, binding, options)\n    return this\n  }\n\n  removeEventListener() {}\n}\n\nregister(EventTarget, 'EventTarget')\n","export function noop() {}\n\n// Default animation values\nexport const timeline = {\n  duration: 400,\n  ease: '>',\n  delay: 0\n}\n\n// Default attribute values\nexport const attrs = {\n  // fill and stroke\n  'fill-opacity': 1,\n  'stroke-opacity': 1,\n  'stroke-width': 0,\n  'stroke-linejoin': 'miter',\n  'stroke-linecap': 'butt',\n  fill: '#000000',\n  stroke: '#000000',\n  opacity: 1,\n\n  // position\n  x: 0,\n  y: 0,\n  cx: 0,\n  cy: 0,\n\n  // size\n  width: 0,\n  height: 0,\n\n  // radius\n  r: 0,\n  rx: 0,\n  ry: 0,\n\n  // gradient\n  offset: 0,\n  'stop-opacity': 1,\n  'stop-color': '#000000',\n\n  // text\n  'text-anchor': 'start'\n}\n","import { delimiter } from '../modules/core/regex.js'\n\nexport default class SVGArray extends Array {\n  constructor(...args) {\n    super(...args)\n    this.init(...args)\n  }\n\n  clone() {\n    return new this.constructor(this)\n  }\n\n  init(arr) {\n    // This catches the case, that native map tries to create an array with new Array(1)\n    if (typeof arr === 'number') return this\n    this.length = 0\n    this.push(...this.parse(arr))\n    return this\n  }\n\n  // Parse whitespace separated string\n  parse(array = []) {\n    // If already is an array, no need to parse it\n    if (array instanceof Array) return array\n\n    return array.trim().split(delimiter).map(parseFloat)\n  }\n\n  toArray() {\n    return Array.prototype.concat.apply([], this)\n  }\n\n  toSet() {\n    return new Set(this)\n  }\n\n  toString() {\n    return this.join(' ')\n  }\n\n  // Flattens the array if needed\n  valueOf() {\n    const ret = []\n    ret.push(...this)\n    return ret\n  }\n}\n","import { numberAndUnit } from '../modules/core/regex.js'\n\n// Module for unit conversions\nexport default class SVGNumber {\n  // Initialize\n  constructor(...args) {\n    this.init(...args)\n  }\n\n  convert(unit) {\n    return new SVGNumber(this.value, unit)\n  }\n\n  // Divide number\n  divide(number) {\n    number = new SVGNumber(number)\n    return new SVGNumber(this / number, this.unit || number.unit)\n  }\n\n  init(value, unit) {\n    unit = Array.isArray(value) ? value[1] : unit\n    value = Array.isArray(value) ? value[0] : value\n\n    // initialize defaults\n    this.value = 0\n    this.unit = unit || ''\n\n    // parse value\n    if (typeof value === 'number') {\n      // ensure a valid numeric value\n      this.value = isNaN(value)\n        ? 0\n        : !isFinite(value)\n          ? value < 0\n            ? -3.4e38\n            : +3.4e38\n          : value\n    } else if (typeof value === 'string') {\n      unit = value.match(numberAndUnit)\n\n      if (unit) {\n        // make value numeric\n        this.value = parseFloat(unit[1])\n\n        // normalize\n        if (unit[5] === '%') {\n          this.value /= 100\n        } else if (unit[5] === 's') {\n          this.value *= 1000\n        }\n\n        // store unit\n        this.unit = unit[5]\n      }\n    } else {\n      if (value instanceof SVGNumber) {\n        this.value = value.valueOf()\n        this.unit = value.unit\n      }\n    }\n\n    return this\n  }\n\n  // Subtract number\n  minus(number) {\n    number = new SVGNumber(number)\n    return new SVGNumber(this - number, this.unit || number.unit)\n  }\n\n  // Add number\n  plus(number) {\n    number = new SVGNumber(number)\n    return new SVGNumber(this + number, this.unit || number.unit)\n  }\n\n  // Multiply number\n  times(number) {\n    number = new SVGNumber(number)\n    return new SVGNumber(this * number, this.unit || number.unit)\n  }\n\n  toArray() {\n    return [this.value, this.unit]\n  }\n\n  toJSON() {\n    return this.toString()\n  }\n\n  toString() {\n    return (\n      (this.unit === '%'\n        ? ~~(this.value * 1e8) / 1e6\n        : this.unit === 's'\n          ? this.value / 1e3\n          : this.value) + this.unit\n    )\n  }\n\n  valueOf() {\n    return this.value\n  }\n}\n","import { attrs as defaults } from './defaults.js'\nimport { isNumber } from './regex.js'\nimport Color from '../../types/Color.js'\nimport SVGArray from '../../types/SVGArray.js'\nimport SVGNumber from '../../types/SVGNumber.js'\n\nconst colorAttributes = new Set([\n  'fill',\n  'stroke',\n  'color',\n  'bgcolor',\n  'stop-color',\n  'flood-color',\n  'lighting-color'\n])\n\nconst hooks = []\nexport function registerAttrHook(fn) {\n  hooks.push(fn)\n}\n\n// Set svg element attribute\nexport default function attr(attr, val, ns) {\n  // act as full getter\n  if (attr == null) {\n    // get an object of attributes\n    attr = {}\n    val = this.node.attributes\n\n    for (const node of val) {\n      attr[node.nodeName] = isNumber.test(node.nodeValue)\n        ? parseFloat(node.nodeValue)\n        : node.nodeValue\n    }\n\n    return attr\n  } else if (attr instanceof Array) {\n    // loop through array and get all values\n    return attr.reduce((last, curr) => {\n      last[curr] = this.attr(curr)\n      return last\n    }, {})\n  } else if (typeof attr === 'object' && attr.constructor === Object) {\n    // apply every attribute individually if an object is passed\n    for (val in attr) this.attr(val, attr[val])\n  } else if (val === null) {\n    // remove value\n    this.node.removeAttribute(attr)\n  } else if (val == null) {\n    // act as a getter if the first and only argument is not an object\n    val = this.node.getAttribute(attr)\n    return val == null\n      ? defaults[attr]\n      : isNumber.test(val)\n        ? parseFloat(val)\n        : val\n  } else {\n    // Loop through hooks and execute them to convert value\n    val = hooks.reduce((_val, hook) => {\n      return hook(attr, _val, this)\n    }, val)\n\n    // ensure correct numeric values (also accepts NaN and Infinity)\n    if (typeof val === 'number') {\n      val = new SVGNumber(val)\n    } else if (colorAttributes.has(attr) && Color.isColor(val)) {\n      // ensure full hex color\n      val = new Color(val)\n    } else if (val.constructor === Array) {\n      // Check for plain arrays and parse array values\n      val = new SVGArray(val)\n    }\n\n    // if the passed attribute is leading...\n    if (attr === 'leading') {\n      // ... call the leading method instead\n      if (this.leading) {\n        this.leading(val)\n      }\n    } else {\n      // set given attribute on node\n      typeof ns === 'string'\n        ? this.node.setAttributeNS(ns, attr, val.toString())\n        : this.node.setAttribute(attr, val.toString())\n    }\n\n    // rebuild if required\n    if (this.rebuild && (attr === 'font-size' || attr === 'x')) {\n      this.rebuild()\n    }\n  }\n\n  return this\n}\n","import {\n  adopt,\n  assignNewId,\n  eid,\n  extend,\n  makeInstance,\n  create,\n  register\n} from '../utils/adopter.js'\nimport { find, findOne } from '../modules/core/selector.js'\nimport { globals } from '../utils/window.js'\nimport { map } from '../utils/utils.js'\nimport { svg, html } from '../modules/core/namespaces.js'\nimport EventTarget from '../types/EventTarget.js'\nimport List from '../types/List.js'\nimport attr from '../modules/core/attr.js'\n\nexport default class Dom extends EventTarget {\n  constructor(node, attrs) {\n    super()\n    this.node = node\n    this.type = node.nodeName\n\n    if (attrs && node !== attrs) {\n      this.attr(attrs)\n    }\n  }\n\n  // Add given element at a position\n  add(element, i) {\n    element = makeInstance(element)\n\n    // If non-root svg nodes are added we have to remove their namespaces\n    if (\n      element.removeNamespace &&\n      this.node instanceof globals.window.SVGElement\n    ) {\n      element.removeNamespace()\n    }\n\n    if (i == null) {\n      this.node.appendChild(element.node)\n    } else if (element.node !== this.node.childNodes[i]) {\n      this.node.insertBefore(element.node, this.node.childNodes[i])\n    }\n\n    return this\n  }\n\n  // Add element to given container and return self\n  addTo(parent, i) {\n    return makeInstance(parent).put(this, i)\n  }\n\n  // Returns all child elements\n  children() {\n    return new List(\n      map(this.node.children, function (node) {\n        return adopt(node)\n      })\n    )\n  }\n\n  // Remove all elements in this container\n  clear() {\n    // remove children\n    while (this.node.hasChildNodes()) {\n      this.node.removeChild(this.node.lastChild)\n    }\n\n    return this\n  }\n\n  // Clone element\n  clone(deep = true, assignNewIds = true) {\n    // write dom data to the dom so the clone can pickup the data\n    this.writeDataToDom()\n\n    // clone element\n    let nodeClone = this.node.cloneNode(deep)\n    if (assignNewIds) {\n      // assign new id\n      nodeClone = assignNewId(nodeClone)\n    }\n    return new this.constructor(nodeClone)\n  }\n\n  // Iterates over all children and invokes a given block\n  each(block, deep) {\n    const children = this.children()\n    let i, il\n\n    for (i = 0, il = children.length; i < il; i++) {\n      block.apply(children[i], [i, children])\n\n      if (deep) {\n        children[i].each(block, deep)\n      }\n    }\n\n    return this\n  }\n\n  element(nodeName, attrs) {\n    return this.put(new Dom(create(nodeName), attrs))\n  }\n\n  // Get first child\n  first() {\n    return adopt(this.node.firstChild)\n  }\n\n  // Get a element at the given index\n  get(i) {\n    return adopt(this.node.childNodes[i])\n  }\n\n  getEventHolder() {\n    return this.node\n  }\n\n  getEventTarget() {\n    return this.node\n  }\n\n  // Checks if the given element is a child\n  has(element) {\n    return this.index(element) >= 0\n  }\n\n  html(htmlOrFn, outerHTML) {\n    return this.xml(htmlOrFn, outerHTML, html)\n  }\n\n  // Get / set id\n  id(id) {\n    // generate new id if no id set\n    if (typeof id === 'undefined' && !this.node.id) {\n      this.node.id = eid(this.type)\n    }\n\n    // don't set directly with this.node.id to make `null` work correctly\n    return this.attr('id', id)\n  }\n\n  // Gets index of given element\n  index(element) {\n    return [].slice.call(this.node.childNodes).indexOf(element.node)\n  }\n\n  // Get the last child\n  last() {\n    return adopt(this.node.lastChild)\n  }\n\n  // matches the element vs a css selector\n  matches(selector) {\n    const el = this.node\n    const matcher =\n      el.matches ||\n      el.matchesSelector ||\n      el.msMatchesSelector ||\n      el.mozMatchesSelector ||\n      el.webkitMatchesSelector ||\n      el.oMatchesSelector ||\n      null\n    return matcher && matcher.call(el, selector)\n  }\n\n  // Returns the parent element instance\n  parent(type) {\n    let parent = this\n\n    // check for parent\n    if (!parent.node.parentNode) return null\n\n    // get parent element\n    parent = adopt(parent.node.parentNode)\n\n    if (!type) return parent\n\n    // loop through ancestors if type is given\n    do {\n      if (\n        typeof type === 'string' ? parent.matches(type) : parent instanceof type\n      )\n        return parent\n    } while ((parent = adopt(parent.node.parentNode)))\n\n    return parent\n  }\n\n  // Basically does the same as `add()` but returns the added element instead\n  put(element, i) {\n    element = makeInstance(element)\n    this.add(element, i)\n    return element\n  }\n\n  // Add element to given container and return container\n  putIn(parent, i) {\n    return makeInstance(parent).add(this, i)\n  }\n\n  // Remove element\n  remove() {\n    if (this.parent()) {\n      this.parent().removeElement(this)\n    }\n\n    return this\n  }\n\n  // Remove a given child\n  removeElement(element) {\n    this.node.removeChild(element.node)\n\n    return this\n  }\n\n  // Replace this with element\n  replace(element) {\n    element = makeInstance(element)\n\n    if (this.node.parentNode) {\n      this.node.parentNode.replaceChild(element.node, this.node)\n    }\n\n    return element\n  }\n\n  round(precision = 2, map = null) {\n    const factor = 10 ** precision\n    const attrs = this.attr(map)\n\n    for (const i in attrs) {\n      if (typeof attrs[i] === 'number') {\n        attrs[i] = Math.round(attrs[i] * factor) / factor\n      }\n    }\n\n    this.attr(attrs)\n    return this\n  }\n\n  // Import / Export raw svg\n  svg(svgOrFn, outerSVG) {\n    return this.xml(svgOrFn, outerSVG, svg)\n  }\n\n  // Return id on string conversion\n  toString() {\n    return this.id()\n  }\n\n  words(text) {\n    // This is faster than removing all children and adding a new one\n    this.node.textContent = text\n    return this\n  }\n\n  wrap(node) {\n    const parent = this.parent()\n\n    if (!parent) {\n      return this.addTo(node)\n    }\n\n    const position = parent.index(this)\n    return parent.put(node, position).put(this)\n  }\n\n  // write svgjs data to the dom\n  writeDataToDom() {\n    // dump variables recursively\n    this.each(function () {\n      this.writeDataToDom()\n    })\n\n    return this\n  }\n\n  // Import / Export raw svg\n  xml(xmlOrFn, outerXML, ns) {\n    if (typeof xmlOrFn === 'boolean') {\n      ns = outerXML\n      outerXML = xmlOrFn\n      xmlOrFn = null\n    }\n\n    // act as getter if no svg string is given\n    if (xmlOrFn == null || typeof xmlOrFn === 'function') {\n      // The default for exports is, that the outerNode is included\n      outerXML = outerXML == null ? true : outerXML\n\n      // write svgjs data to the dom\n      this.writeDataToDom()\n      let current = this\n\n      // An export modifier was passed\n      if (xmlOrFn != null) {\n        current = adopt(current.node.cloneNode(true))\n\n        // If the user wants outerHTML we need to process this node, too\n        if (outerXML) {\n          const result = xmlOrFn(current)\n          current = result || current\n\n          // The user does not want this node? Well, then he gets nothing\n          if (result === false) return ''\n        }\n\n        // Deep loop through all children and apply modifier\n        current.each(function () {\n          const result = xmlOrFn(this)\n          const _this = result || this\n\n          // If modifier returns false, discard node\n          if (result === false) {\n            this.remove()\n\n            // If modifier returns new node, use it\n          } else if (result && this !== _this) {\n            this.replace(_this)\n          }\n        }, true)\n      }\n\n      // Return outer or inner content\n      return outerXML ? current.node.outerHTML : current.node.innerHTML\n    }\n\n    // Act as setter if we got a string\n\n    // The default for import is, that the current node is not replaced\n    outerXML = outerXML == null ? false : outerXML\n\n    // Create temporary holder\n    const well = create('wrapper', ns)\n    const fragment = globals.document.createDocumentFragment()\n\n    // Dump raw svg\n    well.innerHTML = xmlOrFn\n\n    // Transplant nodes into the fragment\n    for (let len = well.children.length; len--; ) {\n      fragment.appendChild(well.firstElementChild)\n    }\n\n    const parent = this.parent()\n\n    // Add the whole fragment at once\n    return outerXML ? this.replace(fragment) && parent : this.add(fragment)\n  }\n}\n\nextend(Dom, { attr, find, findOne })\nregister(Dom, 'Dom')\n","import { bbox, rbox, inside } from '../types/Box.js'\nimport { ctm, screenCTM } from '../types/Matrix.js'\nimport {\n  extend,\n  getClass,\n  makeInstance,\n  register,\n  root\n} from '../utils/adopter.js'\nimport { globals } from '../utils/window.js'\nimport { point } from '../types/Point.js'\nimport { proportionalSize, writeDataToDom } from '../utils/utils.js'\nimport { reference } from '../modules/core/regex.js'\nimport Dom from './Dom.js'\nimport List from '../types/List.js'\nimport SVGNumber from '../types/SVGNumber.js'\n\nexport default class Element extends Dom {\n  constructor(node, attrs) {\n    super(node, attrs)\n\n    // initialize data object\n    this.dom = {}\n\n    // create circular reference\n    this.node.instance = this\n\n    if (node.hasAttribute('data-svgjs') || node.hasAttribute('svgjs:data')) {\n      // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\n      this.setData(\n        JSON.parse(node.getAttribute('data-svgjs')) ??\n          JSON.parse(node.getAttribute('svgjs:data')) ??\n          {}\n      )\n    }\n  }\n\n  // Move element by its center\n  center(x, y) {\n    return this.cx(x).cy(y)\n  }\n\n  // Move by center over x-axis\n  cx(x) {\n    return x == null\n      ? this.x() + this.width() / 2\n      : this.x(x - this.width() / 2)\n  }\n\n  // Move by center over y-axis\n  cy(y) {\n    return y == null\n      ? this.y() + this.height() / 2\n      : this.y(y - this.height() / 2)\n  }\n\n  // Get defs\n  defs() {\n    const root = this.root()\n    return root && root.defs()\n  }\n\n  // Relative move over x and y axes\n  dmove(x, y) {\n    return this.dx(x).dy(y)\n  }\n\n  // Relative move over x axis\n  dx(x = 0) {\n    return this.x(new SVGNumber(x).plus(this.x()))\n  }\n\n  // Relative move over y axis\n  dy(y = 0) {\n    return this.y(new SVGNumber(y).plus(this.y()))\n  }\n\n  getEventHolder() {\n    return this\n  }\n\n  // Set height of element\n  height(height) {\n    return this.attr('height', height)\n  }\n\n  // Move element to given x and y values\n  move(x, y) {\n    return this.x(x).y(y)\n  }\n\n  // return array of all ancestors of given type up to the root svg\n  parents(until = this.root()) {\n    const isSelector = typeof until === 'string'\n    if (!isSelector) {\n      until = makeInstance(until)\n    }\n    const parents = new List()\n    let parent = this\n\n    while (\n      (parent = parent.parent()) &&\n      parent.node !== globals.document &&\n      parent.nodeName !== '#document-fragment'\n    ) {\n      parents.push(parent)\n\n      if (!isSelector && parent.node === until.node) {\n        break\n      }\n      if (isSelector && parent.matches(until)) {\n        break\n      }\n      if (parent.node === this.root().node) {\n        // We worked our way to the root and didn't match `until`\n        return null\n      }\n    }\n\n    return parents\n  }\n\n  // Get referenced element form attribute value\n  reference(attr) {\n    attr = this.attr(attr)\n    if (!attr) return null\n\n    const m = (attr + '').match(reference)\n    return m ? makeInstance(m[1]) : null\n  }\n\n  // Get parent document\n  root() {\n    const p = this.parent(getClass(root))\n    return p && p.root()\n  }\n\n  // set given data to the elements data property\n  setData(o) {\n    this.dom = o\n    return this\n  }\n\n  // Set element size to given width and height\n  size(width, height) {\n    const p = proportionalSize(this, width, height)\n\n    return this.width(new SVGNumber(p.width)).height(new SVGNumber(p.height))\n  }\n\n  // Set width of element\n  width(width) {\n    return this.attr('width', width)\n  }\n\n  // write svgjs data to the dom\n  writeDataToDom() {\n    writeDataToDom(this, this.dom)\n    return super.writeDataToDom()\n  }\n\n  // Move over x-axis\n  x(x) {\n    return this.attr('x', x)\n  }\n\n  // Move over y-axis\n  y(y) {\n    return this.attr('y', y)\n  }\n}\n\nextend(Element, {\n  bbox,\n  rbox,\n  inside,\n  point,\n  ctm,\n  screenCTM\n})\n\nregister(Element, 'Element')\n","import { registerMethods } from '../../utils/methods.js'\nimport Color from '../../types/Color.js'\nimport Element from '../../elements/Element.js'\nimport Matrix from '../../types/Matrix.js'\nimport Point from '../../types/Point.js'\nimport SVGNumber from '../../types/SVGNumber.js'\n\n// Define list of available attributes for stroke and fill\nconst sugar = {\n  stroke: [\n    'color',\n    'width',\n    'opacity',\n    'linecap',\n    'linejoin',\n    'miterlimit',\n    'dasharray',\n    'dashoffset'\n  ],\n  fill: ['color', 'opacity', 'rule'],\n  prefix: function (t, a) {\n    return a === 'color' ? t : t + '-' + a\n  }\n}\n\n// Add sugar for fill and stroke\n;['fill', 'stroke'].forEach(function (m) {\n  const extension = {}\n  let i\n\n  extension[m] = function (o) {\n    if (typeof o === 'undefined') {\n      return this.attr(m)\n    }\n    if (\n      typeof o === 'string' ||\n      o instanceof Color ||\n      Color.isRgb(o) ||\n      o instanceof Element\n    ) {\n      this.attr(m, o)\n    } else {\n      // set all attributes from sugar.fill and sugar.stroke list\n      for (i = sugar[m].length - 1; i >= 0; i--) {\n        if (o[sugar[m][i]] != null) {\n          this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]])\n        }\n      }\n    }\n\n    return this\n  }\n\n  registerMethods(['Element', 'Runner'], extension)\n})\n\nregisterMethods(['Element', 'Runner'], {\n  // Let the user set the matrix directly\n  matrix: function (mat, b, c, d, e, f) {\n    // Act as a getter\n    if (mat == null) {\n      return new Matrix(this)\n    }\n\n    // Act as a setter, the user can pass a matrix or a set of numbers\n    return this.attr('transform', new Matrix(mat, b, c, d, e, f))\n  },\n\n  // Map rotation to transform\n  rotate: function (angle, cx, cy) {\n    return this.transform({ rotate: angle, ox: cx, oy: cy }, true)\n  },\n\n  // Map skew to transform\n  skew: function (x, y, cx, cy) {\n    return arguments.length === 1 || arguments.length === 3\n      ? this.transform({ skew: x, ox: y, oy: cx }, true)\n      : this.transform({ skew: [x, y], ox: cx, oy: cy }, true)\n  },\n\n  shear: function (lam, cx, cy) {\n    return this.transform({ shear: lam, ox: cx, oy: cy }, true)\n  },\n\n  // Map scale to transform\n  scale: function (x, y, cx, cy) {\n    return arguments.length === 1 || arguments.length === 3\n      ? this.transform({ scale: x, ox: y, oy: cx }, true)\n      : this.transform({ scale: [x, y], ox: cx, oy: cy }, true)\n  },\n\n  // Map translate to transform\n  translate: function (x, y) {\n    return this.transform({ translate: [x, y] }, true)\n  },\n\n  // Map relative translations to transform\n  relative: function (x, y) {\n    return this.transform({ relative: [x, y] }, true)\n  },\n\n  // Map flip to transform\n  flip: function (direction = 'both', origin = 'center') {\n    if ('xybothtrue'.indexOf(direction) === -1) {\n      origin = direction\n      direction = 'both'\n    }\n\n    return this.transform({ flip: direction, origin: origin }, true)\n  },\n\n  // Opacity\n  opacity: function (value) {\n    return this.attr('opacity', value)\n  }\n})\n\nregisterMethods('radius', {\n  // Add x and y radius\n  radius: function (x, y = x) {\n    const type = (this._element || this).type\n    return type === 'radialGradient'\n      ? this.attr('r', new SVGNumber(x))\n      : this.rx(x).ry(y)\n  }\n})\n\nregisterMethods('Path', {\n  // Get path length\n  length: function () {\n    return this.node.getTotalLength()\n  },\n  // Get point at length\n  pointAt: function (length) {\n    return new Point(this.node.getPointAtLength(length))\n  }\n})\n\nregisterMethods(['Element', 'Runner'], {\n  // Set font\n  font: function (a, v) {\n    if (typeof a === 'object') {\n      for (v in a) this.font(v, a[v])\n      return this\n    }\n\n    return a === 'leading'\n      ? this.leading(v)\n      : a === 'anchor'\n        ? this.attr('text-anchor', v)\n        : a === 'size' ||\n            a === 'family' ||\n            a === 'weight' ||\n            a === 'stretch' ||\n            a === 'variant' ||\n            a === 'style'\n          ? this.attr('font-' + a, v)\n          : this.attr(a, v)\n  }\n})\n\n// Add events to elements\nconst methods = [\n  'click',\n  'dblclick',\n  'mousedown',\n  'mouseup',\n  'mouseover',\n  'mouseout',\n  'mousemove',\n  'mouseenter',\n  'mouseleave',\n  'touchstart',\n  'touchmove',\n  'touchleave',\n  'touchend',\n  'touchcancel',\n  'contextmenu',\n  'wheel',\n  'pointerdown',\n  'pointermove',\n  'pointerup',\n  'pointerleave',\n  'pointercancel'\n].reduce(function (last, event) {\n  // add event to Element\n  const fn = function (f) {\n    if (f === null) {\n      this.off(event)\n    } else {\n      this.on(event, f)\n    }\n    return this\n  }\n\n  last[event] = fn\n  return last\n}, {})\n\nregisterMethods('Element', methods)\n","import { getOrigin, isDescriptive } from '../../utils/utils.js'\nimport { delimiter, transforms } from '../core/regex.js'\nimport { registerMethods } from '../../utils/methods.js'\nimport Matrix from '../../types/Matrix.js'\n\n// Reset all transformations\nexport function untransform() {\n  return this.attr('transform', null)\n}\n\n// merge the whole transformation chain into one matrix and returns it\nexport function matrixify() {\n  const matrix = (this.attr('transform') || '')\n    // split transformations\n    .split(transforms)\n    .slice(0, -1)\n    .map(function (str) {\n      // generate key => value pairs\n      const kv = str.trim().split('(')\n      return [\n        kv[0],\n        kv[1].split(delimiter).map(function (str) {\n          return parseFloat(str)\n        })\n      ]\n    })\n    .reverse()\n    // merge every transformation into one matrix\n    .reduce(function (matrix, transform) {\n      if (transform[0] === 'matrix') {\n        return matrix.lmultiply(Matrix.fromArray(transform[1]))\n      }\n      return matrix[transform[0]].apply(matrix, transform[1])\n    }, new Matrix())\n\n  return matrix\n}\n\n// add an element to another parent without changing the visual representation on the screen\nexport function toParent(parent, i) {\n  if (this === parent) return this\n\n  if (isDescriptive(this.node)) return this.addTo(parent, i)\n\n  const ctm = this.screenCTM()\n  const pCtm = parent.screenCTM().inverse()\n\n  this.addTo(parent, i).untransform().transform(pCtm.multiply(ctm))\n\n  return this\n}\n\n// same as above with parent equals root-svg\nexport function toRoot(i) {\n  return this.toParent(this.root(), i)\n}\n\n// Add transformations\nexport function transform(o, relative) {\n  // Act as a getter if no object was passed\n  if (o == null || typeof o === 'string') {\n    const decomposed = new Matrix(this).decompose()\n    return o == null ? decomposed : decomposed[o]\n  }\n\n  if (!Matrix.isMatrixLike(o)) {\n    // Set the origin according to the defined transform\n    o = { ...o, origin: getOrigin(o, this) }\n  }\n\n  // The user can pass a boolean, an Element or an Matrix or nothing\n  const cleanRelative = relative === true ? this : relative || false\n  const result = new Matrix(cleanRelative).transform(o)\n  return this.attr('transform', result)\n}\n\nregisterMethods('Element', {\n  untransform,\n  matrixify,\n  toParent,\n  toRoot,\n  transform\n})\n","import { register } from '../utils/adopter.js'\nimport Element from './Element.js'\n\nexport default class Container extends Element {\n  flatten() {\n    this.each(function () {\n      if (this instanceof Container) {\n        return this.flatten().ungroup()\n      }\n    })\n\n    return this\n  }\n\n  ungroup(parent = this.parent(), index = parent.index(this)) {\n    // when parent != this, we want append all elements to the end\n    index = index === -1 ? parent.children().length : index\n\n    this.each(function (i, children) {\n      // reverse each\n      return children[children.length - i - 1].toParent(parent, index)\n    })\n\n    return this.remove()\n  }\n}\n\nregister(Container, 'Container')\n","import { nodeOrNew, register } from '../utils/adopter.js'\nimport Container from './Container.js'\n\nexport default class Defs extends Container {\n  constructor(node, attrs = node) {\n    super(nodeOrNew('defs', node), attrs)\n  }\n\n  flatten() {\n    return this\n  }\n\n  ungroup() {\n    return this\n  }\n}\n\nregister(Defs, 'Defs')\n","import { register } from '../utils/adopter.js'\nimport Element from './Element.js'\n\nexport default class Shape extends Element {}\n\nregister(Shape, 'Shape')\n","import SVGNumber from '../../types/SVGNumber.js'\n\n// Radius x value\nexport function rx(rx) {\n  return this.attr('rx', rx)\n}\n\n// Radius y value\nexport function ry(ry) {\n  return this.attr('ry', ry)\n}\n\n// Move over x-axis\nexport function x(x) {\n  return x == null ? this.cx() - this.rx() : this.cx(x + this.rx())\n}\n\n// Move over y-axis\nexport function y(y) {\n  return y == null ? this.cy() - this.ry() : this.cy(y + this.ry())\n}\n\n// Move by center over x-axis\nexport function cx(x) {\n  return this.attr('cx', x)\n}\n\n// Move by center over y-axis\nexport function cy(y) {\n  return this.attr('cy', y)\n}\n\n// Set width of element\nexport function width(width) {\n  return width == null ? this.rx() * 2 : this.rx(new SVGNumber(width).divide(2))\n}\n\n// Set height of element\nexport function height(height) {\n  return height == null\n    ? this.ry() * 2\n    : this.ry(new SVGNumber(height).divide(2))\n}\n","import {\n  extend,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { proportionalSize } from '../utils/utils.js'\nimport { registerMethods } from '../utils/methods.js'\nimport SVGNumber from '../types/SVGNumber.js'\nimport Shape from './Shape.js'\nimport * as circled from '../modules/core/circled.js'\n\nexport default class Ellipse extends Shape {\n  constructor(node, attrs = node) {\n    super(nodeOrNew('ellipse', node), attrs)\n  }\n\n  size(width, height) {\n    const p = proportionalSize(this, width, height)\n\n    return this.rx(new SVGNumber(p.width).divide(2)).ry(\n      new SVGNumber(p.height).divide(2)\n    )\n  }\n}\n\nextend(Ellipse, circled)\n\nregisterMethods('Container', {\n  // Create an ellipse\n  ellipse: wrapWithAttrCheck(function (width = 0, height = width) {\n    return this.put(new Ellipse()).size(width, height).move(0, 0)\n  })\n})\n\nregister(Ellipse, 'Ellipse')\n","import Dom from './Dom.js'\nimport { globals } from '../utils/window.js'\nimport { register, create } from '../utils/adopter.js'\n\nclass Fragment extends Dom {\n  constructor(node = globals.document.createDocumentFragment()) {\n    super(node)\n  }\n\n  // Import / Export raw xml\n  xml(xmlOrFn, outerXML, ns) {\n    if (typeof xmlOrFn === 'boolean') {\n      ns = outerXML\n      outerXML = xmlOrFn\n      xmlOrFn = null\n    }\n\n    // because this is a fragment we have to put all elements into a wrapper first\n    // before we can get the innerXML from it\n    if (xmlOrFn == null || typeof xmlOrFn === 'function') {\n      const wrapper = new Dom(create('wrapper', ns))\n      wrapper.add(this.node.cloneNode(true))\n\n      return wrapper.xml(false, ns)\n    }\n\n    // Act as setter if we got a string\n    return super.xml(xmlOrFn, false, ns)\n  }\n}\n\nregister(Fragment, 'Fragment')\n\nexport default Fragment\n","import SVGNumber from '../../types/SVGNumber.js'\n\nexport function from(x, y) {\n  return (this._element || this).type === 'radialGradient'\n    ? this.attr({ fx: new SVGNumber(x), fy: new SVGNumber(y) })\n    : this.attr({ x1: new SVGNumber(x), y1: new SVGNumber(y) })\n}\n\nexport function to(x, y) {\n  return (this._element || this).type === 'radialGradient'\n    ? this.attr({ cx: new SVGNumber(x), cy: new SVGNumber(y) })\n    : this.attr({ x2: new SVGNumber(x), y2: new SVGNumber(y) })\n}\n","import {\n  extend,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Box from '../types/Box.js'\nimport Container from './Container.js'\nimport baseFind from '../modules/core/selector.js'\nimport * as gradiented from '../modules/core/gradiented.js'\n\nexport default class Gradient extends Container {\n  constructor(type, attrs) {\n    super(\n      nodeOrNew(type + 'Gradient', typeof type === 'string' ? null : type),\n      attrs\n    )\n  }\n\n  // custom attr to handle transform\n  attr(a, b, c) {\n    if (a === 'transform') a = 'gradientTransform'\n    return super.attr(a, b, c)\n  }\n\n  bbox() {\n    return new Box()\n  }\n\n  targets() {\n    return baseFind('svg [fill*=' + this.id() + ']')\n  }\n\n  // Alias string conversion to fill\n  toString() {\n    return this.url()\n  }\n\n  // Update gradient\n  update(block) {\n    // remove all stops\n    this.clear()\n\n    // invoke passed block\n    if (typeof block === 'function') {\n      block.call(this, this)\n    }\n\n    return this\n  }\n\n  // Return the fill id\n  url() {\n    return 'url(#' + this.id() + ')'\n  }\n}\n\nextend(Gradient, gradiented)\n\nregisterMethods({\n  Container: {\n    // Create gradient element in defs\n    gradient(...args) {\n      return this.defs().gradient(...args)\n    }\n  },\n  // define gradient\n  Defs: {\n    gradient: wrapWithAttrCheck(function (type, block) {\n      return this.put(new Gradient(type)).update(block)\n    })\n  }\n})\n\nregister(Gradient, 'Gradient')\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Box from '../types/Box.js'\nimport Container from './Container.js'\nimport baseFind from '../modules/core/selector.js'\n\nexport default class Pattern extends Container {\n  // Initialize node\n  constructor(node, attrs = node) {\n    super(nodeOrNew('pattern', node), attrs)\n  }\n\n  // custom attr to handle transform\n  attr(a, b, c) {\n    if (a === 'transform') a = 'patternTransform'\n    return super.attr(a, b, c)\n  }\n\n  bbox() {\n    return new Box()\n  }\n\n  targets() {\n    return baseFind('svg [fill*=' + this.id() + ']')\n  }\n\n  // Alias string conversion to fill\n  toString() {\n    return this.url()\n  }\n\n  // Update pattern by rebuilding\n  update(block) {\n    // remove content\n    this.clear()\n\n    // invoke passed block\n    if (typeof block === 'function') {\n      block.call(this, this)\n    }\n\n    return this\n  }\n\n  // Return the fill id\n  url() {\n    return 'url(#' + this.id() + ')'\n  }\n}\n\nregisterMethods({\n  Container: {\n    // Create pattern element in defs\n    pattern(...args) {\n      return this.defs().pattern(...args)\n    }\n  },\n  Defs: {\n    pattern: wrapWithAttrCheck(function (width, height, block) {\n      return this.put(new Pattern()).update(block).attr({\n        x: 0,\n        y: 0,\n        width: width,\n        height: height,\n        patternUnits: 'userSpaceOnUse'\n      })\n    })\n  }\n})\n\nregister(Pattern, 'Pattern')\n","import { isImage } from '../modules/core/regex.js'\nimport { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { off, on } from '../modules/core/event.js'\nimport { registerAttrHook } from '../modules/core/attr.js'\nimport { registerMethods } from '../utils/methods.js'\nimport { xlink } from '../modules/core/namespaces.js'\nimport Pattern from './Pattern.js'\nimport Shape from './Shape.js'\nimport { globals } from '../utils/window.js'\n\nexport default class Image extends Shape {\n  constructor(node, attrs = node) {\n    super(nodeOrNew('image', node), attrs)\n  }\n\n  // (re)load image\n  load(url, callback) {\n    if (!url) return this\n\n    const img = new globals.window.Image()\n\n    on(\n      img,\n      'load',\n      function (e) {\n        const p = this.parent(Pattern)\n\n        // ensure image size\n        if (this.width() === 0 && this.height() === 0) {\n          this.size(img.width, img.height)\n        }\n\n        if (p instanceof Pattern) {\n          // ensure pattern size if not set\n          if (p.width() === 0 && p.height() === 0) {\n            p.size(this.width(), this.height())\n          }\n        }\n\n        if (typeof callback === 'function') {\n          callback.call(this, e)\n        }\n      },\n      this\n    )\n\n    on(img, 'load error', function () {\n      // dont forget to unbind memory leaking events\n      off(img)\n    })\n\n    return this.attr('href', (img.src = url), xlink)\n  }\n}\n\nregisterAttrHook(function (attr, val, _this) {\n  // convert image fill and stroke to patterns\n  if (attr === 'fill' || attr === 'stroke') {\n    if (isImage.test(val)) {\n      val = _this.root().defs().image(val)\n    }\n  }\n\n  if (val instanceof Image) {\n    val = _this\n      .root()\n      .defs()\n      .pattern(0, 0, (pattern) => {\n        pattern.add(val)\n      })\n  }\n\n  return val\n})\n\nregisterMethods({\n  Container: {\n    // create image element, load image and set its size\n    image: wrapWithAttrCheck(function (source, callback) {\n      return this.put(new Image()).size(0, 0).load(source, callback)\n    })\n  }\n})\n\nregister(Image, 'Image')\n","import { delimiter } from '../modules/core/regex.js'\nimport SVGArray from './SVGArray.js'\nimport Box from './Box.js'\nimport Matrix from './Matrix.js'\n\nexport default class PointArray extends SVGArray {\n  // Get bounding box of points\n  bbox() {\n    let maxX = -Infinity\n    let maxY = -Infinity\n    let minX = Infinity\n    let minY = Infinity\n    this.forEach(function (el) {\n      maxX = Math.max(el[0], maxX)\n      maxY = Math.max(el[1], maxY)\n      minX = Math.min(el[0], minX)\n      minY = Math.min(el[1], minY)\n    })\n    return new Box(minX, minY, maxX - minX, maxY - minY)\n  }\n\n  // Move point string\n  move(x, y) {\n    const box = this.bbox()\n\n    // get relative offset\n    x -= box.x\n    y -= box.y\n\n    // move every point\n    if (!isNaN(x) && !isNaN(y)) {\n      for (let i = this.length - 1; i >= 0; i--) {\n        this[i] = [this[i][0] + x, this[i][1] + y]\n      }\n    }\n\n    return this\n  }\n\n  // Parse point string and flat array\n  parse(array = [0, 0]) {\n    const points = []\n\n    // if it is an array, we flatten it and therefore clone it to 1 depths\n    if (array instanceof Array) {\n      array = Array.prototype.concat.apply([], array)\n    } else {\n      // Else, it is considered as a string\n      // parse points\n      array = array.trim().split(delimiter).map(parseFloat)\n    }\n\n    // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\n    // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\n    if (array.length % 2 !== 0) array.pop()\n\n    // wrap points in two-tuples\n    for (let i = 0, len = array.length; i < len; i = i + 2) {\n      points.push([array[i], array[i + 1]])\n    }\n\n    return points\n  }\n\n  // Resize poly string\n  size(width, height) {\n    let i\n    const box = this.bbox()\n\n    // recalculate position of all points according to new size\n    for (i = this.length - 1; i >= 0; i--) {\n      if (box.width)\n        this[i][0] = ((this[i][0] - box.x) * width) / box.width + box.x\n      if (box.height)\n        this[i][1] = ((this[i][1] - box.y) * height) / box.height + box.y\n    }\n\n    return this\n  }\n\n  // Convert array to line object\n  toLine() {\n    return {\n      x1: this[0][0],\n      y1: this[0][1],\n      x2: this[1][0],\n      y2: this[1][1]\n    }\n  }\n\n  // Convert array to string\n  toString() {\n    const array = []\n    // convert to a poly point string\n    for (let i = 0, il = this.length; i < il; i++) {\n      array.push(this[i].join(','))\n    }\n\n    return array.join(' ')\n  }\n\n  transform(m) {\n    return this.clone().transformO(m)\n  }\n\n  // transform points with matrix (similar to Point.transform)\n  transformO(m) {\n    if (!Matrix.isMatrixLike(m)) {\n      m = new Matrix(m)\n    }\n\n    for (let i = this.length; i--; ) {\n      // Perform the matrix multiplication\n      const [x, y] = this[i]\n      this[i][0] = m.a * x + m.c * y + m.e\n      this[i][1] = m.b * x + m.d * y + m.f\n    }\n\n    return this\n  }\n}\n","import PointArray from '../../types/PointArray.js'\n\nexport const MorphArray = PointArray\n\n// Move by left top corner over x-axis\nexport function x(x) {\n  return x == null ? this.bbox().x : this.move(x, this.bbox().y)\n}\n\n// Move by left top corner over y-axis\nexport function y(y) {\n  return y == null ? this.bbox().y : this.move(this.bbox().x, y)\n}\n\n// Set width of element\nexport function width(width) {\n  const b = this.bbox()\n  return width == null ? b.width : this.size(width, b.height)\n}\n\n// Set height of element\nexport function height(height) {\n  const b = this.bbox()\n  return height == null ? b.height : this.size(b.width, height)\n}\n","import {\n  extend,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { proportionalSize } from '../utils/utils.js'\nimport { registerMethods } from '../utils/methods.js'\nimport PointArray from '../types/PointArray.js'\nimport Shape from './Shape.js'\nimport * as pointed from '../modules/core/pointed.js'\n\nexport default class Line extends Shape {\n  // Initialize node\n  constructor(node, attrs = node) {\n    super(nodeOrNew('line', node), attrs)\n  }\n\n  // Get array\n  array() {\n    return new PointArray([\n      [this.attr('x1'), this.attr('y1')],\n      [this.attr('x2'), this.attr('y2')]\n    ])\n  }\n\n  // Move by left top corner\n  move(x, y) {\n    return this.attr(this.array().move(x, y).toLine())\n  }\n\n  // Overwrite native plot() method\n  plot(x1, y1, x2, y2) {\n    if (x1 == null) {\n      return this.array()\n    } else if (typeof y1 !== 'undefined') {\n      x1 = { x1, y1, x2, y2 }\n    } else {\n      x1 = new PointArray(x1).toLine()\n    }\n\n    return this.attr(x1)\n  }\n\n  // Set element size to given width and height\n  size(width, height) {\n    const p = proportionalSize(this, width, height)\n    return this.attr(this.array().size(p.width, p.height).toLine())\n  }\n}\n\nextend(Line, pointed)\n\nregisterMethods({\n  Container: {\n    // Create a line element\n    line: wrapWithAttrCheck(function (...args) {\n      // make sure plot is called as a setter\n      // x1 is not necessarily a number, it can also be an array, a string and a PointArray\n      return Line.prototype.plot.apply(\n        this.put(new Line()),\n        args[0] != null ? args : [0, 0, 0, 0]\n      )\n    })\n  }\n})\n\nregister(Line, 'Line')\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Container from './Container.js'\n\nexport default class Marker extends Container {\n  // Initialize node\n  constructor(node, attrs = node) {\n    super(nodeOrNew('marker', node), attrs)\n  }\n\n  // Set height of element\n  height(height) {\n    return this.attr('markerHeight', height)\n  }\n\n  orient(orient) {\n    return this.attr('orient', orient)\n  }\n\n  // Set marker refX and refY\n  ref(x, y) {\n    return this.attr('refX', x).attr('refY', y)\n  }\n\n  // Return the fill id\n  toString() {\n    return 'url(#' + this.id() + ')'\n  }\n\n  // Update marker\n  update(block) {\n    // remove all content\n    this.clear()\n\n    // invoke passed block\n    if (typeof block === 'function') {\n      block.call(this, this)\n    }\n\n    return this\n  }\n\n  // Set width of element\n  width(width) {\n    return this.attr('markerWidth', width)\n  }\n}\n\nregisterMethods({\n  Container: {\n    marker(...args) {\n      // Create marker element in defs\n      return this.defs().marker(...args)\n    }\n  },\n  Defs: {\n    // Create marker\n    marker: wrapWithAttrCheck(function (width, height, block) {\n      // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\n      return this.put(new Marker())\n        .size(width, height)\n        .ref(width / 2, height / 2)\n        .viewbox(0, 0, width, height)\n        .attr('orient', 'auto')\n        .update(block)\n    })\n  },\n  marker: {\n    // Create and attach markers\n    marker(marker, width, height, block) {\n      let attr = ['marker']\n\n      // Build attribute name\n      if (marker !== 'all') attr.push(marker)\n      attr = attr.join('-')\n\n      // Set marker attribute\n      marker =\n        arguments[1] instanceof Marker\n          ? arguments[1]\n          : this.defs().marker(width, height, block)\n\n      return this.attr(attr, marker)\n    }\n  }\n})\n\nregister(Marker, 'Marker')\n","import { timeline } from '../modules/core/defaults.js'\nimport { extend } from '../utils/adopter.js'\n\n/***\nBase Class\n==========\nThe base stepper class that will be\n***/\n\nfunction makeSetterGetter(k, f) {\n  return function (v) {\n    if (v == null) return this[k]\n    this[k] = v\n    if (f) f.call(this)\n    return this\n  }\n}\n\nexport const easing = {\n  '-': function (pos) {\n    return pos\n  },\n  '<>': function (pos) {\n    return -Math.cos(pos * Math.PI) / 2 + 0.5\n  },\n  '>': function (pos) {\n    return Math.sin((pos * Math.PI) / 2)\n  },\n  '<': function (pos) {\n    return -Math.cos((pos * Math.PI) / 2) + 1\n  },\n  bezier: function (x1, y1, x2, y2) {\n    // see https://www.w3.org/TR/css-easing-1/#cubic-bezier-algo\n    return function (t) {\n      if (t < 0) {\n        if (x1 > 0) {\n          return (y1 / x1) * t\n        } else if (x2 > 0) {\n          return (y2 / x2) * t\n        } else {\n          return 0\n        }\n      } else if (t > 1) {\n        if (x2 < 1) {\n          return ((1 - y2) / (1 - x2)) * t + (y2 - x2) / (1 - x2)\n        } else if (x1 < 1) {\n          return ((1 - y1) / (1 - x1)) * t + (y1 - x1) / (1 - x1)\n        } else {\n          return 1\n        }\n      } else {\n        return 3 * t * (1 - t) ** 2 * y1 + 3 * t ** 2 * (1 - t) * y2 + t ** 3\n      }\n    }\n  },\n  // see https://www.w3.org/TR/css-easing-1/#step-timing-function-algo\n  steps: function (steps, stepPosition = 'end') {\n    // deal with \"jump-\" prefix\n    stepPosition = stepPosition.split('-').reverse()[0]\n\n    let jumps = steps\n    if (stepPosition === 'none') {\n      --jumps\n    } else if (stepPosition === 'both') {\n      ++jumps\n    }\n\n    // The beforeFlag is essentially useless\n    return (t, beforeFlag = false) => {\n      // Step is called currentStep in referenced url\n      let step = Math.floor(t * steps)\n      const jumping = (t * step) % 1 === 0\n\n      if (stepPosition === 'start' || stepPosition === 'both') {\n        ++step\n      }\n\n      if (beforeFlag && jumping) {\n        --step\n      }\n\n      if (t >= 0 && step < 0) {\n        step = 0\n      }\n\n      if (t <= 1 && step > jumps) {\n        step = jumps\n      }\n\n      return step / jumps\n    }\n  }\n}\n\nexport class Stepper {\n  done() {\n    return false\n  }\n}\n\n/***\nEasing Functions\n================\n***/\n\nexport class Ease extends Stepper {\n  constructor(fn = timeline.ease) {\n    super()\n    this.ease = easing[fn] || fn\n  }\n\n  step(from, to, pos) {\n    if (typeof from !== 'number') {\n      return pos < 1 ? from : to\n    }\n    return from + (to - from) * this.ease(pos)\n  }\n}\n\n/***\nController Types\n================\n***/\n\nexport class Controller extends Stepper {\n  constructor(fn) {\n    super()\n    this.stepper = fn\n  }\n\n  done(c) {\n    return c.done\n  }\n\n  step(current, target, dt, c) {\n    return this.stepper(current, target, dt, c)\n  }\n}\n\nfunction recalculate() {\n  // Apply the default parameters\n  const duration = (this._duration || 500) / 1000\n  const overshoot = this._overshoot || 0\n\n  // Calculate the PID natural response\n  const eps = 1e-10\n  const pi = Math.PI\n  const os = Math.log(overshoot / 100 + eps)\n  const zeta = -os / Math.sqrt(pi * pi + os * os)\n  const wn = 3.9 / (zeta * duration)\n\n  // Calculate the Spring values\n  this.d = 2 * zeta * wn\n  this.k = wn * wn\n}\n\nexport class Spring extends Controller {\n  constructor(duration = 500, overshoot = 0) {\n    super()\n    this.duration(duration).overshoot(overshoot)\n  }\n\n  step(current, target, dt, c) {\n    if (typeof current === 'string') return current\n    c.done = dt === Infinity\n    if (dt === Infinity) return target\n    if (dt === 0) return current\n\n    if (dt > 100) dt = 16\n\n    dt /= 1000\n\n    // Get the previous velocity\n    const velocity = c.velocity || 0\n\n    // Apply the control to get the new position and store it\n    const acceleration = -this.d * velocity - this.k * (current - target)\n    const newPosition = current + velocity * dt + (acceleration * dt * dt) / 2\n\n    // Store the velocity\n    c.velocity = velocity + acceleration * dt\n\n    // Figure out if we have converged, and if so, pass the value\n    c.done = Math.abs(target - newPosition) + Math.abs(velocity) < 0.002\n    return c.done ? target : newPosition\n  }\n}\n\nextend(Spring, {\n  duration: makeSetterGetter('_duration', recalculate),\n  overshoot: makeSetterGetter('_overshoot', recalculate)\n})\n\nexport class PID extends Controller {\n  constructor(p = 0.1, i = 0.01, d = 0, windup = 1000) {\n    super()\n    this.p(p).i(i).d(d).windup(windup)\n  }\n\n  step(current, target, dt, c) {\n    if (typeof current === 'string') return current\n    c.done = dt === Infinity\n\n    if (dt === Infinity) return target\n    if (dt === 0) return current\n\n    const p = target - current\n    let i = (c.integral || 0) + p * dt\n    const d = (p - (c.error || 0)) / dt\n    const windup = this._windup\n\n    // antiwindup\n    if (windup !== false) {\n      i = Math.max(-windup, Math.min(i, windup))\n    }\n\n    c.error = p\n    c.integral = i\n\n    c.done = Math.abs(p) < 0.001\n\n    return c.done ? target : current + (this.P * p + this.I * i + this.D * d)\n  }\n}\n\nextend(PID, {\n  windup: makeSetterGetter('_windup'),\n  p: makeSetterGetter('P'),\n  i: makeSetterGetter('I'),\n  d: makeSetterGetter('D')\n})\n","import { isPathLetter } from '../modules/core/regex.js'\nimport Point from '../types/Point.js'\n\nconst segmentParameters = {\n  M: 2,\n  L: 2,\n  H: 1,\n  V: 1,\n  C: 6,\n  S: 4,\n  Q: 4,\n  T: 2,\n  A: 7,\n  Z: 0\n}\n\nconst pathHandlers = {\n  M: function (c, p, p0) {\n    p.x = p0.x = c[0]\n    p.y = p0.y = c[1]\n\n    return ['M', p.x, p.y]\n  },\n  L: function (c, p) {\n    p.x = c[0]\n    p.y = c[1]\n    return ['L', c[0], c[1]]\n  },\n  H: function (c, p) {\n    p.x = c[0]\n    return ['H', c[0]]\n  },\n  V: function (c, p) {\n    p.y = c[0]\n    return ['V', c[0]]\n  },\n  C: function (c, p) {\n    p.x = c[4]\n    p.y = c[5]\n    return ['C', c[0], c[1], c[2], c[3], c[4], c[5]]\n  },\n  S: function (c, p) {\n    p.x = c[2]\n    p.y = c[3]\n    return ['S', c[0], c[1], c[2], c[3]]\n  },\n  Q: function (c, p) {\n    p.x = c[2]\n    p.y = c[3]\n    return ['Q', c[0], c[1], c[2], c[3]]\n  },\n  T: function (c, p) {\n    p.x = c[0]\n    p.y = c[1]\n    return ['T', c[0], c[1]]\n  },\n  Z: function (c, p, p0) {\n    p.x = p0.x\n    p.y = p0.y\n    return ['Z']\n  },\n  A: function (c, p) {\n    p.x = c[5]\n    p.y = c[6]\n    return ['A', c[0], c[1], c[2], c[3], c[4], c[5], c[6]]\n  }\n}\n\nconst mlhvqtcsaz = 'mlhvqtcsaz'.split('')\n\nfor (let i = 0, il = mlhvqtcsaz.length; i < il; ++i) {\n  pathHandlers[mlhvqtcsaz[i]] = (function (i) {\n    return function (c, p, p0) {\n      if (i === 'H') c[0] = c[0] + p.x\n      else if (i === 'V') c[0] = c[0] + p.y\n      else if (i === 'A') {\n        c[5] = c[5] + p.x\n        c[6] = c[6] + p.y\n      } else {\n        for (let j = 0, jl = c.length; j < jl; ++j) {\n          c[j] = c[j] + (j % 2 ? p.y : p.x)\n        }\n      }\n\n      return pathHandlers[i](c, p, p0)\n    }\n  })(mlhvqtcsaz[i].toUpperCase())\n}\n\nfunction makeAbsolut(parser) {\n  const command = parser.segment[0]\n  return pathHandlers[command](parser.segment.slice(1), parser.p, parser.p0)\n}\n\nfunction segmentComplete(parser) {\n  return (\n    parser.segment.length &&\n    parser.segment.length - 1 ===\n      segmentParameters[parser.segment[0].toUpperCase()]\n  )\n}\n\nfunction startNewSegment(parser, token) {\n  parser.inNumber && finalizeNumber(parser, false)\n  const pathLetter = isPathLetter.test(token)\n\n  if (pathLetter) {\n    parser.segment = [token]\n  } else {\n    const lastCommand = parser.lastCommand\n    const small = lastCommand.toLowerCase()\n    const isSmall = lastCommand === small\n    parser.segment = [small === 'm' ? (isSmall ? 'l' : 'L') : lastCommand]\n  }\n\n  parser.inSegment = true\n  parser.lastCommand = parser.segment[0]\n\n  return pathLetter\n}\n\nfunction finalizeNumber(parser, inNumber) {\n  if (!parser.inNumber) throw new Error('Parser Error')\n  parser.number && parser.segment.push(parseFloat(parser.number))\n  parser.inNumber = inNumber\n  parser.number = ''\n  parser.pointSeen = false\n  parser.hasExponent = false\n\n  if (segmentComplete(parser)) {\n    finalizeSegment(parser)\n  }\n}\n\nfunction finalizeSegment(parser) {\n  parser.inSegment = false\n  if (parser.absolute) {\n    parser.segment = makeAbsolut(parser)\n  }\n  parser.segments.push(parser.segment)\n}\n\nfunction isArcFlag(parser) {\n  if (!parser.segment.length) return false\n  const isArc = parser.segment[0].toUpperCase() === 'A'\n  const length = parser.segment.length\n\n  return isArc && (length === 4 || length === 5)\n}\n\nfunction isExponential(parser) {\n  return parser.lastToken.toUpperCase() === 'E'\n}\n\nconst pathDelimiters = new Set([' ', ',', '\\t', '\\n', '\\r', '\\f'])\nexport function pathParser(d, toAbsolute = true) {\n  let index = 0\n  let token = ''\n  const parser = {\n    segment: [],\n    inNumber: false,\n    number: '',\n    lastToken: '',\n    inSegment: false,\n    segments: [],\n    pointSeen: false,\n    hasExponent: false,\n    absolute: toAbsolute,\n    p0: new Point(),\n    p: new Point()\n  }\n\n  while (((parser.lastToken = token), (token = d.charAt(index++)))) {\n    if (!parser.inSegment) {\n      if (startNewSegment(parser, token)) {\n        continue\n      }\n    }\n\n    if (token === '.') {\n      if (parser.pointSeen || parser.hasExponent) {\n        finalizeNumber(parser, false)\n        --index\n        continue\n      }\n      parser.inNumber = true\n      parser.pointSeen = true\n      parser.number += token\n      continue\n    }\n\n    if (!isNaN(parseInt(token))) {\n      if (parser.number === '0' || isArcFlag(parser)) {\n        parser.inNumber = true\n        parser.number = token\n        finalizeNumber(parser, true)\n        continue\n      }\n\n      parser.inNumber = true\n      parser.number += token\n      continue\n    }\n\n    if (pathDelimiters.has(token)) {\n      if (parser.inNumber) {\n        finalizeNumber(parser, false)\n      }\n      continue\n    }\n\n    if (token === '-' || token === '+') {\n      if (parser.inNumber && !isExponential(parser)) {\n        finalizeNumber(parser, false)\n        --index\n        continue\n      }\n      parser.number += token\n      parser.inNumber = true\n      continue\n    }\n\n    if (token.toUpperCase() === 'E') {\n      parser.number += token\n      parser.hasExponent = true\n      continue\n    }\n\n    if (isPathLetter.test(token)) {\n      if (parser.inNumber) {\n        finalizeNumber(parser, false)\n      } else if (!segmentComplete(parser)) {\n        throw new Error('parser Error')\n      } else {\n        finalizeSegment(parser)\n      }\n      --index\n    }\n  }\n\n  if (parser.inNumber) {\n    finalizeNumber(parser, false)\n  }\n\n  if (parser.inSegment && segmentComplete(parser)) {\n    finalizeSegment(parser)\n  }\n\n  return parser.segments\n}\n","import SVGArray from './SVGArray.js'\nimport parser from '../modules/core/parser.js'\nimport Box from './Box.js'\nimport { pathParser } from '../utils/pathParser.js'\n\nfunction arrayToString(a) {\n  let s = ''\n  for (let i = 0, il = a.length; i < il; i++) {\n    s += a[i][0]\n\n    if (a[i][1] != null) {\n      s += a[i][1]\n\n      if (a[i][2] != null) {\n        s += ' '\n        s += a[i][2]\n\n        if (a[i][3] != null) {\n          s += ' '\n          s += a[i][3]\n          s += ' '\n          s += a[i][4]\n\n          if (a[i][5] != null) {\n            s += ' '\n            s += a[i][5]\n            s += ' '\n            s += a[i][6]\n\n            if (a[i][7] != null) {\n              s += ' '\n              s += a[i][7]\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return s + ' '\n}\n\nexport default class PathArray extends SVGArray {\n  // Get bounding box of path\n  bbox() {\n    parser().path.setAttribute('d', this.toString())\n    return new Box(parser.nodes.path.getBBox())\n  }\n\n  // Move path string\n  move(x, y) {\n    // get bounding box of current situation\n    const box = this.bbox()\n\n    // get relative offset\n    x -= box.x\n    y -= box.y\n\n    if (!isNaN(x) && !isNaN(y)) {\n      // move every point\n      for (let l, i = this.length - 1; i >= 0; i--) {\n        l = this[i][0]\n\n        if (l === 'M' || l === 'L' || l === 'T') {\n          this[i][1] += x\n          this[i][2] += y\n        } else if (l === 'H') {\n          this[i][1] += x\n        } else if (l === 'V') {\n          this[i][1] += y\n        } else if (l === 'C' || l === 'S' || l === 'Q') {\n          this[i][1] += x\n          this[i][2] += y\n          this[i][3] += x\n          this[i][4] += y\n\n          if (l === 'C') {\n            this[i][5] += x\n            this[i][6] += y\n          }\n        } else if (l === 'A') {\n          this[i][6] += x\n          this[i][7] += y\n        }\n      }\n    }\n\n    return this\n  }\n\n  // Absolutize and parse path to array\n  parse(d = 'M0 0') {\n    if (Array.isArray(d)) {\n      d = Array.prototype.concat.apply([], d).toString()\n    }\n\n    return pathParser(d)\n  }\n\n  // Resize path string\n  size(width, height) {\n    // get bounding box of current situation\n    const box = this.bbox()\n    let i, l\n\n    // If the box width or height is 0 then we ignore\n    // transformations on the respective axis\n    box.width = box.width === 0 ? 1 : box.width\n    box.height = box.height === 0 ? 1 : box.height\n\n    // recalculate position of all points according to new size\n    for (i = this.length - 1; i >= 0; i--) {\n      l = this[i][0]\n\n      if (l === 'M' || l === 'L' || l === 'T') {\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\n        this[i][2] = ((this[i][2] - box.y) * height) / box.height + box.y\n      } else if (l === 'H') {\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\n      } else if (l === 'V') {\n        this[i][1] = ((this[i][1] - box.y) * height) / box.height + box.y\n      } else if (l === 'C' || l === 'S' || l === 'Q') {\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\n        this[i][2] = ((this[i][2] - box.y) * height) / box.height + box.y\n        this[i][3] = ((this[i][3] - box.x) * width) / box.width + box.x\n        this[i][4] = ((this[i][4] - box.y) * height) / box.height + box.y\n\n        if (l === 'C') {\n          this[i][5] = ((this[i][5] - box.x) * width) / box.width + box.x\n          this[i][6] = ((this[i][6] - box.y) * height) / box.height + box.y\n        }\n      } else if (l === 'A') {\n        // resize radii\n        this[i][1] = (this[i][1] * width) / box.width\n        this[i][2] = (this[i][2] * height) / box.height\n\n        // move position values\n        this[i][6] = ((this[i][6] - box.x) * width) / box.width + box.x\n        this[i][7] = ((this[i][7] - box.y) * height) / box.height + box.y\n      }\n    }\n\n    return this\n  }\n\n  // Convert array to string\n  toString() {\n    return arrayToString(this)\n  }\n}\n","import { Ease } from './Controller.js'\nimport {\n  delimiter,\n  numberAndUnit,\n  isPathLetter\n} from '../modules/core/regex.js'\nimport { extend } from '../utils/adopter.js'\nimport Color from '../types/Color.js'\nimport PathArray from '../types/PathArray.js'\nimport SVGArray from '../types/SVGArray.js'\nimport SVGNumber from '../types/SVGNumber.js'\n\nconst getClassForType = (value) => {\n  const type = typeof value\n\n  if (type === 'number') {\n    return SVGNumber\n  } else if (type === 'string') {\n    if (Color.isColor(value)) {\n      return Color\n    } else if (delimiter.test(value)) {\n      return isPathLetter.test(value) ? PathArray : SVGArray\n    } else if (numberAndUnit.test(value)) {\n      return SVGNumber\n    } else {\n      return NonMorphable\n    }\n  } else if (morphableTypes.indexOf(value.constructor) > -1) {\n    return value.constructor\n  } else if (Array.isArray(value)) {\n    return SVGArray\n  } else if (type === 'object') {\n    return ObjectBag\n  } else {\n    return NonMorphable\n  }\n}\n\nexport default class Morphable {\n  constructor(stepper) {\n    this._stepper = stepper || new Ease('-')\n\n    this._from = null\n    this._to = null\n    this._type = null\n    this._context = null\n    this._morphObj = null\n  }\n\n  at(pos) {\n    return this._morphObj.morph(\n      this._from,\n      this._to,\n      pos,\n      this._stepper,\n      this._context\n    )\n  }\n\n  done() {\n    const complete = this._context.map(this._stepper.done).reduce(function (\n      last,\n      curr\n    ) {\n      return last && curr\n    }, true)\n    return complete\n  }\n\n  from(val) {\n    if (val == null) {\n      return this._from\n    }\n\n    this._from = this._set(val)\n    return this\n  }\n\n  stepper(stepper) {\n    if (stepper == null) return this._stepper\n    this._stepper = stepper\n    return this\n  }\n\n  to(val) {\n    if (val == null) {\n      return this._to\n    }\n\n    this._to = this._set(val)\n    return this\n  }\n\n  type(type) {\n    // getter\n    if (type == null) {\n      return this._type\n    }\n\n    // setter\n    this._type = type\n    return this\n  }\n\n  _set(value) {\n    if (!this._type) {\n      this.type(getClassForType(value))\n    }\n\n    let result = new this._type(value)\n    if (this._type === Color) {\n      result = this._to\n        ? result[this._to[4]]()\n        : this._from\n          ? result[this._from[4]]()\n          : result\n    }\n\n    if (this._type === ObjectBag) {\n      result = this._to\n        ? result.align(this._to)\n        : this._from\n          ? result.align(this._from)\n          : result\n    }\n\n    result = result.toConsumable()\n\n    this._morphObj = this._morphObj || new this._type()\n    this._context =\n      this._context ||\n      Array.apply(null, Array(result.length))\n        .map(Object)\n        .map(function (o) {\n          o.done = true\n          return o\n        })\n    return result\n  }\n}\n\nexport class NonMorphable {\n  constructor(...args) {\n    this.init(...args)\n  }\n\n  init(val) {\n    val = Array.isArray(val) ? val[0] : val\n    this.value = val\n    return this\n  }\n\n  toArray() {\n    return [this.value]\n  }\n\n  valueOf() {\n    return this.value\n  }\n}\n\nexport class TransformBag {\n  constructor(...args) {\n    this.init(...args)\n  }\n\n  init(obj) {\n    if (Array.isArray(obj)) {\n      obj = {\n        scaleX: obj[0],\n        scaleY: obj[1],\n        shear: obj[2],\n        rotate: obj[3],\n        translateX: obj[4],\n        translateY: obj[5],\n        originX: obj[6],\n        originY: obj[7]\n      }\n    }\n\n    Object.assign(this, TransformBag.defaults, obj)\n    return this\n  }\n\n  toArray() {\n    const v = this\n\n    return [\n      v.scaleX,\n      v.scaleY,\n      v.shear,\n      v.rotate,\n      v.translateX,\n      v.translateY,\n      v.originX,\n      v.originY\n    ]\n  }\n}\n\nTransformBag.defaults = {\n  scaleX: 1,\n  scaleY: 1,\n  shear: 0,\n  rotate: 0,\n  translateX: 0,\n  translateY: 0,\n  originX: 0,\n  originY: 0\n}\n\nconst sortByKey = (a, b) => {\n  return a[0] < b[0] ? -1 : a[0] > b[0] ? 1 : 0\n}\n\nexport class ObjectBag {\n  constructor(...args) {\n    this.init(...args)\n  }\n\n  align(other) {\n    const values = this.values\n    for (let i = 0, il = values.length; i < il; ++i) {\n      // If the type is the same we only need to check if the color is in the correct format\n      if (values[i + 1] === other[i + 1]) {\n        if (values[i + 1] === Color && other[i + 7] !== values[i + 7]) {\n          const space = other[i + 7]\n          const color = new Color(this.values.splice(i + 3, 5))\n            [space]()\n            .toArray()\n          this.values.splice(i + 3, 0, ...color)\n        }\n\n        i += values[i + 2] + 2\n        continue\n      }\n\n      if (!other[i + 1]) {\n        return this\n      }\n\n      // The types differ, so we overwrite the new type with the old one\n      // And initialize it with the types default (e.g. black for color or 0 for number)\n      const defaultObject = new other[i + 1]().toArray()\n\n      // Than we fix the values array\n      const toDelete = values[i + 2] + 3\n\n      values.splice(\n        i,\n        toDelete,\n        other[i],\n        other[i + 1],\n        other[i + 2],\n        ...defaultObject\n      )\n\n      i += values[i + 2] + 2\n    }\n    return this\n  }\n\n  init(objOrArr) {\n    this.values = []\n\n    if (Array.isArray(objOrArr)) {\n      this.values = objOrArr.slice()\n      return\n    }\n\n    objOrArr = objOrArr || {}\n    const entries = []\n\n    for (const i in objOrArr) {\n      const Type = getClassForType(objOrArr[i])\n      const val = new Type(objOrArr[i]).toArray()\n      entries.push([i, Type, val.length, ...val])\n    }\n\n    entries.sort(sortByKey)\n\n    this.values = entries.reduce((last, curr) => last.concat(curr), [])\n    return this\n  }\n\n  toArray() {\n    return this.values\n  }\n\n  valueOf() {\n    const obj = {}\n    const arr = this.values\n\n    // for (var i = 0, len = arr.length; i < len; i += 2) {\n    while (arr.length) {\n      const key = arr.shift()\n      const Type = arr.shift()\n      const num = arr.shift()\n      const values = arr.splice(0, num)\n      obj[key] = new Type(values) // .valueOf()\n    }\n\n    return obj\n  }\n}\n\nconst morphableTypes = [NonMorphable, TransformBag, ObjectBag]\n\nexport function registerMorphableType(type = []) {\n  morphableTypes.push(...[].concat(type))\n}\n\nexport function makeMorphable() {\n  extend(morphableTypes, {\n    to(val) {\n      return new Morphable()\n        .type(this.constructor)\n        .from(this.toArray()) // this.valueOf())\n        .to(val)\n    },\n    fromArray(arr) {\n      this.init(arr)\n      return this\n    },\n    toConsumable() {\n      return this.toArray()\n    },\n    morph(from, to, pos, stepper, context) {\n      const mapper = function (i, index) {\n        return stepper.step(i, to[index], pos, context[index], context)\n      }\n\n      return this.fromArray(from.map(mapper))\n    }\n  })\n}\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { proportionalSize } from '../utils/utils.js'\nimport { registerMethods } from '../utils/methods.js'\nimport PathArray from '../types/PathArray.js'\nimport Shape from './Shape.js'\n\nexport default class Path extends Shape {\n  // Initialize node\n  constructor(node, attrs = node) {\n    super(nodeOrNew('path', node), attrs)\n  }\n\n  // Get array\n  array() {\n    return this._array || (this._array = new PathArray(this.attr('d')))\n  }\n\n  // Clear array cache\n  clear() {\n    delete this._array\n    return this\n  }\n\n  // Set height of element\n  height(height) {\n    return height == null\n      ? this.bbox().height\n      : this.size(this.bbox().width, height)\n  }\n\n  // Move by left top corner\n  move(x, y) {\n    return this.attr('d', this.array().move(x, y))\n  }\n\n  // Plot new path\n  plot(d) {\n    return d == null\n      ? this.array()\n      : this.clear().attr(\n          'd',\n          typeof d === 'string' ? d : (this._array = new PathArray(d))\n        )\n  }\n\n  // Set element size to given width and height\n  size(width, height) {\n    const p = proportionalSize(this, width, height)\n    return this.attr('d', this.array().size(p.width, p.height))\n  }\n\n  // Set width of element\n  width(width) {\n    return width == null\n      ? this.bbox().width\n      : this.size(width, this.bbox().height)\n  }\n\n  // Move by left top corner over x-axis\n  x(x) {\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\n  }\n\n  // Move by left top corner over y-axis\n  y(y) {\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\n  }\n}\n\n// Define morphable array\nPath.prototype.MorphArray = PathArray\n\n// Add parent method\nregisterMethods({\n  Container: {\n    // Create a wrapped path element\n    path: wrapWithAttrCheck(function (d) {\n      // make sure plot is called as a setter\n      return this.put(new Path()).plot(d || new PathArray())\n    })\n  }\n})\n\nregister(Path, 'Path')\n","import { proportionalSize } from '../../utils/utils.js'\nimport PointArray from '../../types/PointArray.js'\n\n// Get array\nexport function array() {\n  return this._array || (this._array = new PointArray(this.attr('points')))\n}\n\n// Clear array cache\nexport function clear() {\n  delete this._array\n  return this\n}\n\n// Move by left top corner\nexport function move(x, y) {\n  return this.attr('points', this.array().move(x, y))\n}\n\n// Plot new path\nexport function plot(p) {\n  return p == null\n    ? this.array()\n    : this.clear().attr(\n        'points',\n        typeof p === 'string' ? p : (this._array = new PointArray(p))\n      )\n}\n\n// Set element size to given width and height\nexport function size(width, height) {\n  const p = proportionalSize(this, width, height)\n  return this.attr('points', this.array().size(p.width, p.height))\n}\n","import {\n  extend,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport PointArray from '../types/PointArray.js'\nimport Shape from './Shape.js'\nimport * as pointed from '../modules/core/pointed.js'\nimport * as poly from '../modules/core/poly.js'\n\nexport default class Polygon extends Shape {\n  // Initialize node\n  constructor(node, attrs = node) {\n    super(nodeOrNew('polygon', node), attrs)\n  }\n}\n\nregisterMethods({\n  Container: {\n    // Create a wrapped polygon element\n    polygon: wrapWithAttrCheck(function (p) {\n      // make sure plot is called as a setter\n      return this.put(new Polygon()).plot(p || new PointArray())\n    })\n  }\n})\n\nextend(Polygon, pointed)\nextend(Polygon, poly)\nregister(Polygon, 'Polygon')\n","import {\n  extend,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport PointArray from '../types/PointArray.js'\nimport Shape from './Shape.js'\nimport * as pointed from '../modules/core/pointed.js'\nimport * as poly from '../modules/core/poly.js'\n\nexport default class Polyline extends Shape {\n  // Initialize node\n  constructor(node, attrs = node) {\n    super(nodeOrNew('polyline', node), attrs)\n  }\n}\n\nregisterMethods({\n  Container: {\n    // Create a wrapped polygon element\n    polyline: wrapWithAttrCheck(function (p) {\n      // make sure plot is called as a setter\n      return this.put(new Polyline()).plot(p || new PointArray())\n    })\n  }\n})\n\nextend(Polyline, pointed)\nextend(Polyline, poly)\nregister(Polyline, 'Polyline')\n","import {\n  extend,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport { rx, ry } from '../modules/core/circled.js'\nimport Shape from './Shape.js'\n\nexport default class Rect extends Shape {\n  // Initialize node\n  constructor(node, attrs = node) {\n    super(nodeOrNew('rect', node), attrs)\n  }\n}\n\nextend(Rect, { rx, ry })\n\nregisterMethods({\n  Container: {\n    // Create a rect element\n    rect: wrapWithAttrCheck(function (width, height) {\n      return this.put(new Rect()).size(width, height)\n    })\n  }\n})\n\nregister(Rect, 'Rect')\n","export default class Queue {\n  constructor() {\n    this._first = null\n    this._last = null\n  }\n\n  // Shows us the first item in the list\n  first() {\n    return this._first && this._first.value\n  }\n\n  // Shows us the last item in the list\n  last() {\n    return this._last && this._last.value\n  }\n\n  push(value) {\n    // An item stores an id and the provided value\n    const item =\n      typeof value.next !== 'undefined'\n        ? value\n        : { value: value, next: null, prev: null }\n\n    // Deal with the queue being empty or populated\n    if (this._last) {\n      item.prev = this._last\n      this._last.next = item\n      this._last = item\n    } else {\n      this._last = item\n      this._first = item\n    }\n\n    // Return the current item\n    return item\n  }\n\n  // Removes the item that was returned from the push\n  remove(item) {\n    // Relink the previous item\n    if (item.prev) item.prev.next = item.next\n    if (item.next) item.next.prev = item.prev\n    if (item === this._last) this._last = item.prev\n    if (item === this._first) this._first = item.next\n\n    // Invalidate item\n    item.prev = null\n    item.next = null\n  }\n\n  shift() {\n    // Check if we have a value\n    const remove = this._first\n    if (!remove) return null\n\n    // If we do, remove it and relink things\n    this._first = remove.next\n    if (this._first) this._first.prev = null\n    this._last = this._first ? this._last : null\n    return remove.value\n  }\n}\n","import { globals } from '../utils/window.js'\nimport Queue from './Queue.js'\n\nconst Animator = {\n  nextDraw: null,\n  frames: new Queue(),\n  timeouts: new Queue(),\n  immediates: new Queue(),\n  timer: () => globals.window.performance || globals.window.Date,\n  transforms: [],\n\n  frame(fn) {\n    // Store the node\n    const node = Animator.frames.push({ run: fn })\n\n    // Request an animation frame if we don't have one\n    if (Animator.nextDraw === null) {\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\n    }\n\n    // Return the node so we can remove it easily\n    return node\n  },\n\n  timeout(fn, delay) {\n    delay = delay || 0\n\n    // Work out when the event should fire\n    const time = Animator.timer().now() + delay\n\n    // Add the timeout to the end of the queue\n    const node = Animator.timeouts.push({ run: fn, time: time })\n\n    // Request another animation frame if we need one\n    if (Animator.nextDraw === null) {\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\n    }\n\n    return node\n  },\n\n  immediate(fn) {\n    // Add the immediate fn to the end of the queue\n    const node = Animator.immediates.push(fn)\n    // Request another animation frame if we need one\n    if (Animator.nextDraw === null) {\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\n    }\n\n    return node\n  },\n\n  cancelFrame(node) {\n    node != null && Animator.frames.remove(node)\n  },\n\n  clearTimeout(node) {\n    node != null && Animator.timeouts.remove(node)\n  },\n\n  cancelImmediate(node) {\n    node != null && Animator.immediates.remove(node)\n  },\n\n  _draw(now) {\n    // Run all the timeouts we can run, if they are not ready yet, add them\n    // to the end of the queue immediately! (bad timeouts!!! [sarcasm])\n    let nextTimeout = null\n    const lastTimeout = Animator.timeouts.last()\n    while ((nextTimeout = Animator.timeouts.shift())) {\n      // Run the timeout if its time, or push it to the end\n      if (now >= nextTimeout.time) {\n        nextTimeout.run()\n      } else {\n        Animator.timeouts.push(nextTimeout)\n      }\n\n      // If we hit the last item, we should stop shifting out more items\n      if (nextTimeout === lastTimeout) break\n    }\n\n    // Run all of the animation frames\n    let nextFrame = null\n    const lastFrame = Animator.frames.last()\n    while (nextFrame !== lastFrame && (nextFrame = Animator.frames.shift())) {\n      nextFrame.run(now)\n    }\n\n    let nextImmediate = null\n    while ((nextImmediate = Animator.immediates.shift())) {\n      nextImmediate()\n    }\n\n    // If we have remaining timeouts or frames, draw until we don't anymore\n    Animator.nextDraw =\n      Animator.timeouts.first() || Animator.frames.first()\n        ? globals.window.requestAnimationFrame(Animator._draw)\n        : null\n  }\n}\n\nexport default Animator\n","import { globals } from '../utils/window.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Animator from './Animator.js'\nimport EventTarget from '../types/EventTarget.js'\n\nconst makeSchedule = function (runnerInfo) {\n  const start = runnerInfo.start\n  const duration = runnerInfo.runner.duration()\n  const end = start + duration\n  return {\n    start: start,\n    duration: duration,\n    end: end,\n    runner: runnerInfo.runner\n  }\n}\n\nconst defaultSource = function () {\n  const w = globals.window\n  return (w.performance || w.Date).now()\n}\n\nexport default class Timeline extends EventTarget {\n  // Construct a new timeline on the given element\n  constructor(timeSource = defaultSource) {\n    super()\n\n    this._timeSource = timeSource\n\n    // terminate resets all variables to their initial state\n    this.terminate()\n  }\n\n  active() {\n    return !!this._nextFrame\n  }\n\n  finish() {\n    // Go to end and pause\n    this.time(this.getEndTimeOfTimeline() + 1)\n    return this.pause()\n  }\n\n  // Calculates the end of the timeline\n  getEndTime() {\n    const lastRunnerInfo = this.getLastRunnerInfo()\n    const lastDuration = lastRunnerInfo ? lastRunnerInfo.runner.duration() : 0\n    const lastStartTime = lastRunnerInfo ? lastRunnerInfo.start : this._time\n    return lastStartTime + lastDuration\n  }\n\n  getEndTimeOfTimeline() {\n    const endTimes = this._runners.map((i) => i.start + i.runner.duration())\n    return Math.max(0, ...endTimes)\n  }\n\n  getLastRunnerInfo() {\n    return this.getRunnerInfoById(this._lastRunnerId)\n  }\n\n  getRunnerInfoById(id) {\n    return this._runners[this._runnerIds.indexOf(id)] || null\n  }\n\n  pause() {\n    this._paused = true\n    return this._continue()\n  }\n\n  persist(dtOrForever) {\n    if (dtOrForever == null) return this._persist\n    this._persist = dtOrForever\n    return this\n  }\n\n  play() {\n    // Now make sure we are not paused and continue the animation\n    this._paused = false\n    return this.updateTime()._continue()\n  }\n\n  reverse(yes) {\n    const currentSpeed = this.speed()\n    if (yes == null) return this.speed(-currentSpeed)\n\n    const positive = Math.abs(currentSpeed)\n    return this.speed(yes ? -positive : positive)\n  }\n\n  // schedules a runner on the timeline\n  schedule(runner, delay, when) {\n    if (runner == null) {\n      return this._runners.map(makeSchedule)\n    }\n\n    // The start time for the next animation can either be given explicitly,\n    // derived from the current timeline time or it can be relative to the\n    // last start time to chain animations directly\n\n    let absoluteStartTime = 0\n    const endTime = this.getEndTime()\n    delay = delay || 0\n\n    // Work out when to start the animation\n    if (when == null || when === 'last' || when === 'after') {\n      // Take the last time and increment\n      absoluteStartTime = endTime\n    } else if (when === 'absolute' || when === 'start') {\n      absoluteStartTime = delay\n      delay = 0\n    } else if (when === 'now') {\n      absoluteStartTime = this._time\n    } else if (when === 'relative') {\n      const runnerInfo = this.getRunnerInfoById(runner.id)\n      if (runnerInfo) {\n        absoluteStartTime = runnerInfo.start + delay\n        delay = 0\n      }\n    } else if (when === 'with-last') {\n      const lastRunnerInfo = this.getLastRunnerInfo()\n      const lastStartTime = lastRunnerInfo ? lastRunnerInfo.start : this._time\n      absoluteStartTime = lastStartTime\n    } else {\n      throw new Error('Invalid value for the \"when\" parameter')\n    }\n\n    // Manage runner\n    runner.unschedule()\n    runner.timeline(this)\n\n    const persist = runner.persist()\n    const runnerInfo = {\n      persist: persist === null ? this._persist : persist,\n      start: absoluteStartTime + delay,\n      runner\n    }\n\n    this._lastRunnerId = runner.id\n\n    this._runners.push(runnerInfo)\n    this._runners.sort((a, b) => a.start - b.start)\n    this._runnerIds = this._runners.map((info) => info.runner.id)\n\n    this.updateTime()._continue()\n    return this\n  }\n\n  seek(dt) {\n    return this.time(this._time + dt)\n  }\n\n  source(fn) {\n    if (fn == null) return this._timeSource\n    this._timeSource = fn\n    return this\n  }\n\n  speed(speed) {\n    if (speed == null) return this._speed\n    this._speed = speed\n    return this\n  }\n\n  stop() {\n    // Go to start and pause\n    this.time(0)\n    return this.pause()\n  }\n\n  time(time) {\n    if (time == null) return this._time\n    this._time = time\n    return this._continue(true)\n  }\n\n  // Remove the runner from this timeline\n  unschedule(runner) {\n    const index = this._runnerIds.indexOf(runner.id)\n    if (index < 0) return this\n\n    this._runners.splice(index, 1)\n    this._runnerIds.splice(index, 1)\n\n    runner.timeline(null)\n    return this\n  }\n\n  // Makes sure, that after pausing the time doesn't jump\n  updateTime() {\n    if (!this.active()) {\n      this._lastSourceTime = this._timeSource()\n    }\n    return this\n  }\n\n  // Checks if we are running and continues the animation\n  _continue(immediateStep = false) {\n    Animator.cancelFrame(this._nextFrame)\n    this._nextFrame = null\n\n    if (immediateStep) return this._stepImmediate()\n    if (this._paused) return this\n\n    this._nextFrame = Animator.frame(this._step)\n    return this\n  }\n\n  _stepFn(immediateStep = false) {\n    // Get the time delta from the last time and update the time\n    const time = this._timeSource()\n    let dtSource = time - this._lastSourceTime\n\n    if (immediateStep) dtSource = 0\n\n    const dtTime = this._speed * dtSource + (this._time - this._lastStepTime)\n    this._lastSourceTime = time\n\n    // Only update the time if we use the timeSource.\n    // Otherwise use the current time\n    if (!immediateStep) {\n      // Update the time\n      this._time += dtTime\n      this._time = this._time < 0 ? 0 : this._time\n    }\n    this._lastStepTime = this._time\n    this.fire('time', this._time)\n\n    // This is for the case that the timeline was seeked so that the time\n    // is now before the startTime of the runner. That is why we need to set\n    // the runner to position 0\n\n    // FIXME:\n    // However, resetting in insertion order leads to bugs. Considering the case,\n    // where 2 runners change the same attribute but in different times,\n    // resetting both of them will lead to the case where the later defined\n    // runner always wins the reset even if the other runner started earlier\n    // and therefore should win the attribute battle\n    // this can be solved by resetting them backwards\n    for (let k = this._runners.length; k--; ) {\n      // Get and run the current runner and ignore it if its inactive\n      const runnerInfo = this._runners[k]\n      const runner = runnerInfo.runner\n\n      // Make sure that we give the actual difference\n      // between runner start time and now\n      const dtToStart = this._time - runnerInfo.start\n\n      // Dont run runner if not started yet\n      // and try to reset it\n      if (dtToStart <= 0) {\n        runner.reset()\n      }\n    }\n\n    // Run all of the runners directly\n    let runnersLeft = false\n    for (let i = 0, len = this._runners.length; i < len; i++) {\n      // Get and run the current runner and ignore it if its inactive\n      const runnerInfo = this._runners[i]\n      const runner = runnerInfo.runner\n      let dt = dtTime\n\n      // Make sure that we give the actual difference\n      // between runner start time and now\n      const dtToStart = this._time - runnerInfo.start\n\n      // Dont run runner if not started yet\n      if (dtToStart <= 0) {\n        runnersLeft = true\n        continue\n      } else if (dtToStart < dt) {\n        // Adjust dt to make sure that animation is on point\n        dt = dtToStart\n      }\n\n      if (!runner.active()) continue\n\n      // If this runner is still going, signal that we need another animation\n      // frame, otherwise, remove the completed runner\n      const finished = runner.step(dt).done\n      if (!finished) {\n        runnersLeft = true\n        // continue\n      } else if (runnerInfo.persist !== true) {\n        // runner is finished. And runner might get removed\n        const endTime = runner.duration() - runner.time() + this._time\n\n        if (endTime + runnerInfo.persist < this._time) {\n          // Delete runner and correct index\n          runner.unschedule()\n          --i\n          --len\n        }\n      }\n    }\n\n    // Basically: we continue when there are runners right from us in time\n    // when -->, and when runners are left from us when <--\n    if (\n      (runnersLeft && !(this._speed < 0 && this._time === 0)) ||\n      (this._runnerIds.length && this._speed < 0 && this._time > 0)\n    ) {\n      this._continue()\n    } else {\n      this.pause()\n      this.fire('finished')\n    }\n\n    return this\n  }\n\n  terminate() {\n    // cleanup memory\n\n    // Store the timing variables\n    this._startTime = 0\n    this._speed = 1.0\n\n    // Determines how long a runner is hold in memory. Can be a dt or true/false\n    this._persist = 0\n\n    // Keep track of the running animations and their starting parameters\n    this._nextFrame = null\n    this._paused = true\n    this._runners = []\n    this._runnerIds = []\n    this._lastRunnerId = -1\n    this._time = 0\n    this._lastSourceTime = 0\n    this._lastStepTime = 0\n\n    // Make sure that step is always called in class context\n    this._step = this._stepFn.bind(this, false)\n    this._stepImmediate = this._stepFn.bind(this, true)\n  }\n}\n\nregisterMethods({\n  Element: {\n    timeline: function (timeline) {\n      if (timeline == null) {\n        this._timeline = this._timeline || new Timeline()\n        return this._timeline\n      } else {\n        this._timeline = timeline\n        return this\n      }\n    }\n  }\n})\n","import { Controller, Ease, Stepper } from './Controller.js'\nimport { extend, register } from '../utils/adopter.js'\nimport { from, to } from '../modules/core/gradiented.js'\nimport { getOrigin } from '../utils/utils.js'\nimport { noop, timeline } from '../modules/core/defaults.js'\nimport { registerMethods } from '../utils/methods.js'\nimport { rx, ry } from '../modules/core/circled.js'\nimport Animator from './Animator.js'\nimport Box from '../types/Box.js'\nimport EventTarget from '../types/EventTarget.js'\nimport Matrix from '../types/Matrix.js'\nimport Morphable, { TransformBag, ObjectBag } from './Morphable.js'\nimport Point from '../types/Point.js'\nimport SVGNumber from '../types/SVGNumber.js'\nimport Timeline from './Timeline.js'\n\nexport default class Runner extends EventTarget {\n  constructor(options) {\n    super()\n\n    // Store a unique id on the runner, so that we can identify it later\n    this.id = Runner.id++\n\n    // Ensure a default value\n    options = options == null ? timeline.duration : options\n\n    // Ensure that we get a controller\n    options = typeof options === 'function' ? new Controller(options) : options\n\n    // Declare all of the variables\n    this._element = null\n    this._timeline = null\n    this.done = false\n    this._queue = []\n\n    // Work out the stepper and the duration\n    this._duration = typeof options === 'number' && options\n    this._isDeclarative = options instanceof Controller\n    this._stepper = this._isDeclarative ? options : new Ease()\n\n    // We copy the current values from the timeline because they can change\n    this._history = {}\n\n    // Store the state of the runner\n    this.enabled = true\n    this._time = 0\n    this._lastTime = 0\n\n    // At creation, the runner is in reset state\n    this._reseted = true\n\n    // Save transforms applied to this runner\n    this.transforms = new Matrix()\n    this.transformId = 1\n\n    // Looping variables\n    this._haveReversed = false\n    this._reverse = false\n    this._loopsDone = 0\n    this._swing = false\n    this._wait = 0\n    this._times = 1\n\n    this._frameId = null\n\n    // Stores how long a runner is stored after being done\n    this._persist = this._isDeclarative ? true : null\n  }\n\n  static sanitise(duration, delay, when) {\n    // Initialise the default parameters\n    let times = 1\n    let swing = false\n    let wait = 0\n    duration = duration ?? timeline.duration\n    delay = delay ?? timeline.delay\n    when = when || 'last'\n\n    // If we have an object, unpack the values\n    if (typeof duration === 'object' && !(duration instanceof Stepper)) {\n      delay = duration.delay ?? delay\n      when = duration.when ?? when\n      swing = duration.swing || swing\n      times = duration.times ?? times\n      wait = duration.wait ?? wait\n      duration = duration.duration ?? timeline.duration\n    }\n\n    return {\n      duration: duration,\n      delay: delay,\n      swing: swing,\n      times: times,\n      wait: wait,\n      when: when\n    }\n  }\n\n  active(enabled) {\n    if (enabled == null) return this.enabled\n    this.enabled = enabled\n    return this\n  }\n\n  /*\n  Private Methods\n  ===============\n  Methods that shouldn't be used externally\n  */\n  addTransform(transform) {\n    this.transforms.lmultiplyO(transform)\n    return this\n  }\n\n  after(fn) {\n    return this.on('finished', fn)\n  }\n\n  animate(duration, delay, when) {\n    const o = Runner.sanitise(duration, delay, when)\n    const runner = new Runner(o.duration)\n    if (this._timeline) runner.timeline(this._timeline)\n    if (this._element) runner.element(this._element)\n    return runner.loop(o).schedule(o.delay, o.when)\n  }\n\n  clearTransform() {\n    this.transforms = new Matrix()\n    return this\n  }\n\n  // TODO: Keep track of all transformations so that deletion is faster\n  clearTransformsFromQueue() {\n    if (\n      !this.done ||\n      !this._timeline ||\n      !this._timeline._runnerIds.includes(this.id)\n    ) {\n      this._queue = this._queue.filter((item) => {\n        return !item.isTransform\n      })\n    }\n  }\n\n  delay(delay) {\n    return this.animate(0, delay)\n  }\n\n  duration() {\n    return this._times * (this._wait + this._duration) - this._wait\n  }\n\n  during(fn) {\n    return this.queue(null, fn)\n  }\n\n  ease(fn) {\n    this._stepper = new Ease(fn)\n    return this\n  }\n  /*\n  Runner Definitions\n  ==================\n  These methods help us define the runtime behaviour of the Runner or they\n  help us make new runners from the current runner\n  */\n\n  element(element) {\n    if (element == null) return this._element\n    this._element = element\n    element._prepareRunner()\n    return this\n  }\n\n  finish() {\n    return this.step(Infinity)\n  }\n\n  loop(times, swing, wait) {\n    // Deal with the user passing in an object\n    if (typeof times === 'object') {\n      swing = times.swing\n      wait = times.wait\n      times = times.times\n    }\n\n    // Sanitise the values and store them\n    this._times = times || Infinity\n    this._swing = swing || false\n    this._wait = wait || 0\n\n    // Allow true to be passed\n    if (this._times === true) {\n      this._times = Infinity\n    }\n\n    return this\n  }\n\n  loops(p) {\n    const loopDuration = this._duration + this._wait\n    if (p == null) {\n      const loopsDone = Math.floor(this._time / loopDuration)\n      const relativeTime = this._time - loopsDone * loopDuration\n      const position = relativeTime / this._duration\n      return Math.min(loopsDone + position, this._times)\n    }\n    const whole = Math.floor(p)\n    const partial = p % 1\n    const time = loopDuration * whole + this._duration * partial\n    return this.time(time)\n  }\n\n  persist(dtOrForever) {\n    if (dtOrForever == null) return this._persist\n    this._persist = dtOrForever\n    return this\n  }\n\n  position(p) {\n    // Get all of the variables we need\n    const x = this._time\n    const d = this._duration\n    const w = this._wait\n    const t = this._times\n    const s = this._swing\n    const r = this._reverse\n    let position\n\n    if (p == null) {\n      /*\n      This function converts a time to a position in the range [0, 1]\n      The full explanation can be found in this desmos demonstration\n        https://www.desmos.com/calculator/u4fbavgche\n      The logic is slightly simplified here because we can use booleans\n      */\n\n      // Figure out the value without thinking about the start or end time\n      const f = function (x) {\n        const swinging = s * Math.floor((x % (2 * (w + d))) / (w + d))\n        const backwards = (swinging && !r) || (!swinging && r)\n        const uncliped =\n          (Math.pow(-1, backwards) * (x % (w + d))) / d + backwards\n        const clipped = Math.max(Math.min(uncliped, 1), 0)\n        return clipped\n      }\n\n      // Figure out the value by incorporating the start time\n      const endTime = t * (w + d) - w\n      position =\n        x <= 0\n          ? Math.round(f(1e-5))\n          : x < endTime\n            ? f(x)\n            : Math.round(f(endTime - 1e-5))\n      return position\n    }\n\n    // Work out the loops done and add the position to the loops done\n    const loopsDone = Math.floor(this.loops())\n    const swingForward = s && loopsDone % 2 === 0\n    const forwards = (swingForward && !r) || (r && swingForward)\n    position = loopsDone + (forwards ? p : 1 - p)\n    return this.loops(position)\n  }\n\n  progress(p) {\n    if (p == null) {\n      return Math.min(1, this._time / this.duration())\n    }\n    return this.time(p * this.duration())\n  }\n\n  /*\n  Basic Functionality\n  ===================\n  These methods allow us to attach basic functions to the runner directly\n  */\n  queue(initFn, runFn, retargetFn, isTransform) {\n    this._queue.push({\n      initialiser: initFn || noop,\n      runner: runFn || noop,\n      retarget: retargetFn,\n      isTransform: isTransform,\n      initialised: false,\n      finished: false\n    })\n    const timeline = this.timeline()\n    timeline && this.timeline()._continue()\n    return this\n  }\n\n  reset() {\n    if (this._reseted) return this\n    this.time(0)\n    this._reseted = true\n    return this\n  }\n\n  reverse(reverse) {\n    this._reverse = reverse == null ? !this._reverse : reverse\n    return this\n  }\n\n  schedule(timeline, delay, when) {\n    // The user doesn't need to pass a timeline if we already have one\n    if (!(timeline instanceof Timeline)) {\n      when = delay\n      delay = timeline\n      timeline = this.timeline()\n    }\n\n    // If there is no timeline, yell at the user...\n    if (!timeline) {\n      throw Error('Runner cannot be scheduled without timeline')\n    }\n\n    // Schedule the runner on the timeline provided\n    timeline.schedule(this, delay, when)\n    return this\n  }\n\n  step(dt) {\n    // If we are inactive, this stepper just gets skipped\n    if (!this.enabled) return this\n\n    // Update the time and get the new position\n    dt = dt == null ? 16 : dt\n    this._time += dt\n    const position = this.position()\n\n    // Figure out if we need to run the stepper in this frame\n    const running = this._lastPosition !== position && this._time >= 0\n    this._lastPosition = position\n\n    // Figure out if we just started\n    const duration = this.duration()\n    const justStarted = this._lastTime <= 0 && this._time > 0\n    const justFinished = this._lastTime < duration && this._time >= duration\n\n    this._lastTime = this._time\n    if (justStarted) {\n      this.fire('start', this)\n    }\n\n    // Work out if the runner is finished set the done flag here so animations\n    // know, that they are running in the last step (this is good for\n    // transformations which can be merged)\n    const declarative = this._isDeclarative\n    this.done = !declarative && !justFinished && this._time >= duration\n\n    // Runner is running. So its not in reset state anymore\n    this._reseted = false\n\n    let converged = false\n    // Call initialise and the run function\n    if (running || declarative) {\n      this._initialise(running)\n\n      // clear the transforms on this runner so they dont get added again and again\n      this.transforms = new Matrix()\n      converged = this._run(declarative ? dt : position)\n\n      this.fire('step', this)\n    }\n    // correct the done flag here\n    // declarative animations itself know when they converged\n    this.done = this.done || (converged && declarative)\n    if (justFinished) {\n      this.fire('finished', this)\n    }\n    return this\n  }\n\n  /*\n  Runner animation methods\n  ========================\n  Control how the animation plays\n  */\n  time(time) {\n    if (time == null) {\n      return this._time\n    }\n    const dt = time - this._time\n    this.step(dt)\n    return this\n  }\n\n  timeline(timeline) {\n    // check explicitly for undefined so we can set the timeline to null\n    if (typeof timeline === 'undefined') return this._timeline\n    this._timeline = timeline\n    return this\n  }\n\n  unschedule() {\n    const timeline = this.timeline()\n    timeline && timeline.unschedule(this)\n    return this\n  }\n\n  // Run each initialise function in the runner if required\n  _initialise(running) {\n    // If we aren't running, we shouldn't initialise when not declarative\n    if (!running && !this._isDeclarative) return\n\n    // Loop through all of the initialisers\n    for (let i = 0, len = this._queue.length; i < len; ++i) {\n      // Get the current initialiser\n      const current = this._queue[i]\n\n      // Determine whether we need to initialise\n      const needsIt = this._isDeclarative || (!current.initialised && running)\n      running = !current.finished\n\n      // Call the initialiser if we need to\n      if (needsIt && running) {\n        current.initialiser.call(this)\n        current.initialised = true\n      }\n    }\n  }\n\n  // Save a morpher to the morpher list so that we can retarget it later\n  _rememberMorpher(method, morpher) {\n    this._history[method] = {\n      morpher: morpher,\n      caller: this._queue[this._queue.length - 1]\n    }\n\n    // We have to resume the timeline in case a controller\n    // is already done without being ever run\n    // This can happen when e.g. this is done:\n    //    anim = el.animate(new SVG.Spring)\n    // and later\n    //    anim.move(...)\n    if (this._isDeclarative) {\n      const timeline = this.timeline()\n      timeline && timeline.play()\n    }\n  }\n\n  // Try to set the target for a morpher if the morpher exists, otherwise\n  // Run each run function for the position or dt given\n  _run(positionOrDt) {\n    // Run all of the _queue directly\n    let allfinished = true\n    for (let i = 0, len = this._queue.length; i < len; ++i) {\n      // Get the current function to run\n      const current = this._queue[i]\n\n      // Run the function if its not finished, we keep track of the finished\n      // flag for the sake of declarative _queue\n      const converged = current.runner.call(this, positionOrDt)\n      current.finished = current.finished || converged === true\n      allfinished = allfinished && current.finished\n    }\n\n    // We report when all of the constructors are finished\n    return allfinished\n  }\n\n  // do nothing and return false\n  _tryRetarget(method, target, extra) {\n    if (this._history[method]) {\n      // if the last method wasn't even initialised, throw it away\n      if (!this._history[method].caller.initialised) {\n        const index = this._queue.indexOf(this._history[method].caller)\n        this._queue.splice(index, 1)\n        return false\n      }\n\n      // for the case of transformations, we use the special retarget function\n      // which has access to the outer scope\n      if (this._history[method].caller.retarget) {\n        this._history[method].caller.retarget.call(this, target, extra)\n        // for everything else a simple morpher change is sufficient\n      } else {\n        this._history[method].morpher.to(target)\n      }\n\n      this._history[method].caller.finished = false\n      const timeline = this.timeline()\n      timeline && timeline.play()\n      return true\n    }\n    return false\n  }\n}\n\nRunner.id = 0\n\nexport class FakeRunner {\n  constructor(transforms = new Matrix(), id = -1, done = true) {\n    this.transforms = transforms\n    this.id = id\n    this.done = done\n  }\n\n  clearTransformsFromQueue() {}\n}\n\nextend([Runner, FakeRunner], {\n  mergeWith(runner) {\n    return new FakeRunner(\n      runner.transforms.lmultiply(this.transforms),\n      runner.id\n    )\n  }\n})\n\n// FakeRunner.emptyRunner = new FakeRunner()\n\nconst lmultiply = (last, curr) => last.lmultiplyO(curr)\nconst getRunnerTransform = (runner) => runner.transforms\n\nfunction mergeTransforms() {\n  // Find the matrix to apply to the element and apply it\n  const runners = this._transformationRunners.runners\n  const netTransform = runners\n    .map(getRunnerTransform)\n    .reduce(lmultiply, new Matrix())\n\n  this.transform(netTransform)\n\n  this._transformationRunners.merge()\n\n  if (this._transformationRunners.length() === 1) {\n    this._frameId = null\n  }\n}\n\nexport class RunnerArray {\n  constructor() {\n    this.runners = []\n    this.ids = []\n  }\n\n  add(runner) {\n    if (this.runners.includes(runner)) return\n    const id = runner.id + 1\n\n    this.runners.push(runner)\n    this.ids.push(id)\n\n    return this\n  }\n\n  clearBefore(id) {\n    const deleteCnt = this.ids.indexOf(id + 1) || 1\n    this.ids.splice(0, deleteCnt, 0)\n    this.runners\n      .splice(0, deleteCnt, new FakeRunner())\n      .forEach((r) => r.clearTransformsFromQueue())\n    return this\n  }\n\n  edit(id, newRunner) {\n    const index = this.ids.indexOf(id + 1)\n    this.ids.splice(index, 1, id + 1)\n    this.runners.splice(index, 1, newRunner)\n    return this\n  }\n\n  getByID(id) {\n    return this.runners[this.ids.indexOf(id + 1)]\n  }\n\n  length() {\n    return this.ids.length\n  }\n\n  merge() {\n    let lastRunner = null\n    for (let i = 0; i < this.runners.length; ++i) {\n      const runner = this.runners[i]\n\n      const condition =\n        lastRunner &&\n        runner.done &&\n        lastRunner.done &&\n        // don't merge runner when persisted on timeline\n        (!runner._timeline ||\n          !runner._timeline._runnerIds.includes(runner.id)) &&\n        (!lastRunner._timeline ||\n          !lastRunner._timeline._runnerIds.includes(lastRunner.id))\n\n      if (condition) {\n        // the +1 happens in the function\n        this.remove(runner.id)\n        const newRunner = runner.mergeWith(lastRunner)\n        this.edit(lastRunner.id, newRunner)\n        lastRunner = newRunner\n        --i\n      } else {\n        lastRunner = runner\n      }\n    }\n\n    return this\n  }\n\n  remove(id) {\n    const index = this.ids.indexOf(id + 1)\n    this.ids.splice(index, 1)\n    this.runners.splice(index, 1)\n    return this\n  }\n}\n\nregisterMethods({\n  Element: {\n    animate(duration, delay, when) {\n      const o = Runner.sanitise(duration, delay, when)\n      const timeline = this.timeline()\n      return new Runner(o.duration)\n        .loop(o)\n        .element(this)\n        .timeline(timeline.play())\n        .schedule(o.delay, o.when)\n    },\n\n    delay(by, when) {\n      return this.animate(0, by, when)\n    },\n\n    // this function searches for all runners on the element and deletes the ones\n    // which run before the current one. This is because absolute transformations\n    // overwrite anything anyway so there is no need to waste time computing\n    // other runners\n    _clearTransformRunnersBefore(currentRunner) {\n      this._transformationRunners.clearBefore(currentRunner.id)\n    },\n\n    _currentTransform(current) {\n      return (\n        this._transformationRunners.runners\n          // we need the equal sign here to make sure, that also transformations\n          // on the same runner which execute before the current transformation are\n          // taken into account\n          .filter((runner) => runner.id <= current.id)\n          .map(getRunnerTransform)\n          .reduce(lmultiply, new Matrix())\n      )\n    },\n\n    _addRunner(runner) {\n      this._transformationRunners.add(runner)\n\n      // Make sure that the runner merge is executed at the very end of\n      // all Animator functions. That is why we use immediate here to execute\n      // the merge right after all frames are run\n      Animator.cancelImmediate(this._frameId)\n      this._frameId = Animator.immediate(mergeTransforms.bind(this))\n    },\n\n    _prepareRunner() {\n      if (this._frameId == null) {\n        this._transformationRunners = new RunnerArray().add(\n          new FakeRunner(new Matrix(this))\n        )\n      }\n    }\n  }\n})\n\n// Will output the elements from array A that are not in the array B\nconst difference = (a, b) => a.filter((x) => !b.includes(x))\n\nextend(Runner, {\n  attr(a, v) {\n    return this.styleAttr('attr', a, v)\n  },\n\n  // Add animatable styles\n  css(s, v) {\n    return this.styleAttr('css', s, v)\n  },\n\n  styleAttr(type, nameOrAttrs, val) {\n    if (typeof nameOrAttrs === 'string') {\n      return this.styleAttr(type, { [nameOrAttrs]: val })\n    }\n\n    let attrs = nameOrAttrs\n    if (this._tryRetarget(type, attrs)) return this\n\n    let morpher = new Morphable(this._stepper).to(attrs)\n    let keys = Object.keys(attrs)\n\n    this.queue(\n      function () {\n        morpher = morpher.from(this.element()[type](keys))\n      },\n      function (pos) {\n        this.element()[type](morpher.at(pos).valueOf())\n        return morpher.done()\n      },\n      function (newToAttrs) {\n        // Check if any new keys were added\n        const newKeys = Object.keys(newToAttrs)\n        const differences = difference(newKeys, keys)\n\n        // If their are new keys, initialize them and add them to morpher\n        if (differences.length) {\n          // Get the values\n          const addedFromAttrs = this.element()[type](differences)\n\n          // Get the already initialized values\n          const oldFromAttrs = new ObjectBag(morpher.from()).valueOf()\n\n          // Merge old and new\n          Object.assign(oldFromAttrs, addedFromAttrs)\n          morpher.from(oldFromAttrs)\n        }\n\n        // Get the object from the morpher\n        const oldToAttrs = new ObjectBag(morpher.to()).valueOf()\n\n        // Merge in new attributes\n        Object.assign(oldToAttrs, newToAttrs)\n\n        // Change morpher target\n        morpher.to(oldToAttrs)\n\n        // Make sure that we save the work we did so we don't need it to do again\n        keys = newKeys\n        attrs = newToAttrs\n      }\n    )\n\n    this._rememberMorpher(type, morpher)\n    return this\n  },\n\n  zoom(level, point) {\n    if (this._tryRetarget('zoom', level, point)) return this\n\n    let morpher = new Morphable(this._stepper).to(new SVGNumber(level))\n\n    this.queue(\n      function () {\n        morpher = morpher.from(this.element().zoom())\n      },\n      function (pos) {\n        this.element().zoom(morpher.at(pos), point)\n        return morpher.done()\n      },\n      function (newLevel, newPoint) {\n        point = newPoint\n        morpher.to(newLevel)\n      }\n    )\n\n    this._rememberMorpher('zoom', morpher)\n    return this\n  },\n\n  /**\n   ** absolute transformations\n   **/\n\n  //\n  // M v -----|-----(D M v = F v)------|----->  T v\n  //\n  // 1. define the final state (T) and decompose it (once)\n  //    t = [tx, ty, the, lam, sy, sx]\n  // 2. on every frame: pull the current state of all previous transforms\n  //    (M - m can change)\n  //   and then write this as m = [tx0, ty0, the0, lam0, sy0, sx0]\n  // 3. Find the interpolated matrix F(pos) = m + pos * (t - m)\n  //   - Note F(0) = M\n  //   - Note F(1) = T\n  // 4. Now you get the delta matrix as a result: D = F * inv(M)\n\n  transform(transforms, relative, affine) {\n    // If we have a declarative function, we should retarget it if possible\n    relative = transforms.relative || relative\n    if (\n      this._isDeclarative &&\n      !relative &&\n      this._tryRetarget('transform', transforms)\n    ) {\n      return this\n    }\n\n    // Parse the parameters\n    const isMatrix = Matrix.isMatrixLike(transforms)\n    affine =\n      transforms.affine != null\n        ? transforms.affine\n        : affine != null\n          ? affine\n          : !isMatrix\n\n    // Create a morpher and set its type\n    const morpher = new Morphable(this._stepper).type(\n      affine ? TransformBag : Matrix\n    )\n\n    let origin\n    let element\n    let current\n    let currentAngle\n    let startTransform\n\n    function setup() {\n      // make sure element and origin is defined\n      element = element || this.element()\n      origin = origin || getOrigin(transforms, element)\n\n      startTransform = new Matrix(relative ? undefined : element)\n\n      // add the runner to the element so it can merge transformations\n      element._addRunner(this)\n\n      // Deactivate all transforms that have run so far if we are absolute\n      if (!relative) {\n        element._clearTransformRunnersBefore(this)\n      }\n    }\n\n    function run(pos) {\n      // clear all other transforms before this in case something is saved\n      // on this runner. We are absolute. We dont need these!\n      if (!relative) this.clearTransform()\n\n      const { x, y } = new Point(origin).transform(\n        element._currentTransform(this)\n      )\n\n      let target = new Matrix({ ...transforms, origin: [x, y] })\n      let start = this._isDeclarative && current ? current : startTransform\n\n      if (affine) {\n        target = target.decompose(x, y)\n        start = start.decompose(x, y)\n\n        // Get the current and target angle as it was set\n        const rTarget = target.rotate\n        const rCurrent = start.rotate\n\n        // Figure out the shortest path to rotate directly\n        const possibilities = [rTarget - 360, rTarget, rTarget + 360]\n        const distances = possibilities.map((a) => Math.abs(a - rCurrent))\n        const shortest = Math.min(...distances)\n        const index = distances.indexOf(shortest)\n        target.rotate = possibilities[index]\n      }\n\n      if (relative) {\n        // we have to be careful here not to overwrite the rotation\n        // with the rotate method of Matrix\n        if (!isMatrix) {\n          target.rotate = transforms.rotate || 0\n        }\n        if (this._isDeclarative && currentAngle) {\n          start.rotate = currentAngle\n        }\n      }\n\n      morpher.from(start)\n      morpher.to(target)\n\n      const affineParameters = morpher.at(pos)\n      currentAngle = affineParameters.rotate\n      current = new Matrix(affineParameters)\n\n      this.addTransform(current)\n      element._addRunner(this)\n      return morpher.done()\n    }\n\n    function retarget(newTransforms) {\n      // only get a new origin if it changed since the last call\n      if (\n        (newTransforms.origin || 'center').toString() !==\n        (transforms.origin || 'center').toString()\n      ) {\n        origin = getOrigin(newTransforms, element)\n      }\n\n      // overwrite the old transformations with the new ones\n      transforms = { ...newTransforms, origin }\n    }\n\n    this.queue(setup, run, retarget, true)\n    this._isDeclarative && this._rememberMorpher('transform', morpher)\n    return this\n  },\n\n  // Animatable x-axis\n  x(x) {\n    return this._queueNumber('x', x)\n  },\n\n  // Animatable y-axis\n  y(y) {\n    return this._queueNumber('y', y)\n  },\n\n  ax(x) {\n    return this._queueNumber('ax', x)\n  },\n\n  ay(y) {\n    return this._queueNumber('ay', y)\n  },\n\n  dx(x = 0) {\n    return this._queueNumberDelta('x', x)\n  },\n\n  dy(y = 0) {\n    return this._queueNumberDelta('y', y)\n  },\n\n  dmove(x, y) {\n    return this.dx(x).dy(y)\n  },\n\n  _queueNumberDelta(method, to) {\n    to = new SVGNumber(to)\n\n    // Try to change the target if we have this method already registered\n    if (this._tryRetarget(method, to)) return this\n\n    // Make a morpher and queue the animation\n    const morpher = new Morphable(this._stepper).to(to)\n    let from = null\n    this.queue(\n      function () {\n        from = this.element()[method]()\n        morpher.from(from)\n        morpher.to(from + to)\n      },\n      function (pos) {\n        this.element()[method](morpher.at(pos))\n        return morpher.done()\n      },\n      function (newTo) {\n        morpher.to(from + new SVGNumber(newTo))\n      }\n    )\n\n    // Register the morpher so that if it is changed again, we can retarget it\n    this._rememberMorpher(method, morpher)\n    return this\n  },\n\n  _queueObject(method, to) {\n    // Try to change the target if we have this method already registered\n    if (this._tryRetarget(method, to)) return this\n\n    // Make a morpher and queue the animation\n    const morpher = new Morphable(this._stepper).to(to)\n    this.queue(\n      function () {\n        morpher.from(this.element()[method]())\n      },\n      function (pos) {\n        this.element()[method](morpher.at(pos))\n        return morpher.done()\n      }\n    )\n\n    // Register the morpher so that if it is changed again, we can retarget it\n    this._rememberMorpher(method, morpher)\n    return this\n  },\n\n  _queueNumber(method, value) {\n    return this._queueObject(method, new SVGNumber(value))\n  },\n\n  // Animatable center x-axis\n  cx(x) {\n    return this._queueNumber('cx', x)\n  },\n\n  // Animatable center y-axis\n  cy(y) {\n    return this._queueNumber('cy', y)\n  },\n\n  // Add animatable move\n  move(x, y) {\n    return this.x(x).y(y)\n  },\n\n  amove(x, y) {\n    return this.ax(x).ay(y)\n  },\n\n  // Add animatable center\n  center(x, y) {\n    return this.cx(x).cy(y)\n  },\n\n  // Add animatable size\n  size(width, height) {\n    // animate bbox based size for all other elements\n    let box\n\n    if (!width || !height) {\n      box = this._element.bbox()\n    }\n\n    if (!width) {\n      width = (box.width / box.height) * height\n    }\n\n    if (!height) {\n      height = (box.height / box.width) * width\n    }\n\n    return this.width(width).height(height)\n  },\n\n  // Add animatable width\n  width(width) {\n    return this._queueNumber('width', width)\n  },\n\n  // Add animatable height\n  height(height) {\n    return this._queueNumber('height', height)\n  },\n\n  // Add animatable plot\n  plot(a, b, c, d) {\n    // Lines can be plotted with 4 arguments\n    if (arguments.length === 4) {\n      return this.plot([a, b, c, d])\n    }\n\n    if (this._tryRetarget('plot', a)) return this\n\n    const morpher = new Morphable(this._stepper)\n      .type(this._element.MorphArray)\n      .to(a)\n\n    this.queue(\n      function () {\n        morpher.from(this._element.array())\n      },\n      function (pos) {\n        this._element.plot(morpher.at(pos))\n        return morpher.done()\n      }\n    )\n\n    this._rememberMorpher('plot', morpher)\n    return this\n  },\n\n  // Add leading method\n  leading(value) {\n    return this._queueNumber('leading', value)\n  },\n\n  // Add animatable viewbox\n  viewbox(x, y, width, height) {\n    return this._queueObject('viewbox', new Box(x, y, width, height))\n  },\n\n  update(o) {\n    if (typeof o !== 'object') {\n      return this.update({\n        offset: arguments[0],\n        color: arguments[1],\n        opacity: arguments[2]\n      })\n    }\n\n    if (o.opacity != null) this.attr('stop-opacity', o.opacity)\n    if (o.color != null) this.attr('stop-color', o.color)\n    if (o.offset != null) this.attr('offset', o.offset)\n\n    return this\n  }\n})\n\nextend(Runner, { rx, ry, from, to })\nregister(Runner, 'Runner')\n","import {\n  adopt,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { svg, xlink, xmlns } from '../modules/core/namespaces.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Container from './Container.js'\nimport Defs from './Defs.js'\nimport { globals } from '../utils/window.js'\n\nexport default class Svg extends Container {\n  constructor(node, attrs = node) {\n    super(nodeOrNew('svg', node), attrs)\n    this.namespace()\n  }\n\n  // Creates and returns defs element\n  defs() {\n    if (!this.isRoot()) return this.root().defs()\n\n    return adopt(this.node.querySelector('defs')) || this.put(new Defs())\n  }\n\n  isRoot() {\n    return (\n      !this.node.parentNode ||\n      (!(this.node.parentNode instanceof globals.window.SVGElement) &&\n        this.node.parentNode.nodeName !== '#document-fragment')\n    )\n  }\n\n  // Add namespaces\n  namespace() {\n    if (!this.isRoot()) return this.root().namespace()\n    return this.attr({ xmlns: svg, version: '1.1' }).attr(\n      'xmlns:xlink',\n      xlink,\n      xmlns\n    )\n  }\n\n  removeNamespace() {\n    return this.attr({ xmlns: null, version: null })\n      .attr('xmlns:xlink', null, xmlns)\n      .attr('xmlns:svgjs', null, xmlns)\n  }\n\n  // Check if this is a root svg\n  // If not, call root() from this element\n  root() {\n    if (this.isRoot()) return this\n    return super.root()\n  }\n}\n\nregisterMethods({\n  Container: {\n    // Create nested svg document\n    nested: wrapWithAttrCheck(function () {\n      return this.put(new Svg())\n    })\n  }\n})\n\nregister(Svg, 'Svg', true)\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Container from './Container.js'\n\nexport default class Symbol extends Container {\n  // Initialize node\n  constructor(node, attrs = node) {\n    super(nodeOrNew('symbol', node), attrs)\n  }\n}\n\nregisterMethods({\n  Container: {\n    symbol: wrapWithAttrCheck(function () {\n      return this.put(new Symbol())\n    })\n  }\n})\n\nregister(Symbol, 'Symbol')\n","import { globals } from '../../utils/window.js'\n\n// Create plain text node\nexport function plain(text) {\n  // clear if build mode is disabled\n  if (this._build === false) {\n    this.clear()\n  }\n\n  // create text node\n  this.node.appendChild(globals.document.createTextNode(text))\n\n  return this\n}\n\n// Get length of text element\nexport function length() {\n  return this.node.getComputedTextLength()\n}\n\n// Move over x-axis\n// Text is moved by its bounding box\n// text-anchor does NOT matter\nexport function x(x, box = this.bbox()) {\n  if (x == null) {\n    return box.x\n  }\n\n  return this.attr('x', this.attr('x') + x - box.x)\n}\n\n// Move over y-axis\nexport function y(y, box = this.bbox()) {\n  if (y == null) {\n    return box.y\n  }\n\n  return this.attr('y', this.attr('y') + y - box.y)\n}\n\nexport function move(x, y, box = this.bbox()) {\n  return this.x(x, box).y(y, box)\n}\n\n// Move center over x-axis\nexport function cx(x, box = this.bbox()) {\n  if (x == null) {\n    return box.cx\n  }\n\n  return this.attr('x', this.attr('x') + x - box.cx)\n}\n\n// Move center over y-axis\nexport function cy(y, box = this.bbox()) {\n  if (y == null) {\n    return box.cy\n  }\n\n  return this.attr('y', this.attr('y') + y - box.cy)\n}\n\nexport function center(x, y, box = this.bbox()) {\n  return this.cx(x, box).cy(y, box)\n}\n\nexport function ax(x) {\n  return this.attr('x', x)\n}\n\nexport function ay(y) {\n  return this.attr('y', y)\n}\n\nexport function amove(x, y) {\n  return this.ax(x).ay(y)\n}\n\n// Enable / disable build mode\nexport function build(build) {\n  this._build = !!build\n  return this\n}\n","import {\n  adopt,\n  extend,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport SVGNumber from '../types/SVGNumber.js'\nimport Shape from './Shape.js'\nimport { globals } from '../utils/window.js'\nimport * as textable from '../modules/core/textable.js'\nimport { isDescriptive, writeDataToDom } from '../utils/utils.js'\n\nexport default class Text extends Shape {\n  // Initialize node\n  constructor(node, attrs = node) {\n    super(nodeOrNew('text', node), attrs)\n\n    this.dom.leading = this.dom.leading ?? new SVGNumber(1.3) // store leading value for rebuilding\n    this._rebuild = true // enable automatic updating of dy values\n    this._build = false // disable build mode for adding multiple lines\n  }\n\n  // Set / get leading\n  leading(value) {\n    // act as getter\n    if (value == null) {\n      return this.dom.leading\n    }\n\n    // act as setter\n    this.dom.leading = new SVGNumber(value)\n\n    return this.rebuild()\n  }\n\n  // Rebuild appearance type\n  rebuild(rebuild) {\n    // store new rebuild flag if given\n    if (typeof rebuild === 'boolean') {\n      this._rebuild = rebuild\n    }\n\n    // define position of all lines\n    if (this._rebuild) {\n      const self = this\n      let blankLineOffset = 0\n      const leading = this.dom.leading\n\n      this.each(function (i) {\n        if (isDescriptive(this.node)) return\n\n        const fontSize = globals.window\n          .getComputedStyle(this.node)\n          .getPropertyValue('font-size')\n\n        const dy = leading * new SVGNumber(fontSize)\n\n        if (this.dom.newLined) {\n          this.attr('x', self.attr('x'))\n\n          if (this.text() === '\\n') {\n            blankLineOffset += dy\n          } else {\n            this.attr('dy', i ? dy + blankLineOffset : 0)\n            blankLineOffset = 0\n          }\n        }\n      })\n\n      this.fire('rebuild')\n    }\n\n    return this\n  }\n\n  // overwrite method from parent to set data properly\n  setData(o) {\n    this.dom = o\n    this.dom.leading = new SVGNumber(o.leading || 1.3)\n    return this\n  }\n\n  writeDataToDom() {\n    writeDataToDom(this, this.dom, { leading: 1.3 })\n    return this\n  }\n\n  // Set the text content\n  text(text) {\n    // act as getter\n    if (text === undefined) {\n      const children = this.node.childNodes\n      let firstLine = 0\n      text = ''\n\n      for (let i = 0, len = children.length; i < len; ++i) {\n        // skip textPaths - they are no lines\n        if (children[i].nodeName === 'textPath' || isDescriptive(children[i])) {\n          if (i === 0) firstLine = i + 1\n          continue\n        }\n\n        // add newline if its not the first child and newLined is set to true\n        if (\n          i !== firstLine &&\n          children[i].nodeType !== 3 &&\n          adopt(children[i]).dom.newLined === true\n        ) {\n          text += '\\n'\n        }\n\n        // add content of this node\n        text += children[i].textContent\n      }\n\n      return text\n    }\n\n    // remove existing content\n    this.clear().build(true)\n\n    if (typeof text === 'function') {\n      // call block\n      text.call(this, this)\n    } else {\n      // store text and make sure text is not blank\n      text = (text + '').split('\\n')\n\n      // build new lines\n      for (let j = 0, jl = text.length; j < jl; j++) {\n        this.newLine(text[j])\n      }\n    }\n\n    // disable build mode and rebuild lines\n    return this.build(false).rebuild()\n  }\n}\n\nextend(Text, textable)\n\nregisterMethods({\n  Container: {\n    // Create text element\n    text: wrapWithAttrCheck(function (text = '') {\n      return this.put(new Text()).text(text)\n    }),\n\n    // Create plain text element\n    plain: wrapWithAttrCheck(function (text = '') {\n      return this.put(new Text()).plain(text)\n    })\n  }\n})\n\nregister(Text, 'Text')\n","import {\n  extend,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { globals } from '../utils/window.js'\nimport { registerMethods } from '../utils/methods.js'\nimport SVGNumber from '../types/SVGNumber.js'\nimport Shape from './Shape.js'\nimport Text from './Text.js'\nimport * as textable from '../modules/core/textable.js'\n\nexport default class Tspan extends Shape {\n  // Initialize node\n  constructor(node, attrs = node) {\n    super(nodeOrNew('tspan', node), attrs)\n    this._build = false // disable build mode for adding multiple lines\n  }\n\n  // Shortcut dx\n  dx(dx) {\n    return this.attr('dx', dx)\n  }\n\n  // Shortcut dy\n  dy(dy) {\n    return this.attr('dy', dy)\n  }\n\n  // Create new line\n  newLine() {\n    // mark new line\n    this.dom.newLined = true\n\n    // fetch parent\n    const text = this.parent()\n\n    // early return in case we are not in a text element\n    if (!(text instanceof Text)) {\n      return this\n    }\n\n    const i = text.index(this)\n\n    const fontSize = globals.window\n      .getComputedStyle(this.node)\n      .getPropertyValue('font-size')\n    const dy = text.dom.leading * new SVGNumber(fontSize)\n\n    // apply new position\n    return this.dy(i ? dy : 0).attr('x', text.x())\n  }\n\n  // Set text content\n  text(text) {\n    if (text == null)\n      return this.node.textContent + (this.dom.newLined ? '\\n' : '')\n\n    if (typeof text === 'function') {\n      this.clear().build(true)\n      text.call(this, this)\n      this.build(false)\n    } else {\n      this.plain(text)\n    }\n\n    return this\n  }\n}\n\nextend(Tspan, textable)\n\nregisterMethods({\n  Tspan: {\n    tspan: wrapWithAttrCheck(function (text = '') {\n      const tspan = new Tspan()\n\n      // clear if build mode is disabled\n      if (!this._build) {\n        this.clear()\n      }\n\n      // add new tspan\n      return this.put(tspan).text(text)\n    })\n  },\n  Text: {\n    newLine: function (text = '') {\n      return this.tspan(text).newLine()\n    }\n  }\n})\n\nregister(Tspan, 'Tspan')\n","import { cx, cy, height, width, x, y } from '../modules/core/circled.js'\nimport {\n  extend,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport SVGNumber from '../types/SVGNumber.js'\nimport Shape from './Shape.js'\n\nexport default class Circle extends Shape {\n  constructor(node, attrs = node) {\n    super(nodeOrNew('circle', node), attrs)\n  }\n\n  radius(r) {\n    return this.attr('r', r)\n  }\n\n  // Radius x value\n  rx(rx) {\n    return this.attr('r', rx)\n  }\n\n  // Alias radius x value\n  ry(ry) {\n    return this.rx(ry)\n  }\n\n  size(size) {\n    return this.radius(new SVGNumber(size).divide(2))\n  }\n}\n\nextend(Circle, { x, y, cx, cy, width, height })\n\nregisterMethods({\n  Container: {\n    // Create circle element\n    circle: wrapWithAttrCheck(function (size = 0) {\n      return this.put(new Circle()).size(size).move(0, 0)\n    })\n  }\n})\n\nregister(Circle, 'Circle')\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Container from './Container.js'\nimport baseFind from '../modules/core/selector.js'\n\nexport default class ClipPath extends Container {\n  constructor(node, attrs = node) {\n    super(nodeOrNew('clipPath', node), attrs)\n  }\n\n  // Unclip all clipped elements and remove itself\n  remove() {\n    // unclip all targets\n    this.targets().forEach(function (el) {\n      el.unclip()\n    })\n\n    // remove clipPath from parent\n    return super.remove()\n  }\n\n  targets() {\n    return baseFind('svg [clip-path*=' + this.id() + ']')\n  }\n}\n\nregisterMethods({\n  Container: {\n    // Create clipping element\n    clip: wrapWithAttrCheck(function () {\n      return this.defs().put(new ClipPath())\n    })\n  },\n  Element: {\n    // Distribute clipPath to svg element\n    clipper() {\n      return this.reference('clip-path')\n    },\n\n    clipWith(element) {\n      // use given clip or create a new one\n      const clipper =\n        element instanceof ClipPath\n          ? element\n          : this.parent().clip().add(element)\n\n      // apply mask\n      return this.attr('clip-path', 'url(#' + clipper.id() + ')')\n    },\n\n    // Unclip element\n    unclip() {\n      return this.attr('clip-path', null)\n    }\n  }\n})\n\nregister(ClipPath, 'ClipPath')\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Element from './Element.js'\n\nexport default class ForeignObject extends Element {\n  constructor(node, attrs = node) {\n    super(nodeOrNew('foreignObject', node), attrs)\n  }\n}\n\nregisterMethods({\n  Container: {\n    foreignObject: wrapWithAttrCheck(function (width, height) {\n      return this.put(new ForeignObject()).size(width, height)\n    })\n  }\n})\n\nregister(ForeignObject, 'ForeignObject')\n","import Matrix from '../../types/Matrix.js'\nimport Point from '../../types/Point.js'\nimport Box from '../../types/Box.js'\nimport { proportionalSize } from '../../utils/utils.js'\nimport { getWindow } from '../../utils/window.js'\n\nexport function dmove(dx, dy) {\n  this.children().forEach((child) => {\n    let bbox\n\n    // We have to wrap this for elements that dont have a bbox\n    // e.g. title and other descriptive elements\n    try {\n      // Get the childs bbox\n      // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1905039\n      // Because bbox for nested svgs returns the contents bbox in the coordinate space of the svg itself (weird!), we cant use bbox for svgs\n      // Therefore we have to use getBoundingClientRect. But THAT is broken (as explained in the bug).\n      // Funnily enough the broken behavior would work for us but that breaks it in chrome\n      // So we have to replicate the broken behavior of FF by just reading the attributes of the svg itself\n      bbox =\n        child.node instanceof getWindow().SVGSVGElement\n          ? new Box(child.attr(['x', 'y', 'width', 'height']))\n          : child.bbox()\n    } catch (e) {\n      return\n    }\n\n    // Get childs matrix\n    const m = new Matrix(child)\n    // Translate childs matrix by amount and\n    // transform it back into parents space\n    const matrix = m.translate(dx, dy).transform(m.inverse())\n    // Calculate new x and y from old box\n    const p = new Point(bbox.x, bbox.y).transform(matrix)\n    // Move element\n    child.move(p.x, p.y)\n  })\n\n  return this\n}\n\nexport function dx(dx) {\n  return this.dmove(dx, 0)\n}\n\nexport function dy(dy) {\n  return this.dmove(0, dy)\n}\n\nexport function height(height, box = this.bbox()) {\n  if (height == null) return box.height\n  return this.size(box.width, height, box)\n}\n\nexport function move(x = 0, y = 0, box = this.bbox()) {\n  const dx = x - box.x\n  const dy = y - box.y\n\n  return this.dmove(dx, dy)\n}\n\nexport function size(width, height, box = this.bbox()) {\n  const p = proportionalSize(this, width, height, box)\n  const scaleX = p.width / box.width\n  const scaleY = p.height / box.height\n\n  this.children().forEach((child) => {\n    const o = new Point(box).transform(new Matrix(child).inverse())\n    child.scale(scaleX, scaleY, o.x, o.y)\n  })\n\n  return this\n}\n\nexport function width(width, box = this.bbox()) {\n  if (width == null) return box.width\n  return this.size(width, box.height, box)\n}\n\nexport function x(x, box = this.bbox()) {\n  if (x == null) return box.x\n  return this.move(x, box.y, box)\n}\n\nexport function y(y, box = this.bbox()) {\n  if (y == null) return box.y\n  return this.move(box.x, y, box)\n}\n","import {\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck,\n  extend\n} from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Container from './Container.js'\nimport * as containerGeometry from '../modules/core/containerGeometry.js'\n\nexport default class G extends Container {\n  constructor(node, attrs = node) {\n    super(nodeOrNew('g', node), attrs)\n  }\n}\n\nextend(G, containerGeometry)\n\nregisterMethods({\n  Container: {\n    // Create a group element\n    group: wrapWithAttrCheck(function () {\n      return this.put(new G())\n    })\n  }\n})\n\nregister(G, 'G')\n","import {\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck,\n  extend\n} from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport { xlink } from '../modules/core/namespaces.js'\nimport Container from './Container.js'\nimport * as containerGeometry from '../modules/core/containerGeometry.js'\n\nexport default class A extends Container {\n  constructor(node, attrs = node) {\n    super(nodeOrNew('a', node), attrs)\n  }\n\n  // Link target attribute\n  target(target) {\n    return this.attr('target', target)\n  }\n\n  // Link url\n  to(url) {\n    return this.attr('href', url, xlink)\n  }\n}\n\nextend(A, containerGeometry)\n\nregisterMethods({\n  Container: {\n    // Create a hyperlink element\n    link: wrapWithAttrCheck(function (url) {\n      return this.put(new A()).to(url)\n    })\n  },\n  Element: {\n    unlink() {\n      const link = this.linker()\n\n      if (!link) return this\n\n      const parent = link.parent()\n\n      if (!parent) {\n        return this.remove()\n      }\n\n      const index = parent.index(link)\n      parent.add(this, index)\n\n      link.remove()\n      return this\n    },\n    linkTo(url) {\n      // reuse old link if possible\n      let link = this.linker()\n\n      if (!link) {\n        link = new A()\n        this.wrap(link)\n      }\n\n      if (typeof url === 'function') {\n        url.call(link, link)\n      } else {\n        link.to(url)\n      }\n\n      return this\n    },\n    linker() {\n      const link = this.parent()\n      if (link && link.node.nodeName.toLowerCase() === 'a') {\n        return link\n      }\n\n      return null\n    }\n  }\n})\n\nregister(A, 'A')\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Container from './Container.js'\nimport baseFind from '../modules/core/selector.js'\n\nexport default class Mask extends Container {\n  // Initialize node\n  constructor(node, attrs = node) {\n    super(nodeOrNew('mask', node), attrs)\n  }\n\n  // Unmask all masked elements and remove itself\n  remove() {\n    // unmask all targets\n    this.targets().forEach(function (el) {\n      el.unmask()\n    })\n\n    // remove mask from parent\n    return super.remove()\n  }\n\n  targets() {\n    return baseFind('svg [mask*=' + this.id() + ']')\n  }\n}\n\nregisterMethods({\n  Container: {\n    mask: wrapWithAttrCheck(function () {\n      return this.defs().put(new Mask())\n    })\n  },\n  Element: {\n    // Distribute mask to svg element\n    masker() {\n      return this.reference('mask')\n    },\n\n    maskWith(element) {\n      // use given mask or create a new one\n      const masker =\n        element instanceof Mask ? element : this.parent().mask().add(element)\n\n      // apply mask\n      return this.attr('mask', 'url(#' + masker.id() + ')')\n    },\n\n    // Unmask element\n    unmask() {\n      return this.attr('mask', null)\n    }\n  }\n})\n\nregister(Mask, 'Mask')\n","import { nodeOrNew, register } from '../utils/adopter.js'\nimport Element from './Element.js'\nimport SVGNumber from '../types/SVGNumber.js'\nimport { registerMethods } from '../utils/methods.js'\n\nexport default class Stop extends Element {\n  constructor(node, attrs = node) {\n    super(nodeOrNew('stop', node), attrs)\n  }\n\n  // add color stops\n  update(o) {\n    if (typeof o === 'number' || o instanceof SVGNumber) {\n      o = {\n        offset: arguments[0],\n        color: arguments[1],\n        opacity: arguments[2]\n      }\n    }\n\n    // set attributes\n    if (o.opacity != null) this.attr('stop-opacity', o.opacity)\n    if (o.color != null) this.attr('stop-color', o.color)\n    if (o.offset != null) this.attr('offset', new SVGNumber(o.offset))\n\n    return this\n  }\n}\n\nregisterMethods({\n  Gradient: {\n    // Add a color stop\n    stop: function (offset, color, opacity) {\n      return this.put(new Stop()).update(offset, color, opacity)\n    }\n  }\n})\n\nregister(Stop, 'Stop')\n","import { nodeOrNew, register } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport { unCamelCase } from '../utils/utils.js'\nimport Element from './Element.js'\n\nfunction cssRule(selector, rule) {\n  if (!selector) return ''\n  if (!rule) return selector\n\n  let ret = selector + '{'\n\n  for (const i in rule) {\n    ret += unCamelCase(i) + ':' + rule[i] + ';'\n  }\n\n  ret += '}'\n\n  return ret\n}\n\nexport default class Style extends Element {\n  constructor(node, attrs = node) {\n    super(nodeOrNew('style', node), attrs)\n  }\n\n  addText(w = '') {\n    this.node.textContent += w\n    return this\n  }\n\n  font(name, src, params = {}) {\n    return this.rule('@font-face', {\n      fontFamily: name,\n      src: src,\n      ...params\n    })\n  }\n\n  rule(selector, obj) {\n    return this.addText(cssRule(selector, obj))\n  }\n}\n\nregisterMethods('Dom', {\n  style(selector, obj) {\n    return this.put(new Style()).rule(selector, obj)\n  },\n  fontface(name, src, params) {\n    return this.put(new Style()).font(name, src, params)\n  }\n})\n\nregister(Style, 'Style')\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport { xlink } from '../modules/core/namespaces.js'\nimport Path from './Path.js'\nimport PathArray from '../types/PathArray.js'\nimport Text from './Text.js'\nimport baseFind from '../modules/core/selector.js'\n\nexport default class TextPath extends Text {\n  // Initialize node\n  constructor(node, attrs = node) {\n    super(nodeOrNew('textPath', node), attrs)\n  }\n\n  // return the array of the path track element\n  array() {\n    const track = this.track()\n\n    return track ? track.array() : null\n  }\n\n  // Plot path if any\n  plot(d) {\n    const track = this.track()\n    let pathArray = null\n\n    if (track) {\n      pathArray = track.plot(d)\n    }\n\n    return d == null ? pathArray : this\n  }\n\n  // Get the path element\n  track() {\n    return this.reference('href')\n  }\n}\n\nregisterMethods({\n  Container: {\n    textPath: wrapWithAttrCheck(function (text, path) {\n      // Convert text to instance if needed\n      if (!(text instanceof Text)) {\n        text = this.text(text)\n      }\n\n      return text.path(path)\n    })\n  },\n  Text: {\n    // Create path for text to run on\n    path: wrapWithAttrCheck(function (track, importNodes = true) {\n      const textPath = new TextPath()\n\n      // if track is a path, reuse it\n      if (!(track instanceof Path)) {\n        // create path element\n        track = this.defs().path(track)\n      }\n\n      // link textPath to path and add content\n      textPath.attr('href', '#' + track, xlink)\n\n      // Transplant all nodes from text to textPath\n      let node\n      if (importNodes) {\n        while ((node = this.node.firstChild)) {\n          textPath.node.appendChild(node)\n        }\n      }\n\n      // add textPath element as child node and return textPath\n      return this.put(textPath)\n    }),\n\n    // Get the textPath children\n    textPath() {\n      return this.findOne('textPath')\n    }\n  },\n  Path: {\n    // creates a textPath from this path\n    text: wrapWithAttrCheck(function (text) {\n      // Convert text to instance if needed\n      if (!(text instanceof Text)) {\n        text = new Text().addTo(this.parent()).text(text)\n      }\n\n      // Create textPath from text and path and return\n      return text.path(this)\n    }),\n\n    targets() {\n      return baseFind('svg textPath').filter((node) => {\n        return (node.attr('href') || '').includes(this.id())\n      })\n\n      // Does not work in IE11. Use when IE support is dropped\n      // return baseFind('svg textPath[*|href*=' + this.id() + ']')\n    }\n  }\n})\n\nTextPath.prototype.MorphArray = PathArray\nregister(TextPath, 'TextPath')\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport { xlink } from '../modules/core/namespaces.js'\nimport Shape from './Shape.js'\n\nexport default class Use extends Shape {\n  constructor(node, attrs = node) {\n    super(nodeOrNew('use', node), attrs)\n  }\n\n  // Use element as a reference\n  use(element, file) {\n    // Set lined element\n    return this.attr('href', (file || '') + '#' + element, xlink)\n  }\n}\n\nregisterMethods({\n  Container: {\n    // Create a use element\n    use: wrapWithAttrCheck(function (element, file) {\n      return this.put(new Use()).use(element, file)\n    })\n  }\n})\n\nregister(Use, 'Use')\n","/* Optional Modules */\nimport './modules/optional/arrange.js'\nimport './modules/optional/class.js'\nimport './modules/optional/css.js'\nimport './modules/optional/data.js'\nimport './modules/optional/memory.js'\nimport './modules/optional/sugar.js'\nimport './modules/optional/transform.js'\n\nimport { extend, makeInstance } from './utils/adopter.js'\nimport { getMethodNames, getMethodsFor } from './utils/methods.js'\nimport Box from './types/Box.js'\nimport Color from './types/Color.js'\nimport Container from './elements/Container.js'\nimport Defs from './elements/Defs.js'\nimport Dom from './elements/Dom.js'\nimport Element from './elements/Element.js'\nimport Ellipse from './elements/Ellipse.js'\nimport EventTarget from './types/EventTarget.js'\nimport Fragment from './elements/Fragment.js'\nimport Gradient from './elements/Gradient.js'\nimport Image from './elements/Image.js'\nimport Line from './elements/Line.js'\nimport List from './types/List.js'\nimport Marker from './elements/Marker.js'\nimport Matrix from './types/Matrix.js'\nimport Morphable, {\n  NonMorphable,\n  ObjectBag,\n  TransformBag,\n  makeMorphable,\n  registerMorphableType\n} from './animation/Morphable.js'\nimport Path from './elements/Path.js'\nimport PathArray from './types/PathArray.js'\nimport Pattern from './elements/Pattern.js'\nimport PointArray from './types/PointArray.js'\nimport Point from './types/Point.js'\nimport Polygon from './elements/Polygon.js'\nimport Polyline from './elements/Polyline.js'\nimport Rect from './elements/Rect.js'\nimport Runner from './animation/Runner.js'\nimport SVGArray from './types/SVGArray.js'\nimport SVGNumber from './types/SVGNumber.js'\nimport Shape from './elements/Shape.js'\nimport Svg from './elements/Svg.js'\nimport Symbol from './elements/Symbol.js'\nimport Text from './elements/Text.js'\nimport Tspan from './elements/Tspan.js'\nimport * as defaults from './modules/core/defaults.js'\nimport * as utils from './utils/utils.js'\nimport * as namespaces from './modules/core/namespaces.js'\nimport * as regex from './modules/core/regex.js'\n\nexport {\n  Morphable,\n  registerMorphableType,\n  makeMorphable,\n  TransformBag,\n  ObjectBag,\n  NonMorphable\n}\n\nexport { defaults, utils, namespaces, regex }\nexport const SVG = makeInstance\nexport { default as parser } from './modules/core/parser.js'\nexport { default as find } from './modules/core/selector.js'\nexport * from './modules/core/event.js'\nexport * from './utils/adopter.js'\nexport {\n  getWindow,\n  registerWindow,\n  restoreWindow,\n  saveWindow,\n  withWindow\n} from './utils/window.js'\n\n/* Animation Modules */\nexport { default as Animator } from './animation/Animator.js'\nexport {\n  Controller,\n  Ease,\n  PID,\n  Spring,\n  easing\n} from './animation/Controller.js'\nexport { default as Queue } from './animation/Queue.js'\nexport { default as Runner } from './animation/Runner.js'\nexport { default as Timeline } from './animation/Timeline.js'\n\n/* Types */\nexport { default as Array } from './types/SVGArray.js'\nexport { default as Box } from './types/Box.js'\nexport { default as Color } from './types/Color.js'\nexport { default as EventTarget } from './types/EventTarget.js'\nexport { default as Matrix } from './types/Matrix.js'\nexport { default as Number } from './types/SVGNumber.js'\nexport { default as PathArray } from './types/PathArray.js'\nexport { default as Point } from './types/Point.js'\nexport { default as PointArray } from './types/PointArray.js'\nexport { default as List } from './types/List.js'\n\n/* Elements */\nexport { default as Circle } from './elements/Circle.js'\nexport { default as ClipPath } from './elements/ClipPath.js'\nexport { default as Container } from './elements/Container.js'\nexport { default as Defs } from './elements/Defs.js'\nexport { default as Dom } from './elements/Dom.js'\nexport { default as Element } from './elements/Element.js'\nexport { default as Ellipse } from './elements/Ellipse.js'\nexport { default as ForeignObject } from './elements/ForeignObject.js'\nexport { default as Fragment } from './elements/Fragment.js'\nexport { default as Gradient } from './elements/Gradient.js'\nexport { default as G } from './elements/G.js'\nexport { default as A } from './elements/A.js'\nexport { default as Image } from './elements/Image.js'\nexport { default as Line } from './elements/Line.js'\nexport { default as Marker } from './elements/Marker.js'\nexport { default as Mask } from './elements/Mask.js'\nexport { default as Path } from './elements/Path.js'\nexport { default as Pattern } from './elements/Pattern.js'\nexport { default as Polygon } from './elements/Polygon.js'\nexport { default as Polyline } from './elements/Polyline.js'\nexport { default as Rect } from './elements/Rect.js'\nexport { default as Shape } from './elements/Shape.js'\nexport { default as Stop } from './elements/Stop.js'\nexport { default as Style } from './elements/Style.js'\nexport { default as Svg } from './elements/Svg.js'\nexport { default as Symbol } from './elements/Symbol.js'\nexport { default as Text } from './elements/Text.js'\nexport { default as TextPath } from './elements/TextPath.js'\nexport { default as Tspan } from './elements/Tspan.js'\nexport { default as Use } from './elements/Use.js'\n\nextend([Svg, Symbol, Image, Pattern, Marker], getMethodsFor('viewbox'))\n\nextend([Line, Polyline, Polygon, Path], getMethodsFor('marker'))\n\nextend(Text, getMethodsFor('Text'))\nextend(Path, getMethodsFor('Path'))\n\nextend(Defs, getMethodsFor('Defs'))\n\nextend([Text, Tspan], getMethodsFor('Tspan'))\n\nextend([Rect, Ellipse, Gradient, Runner], getMethodsFor('radius'))\n\nextend(EventTarget, getMethodsFor('EventTarget'))\nextend(Dom, getMethodsFor('Dom'))\nextend(Element, getMethodsFor('Element'))\nextend(Shape, getMethodsFor('Shape'))\nextend([Container, Fragment], getMethodsFor('Container'))\nextend(Gradient, getMethodsFor('Gradient'))\n\nextend(Runner, getMethodsFor('Runner'))\n\nList.extend(getMethodNames())\n\nregisterMorphableType([\n  SVGNumber,\n  Color,\n  Box,\n  Matrix,\n  SVGArray,\n  PointArray,\n  PathArray,\n  Point\n])\n\nmakeMorphable()\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { SVG } from \"@svgdotjs/svg.js\";\nexport class Turtle {\n    constructor(root) {\n        this.angle = 0;\n        this.angleUnit = \"degrees\";\n        this.fullCircle = 360;\n        this._position = [0, 0];\n        this.isPenDown = true;\n        this.stamps = {};\n        this.nextStampId = 1;\n        this.speedNormalize = 3;\n        this._speed = 6;\n        this.penSize = 1;\n        this.fd = this.forward;\n        this.bk = this.backward;\n        this.back = this.backward;\n        this.rt = this.right;\n        this.lt = this.left;\n        this.setpos = this.goto;\n        this.set_position = this.goto;\n        this.seth = this.setheading;\n        this.pos = this.position;\n        this.pd = this.penDown;\n        this.down = this.penDown;\n        this.pu = this.penUp;\n        this.up = this.penUp;\n        this.width = this.pensize;\n        this.onscreenclick = this.onclick;\n        this.screenWidth = root.offsetWidth;\n        this.screenHeight = root.offsetHeight;\n        this.draw = SVG()\n            .addTo(root)\n            .viewbox(`-${this.screenWidth / 2}, -${this.screenHeight / 2}, ${this.screenWidth}, ${this.screenHeight}`);\n        this.group = this.draw.group();\n        this.turtle = this.group\n            .polygon(\"0,0 4,7.5 0,15 15,7.5 30,7.5 15,7.5\")\n            .center(0, 0);\n    }\n    getMoveDuration(x, y) {\n        const distance = Math.sqrt(Math.pow(x - this._position[0], 2) + Math.pow(y - this._position[1], 2));\n        if (this._speed > 0) {\n            return (Math.abs(distance) / this._speed) * this.speedNormalize;\n        }\n        else {\n            return 0;\n        }\n    }\n    drawLine(x, y) {\n        this.draw\n            .line(this._position[0], this._position[1], this._position[0], this._position[1])\n            .stroke({ width: 1, color: \"black\" })\n            .animate(this.getMoveDuration(x, y))\n            .plot(this._position[0], this._position[1], x, y);\n    }\n    move(x, y) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isPenDown) {\n                this.drawLine(x, y);\n            }\n            yield new Promise((resolve) => {\n                this.group.animate(this.getMoveDuration(x, y)).center(x, y).after(resolve);\n            });\n            this._position[0] = x;\n            this._position[1] = y;\n        });\n    }\n    forward(distance) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const xMove = distance * Math.cos((this.angle * Math.PI) / 180);\n            const yMove = distance * Math.sin((this.angle * Math.PI) / 180);\n            yield this.move(this._position[0] + xMove, this._position[1] - yMove);\n        });\n    }\n    backward(distance) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.forward(-distance);\n        });\n    }\n    convertAngle(angle) {\n        if (this.angleUnit === \"degrees\") {\n            return (360 * angle) / this.fullCircle;\n        }\n        else {\n            return angle * (180 / Math.PI);\n        }\n    }\n    getRotateDuration(angle) {\n        if (this._speed > 0) {\n            return (Math.abs(angle) / this._speed) * this.speedNormalize;\n        }\n        else {\n            return 0;\n        }\n    }\n    right(angle) {\n        return __awaiter(this, void 0, void 0, function* () {\n            angle = this.convertAngle(angle);\n            this.angle = (this.angle + angle) % 360;\n            yield new Promise((resolve) => this.turtle\n                .animate(this.getRotateDuration(angle))\n                // @ts-ignore\n                .rotate(-angle)\n                .after(resolve));\n        });\n    }\n    left(angle) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.right(-angle);\n        });\n    }\n    goto(x, y) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.move(x, y);\n        });\n    }\n    setx(x) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.move(x, this._position[1]);\n        });\n    }\n    sety(y) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.move(this._position[0], y);\n        });\n    }\n    setheading(angle) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.right(angle - this.angle);\n        });\n    }\n    home() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.goto(0, 0);\n        });\n    }\n    circle(radius, extent = 360, steps) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const circlePrecision = 10;\n            if (!steps) {\n                steps = Math.ceil(Math.abs(extent) / circlePrecision);\n            }\n            const angle = extent / steps;\n            for (let i = 0; i < steps; i++) {\n                yield this.forward(radius * Math.sin((angle * Math.PI) / 180));\n                yield this.right(angle);\n            }\n        });\n    }\n    dot(size = 5, color = \"black\") {\n        this.draw\n            .circle(size)\n            .fill(color)\n            .center(this._position[0], this._position[1]);\n    }\n    stamp() {\n        const id = this.nextStampId;\n        const polygon = this.draw\n            .polygon(\"0,0 4,7.5 0,15 15,7.5\")\n            .center(this._position[0], this._position[1])\n            .rotate(-this.angle);\n        this.stamps[id] = polygon;\n        this.nextStampId++;\n        return id;\n    }\n    clearstemp(id) {\n        this.stamps[id].remove();\n        delete this.stamps[id];\n    }\n    clearstamps(quantity) {\n        if (quantity) {\n            quantity = Object.keys(this.stamps).length;\n        }\n        const ids = Object.keys(this.stamps);\n        if (quantity > 0) {\n            for (let i = 0; i < quantity; i++) {\n                if (ids.length > 0) {\n                    this.clearstemp(Number(ids[0]));\n                    ids.splice(0, 1);\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        else {\n            for (let i = ids.length - 1; i >= -quantity; i--) {\n                if (ids.length > 0) {\n                    this.clearstemp(Number(ids[i]));\n                    ids.slice(i, 1);\n                }\n                else {\n                    break;\n                }\n            }\n        }\n    }\n    // TODO: implement this function\n    undo(quantity) {\n        return __awaiter(this, void 0, void 0, function* () { });\n    }\n    speed(speed) {\n        if (speed) {\n            if (typeof speed === \"string\") {\n                const speedOptions = {\n                    fastest: 0,\n                    fast: 10,\n                    normal: 6,\n                    slow: 3,\n                    slowest: 1\n                };\n                this._speed = speedOptions[speed];\n            }\n            else {\n                if (speed < 0.5 || speed > 10) {\n                    speed = 0;\n                }\n                this._speed = speed;\n            }\n        }\n        else {\n            return this._speed;\n        }\n    }\n    position() {\n        return this._position;\n    }\n    towards(x, y) {\n        const angle = Math.atan2(y - this._position[1], x - this._position[0]);\n        return (angle * 180) / Math.PI;\n    }\n    xcor() {\n        return this._position[0];\n    }\n    ycor() {\n        return this._position[1];\n    }\n    heading() {\n        return this.convertAngle(this.angle);\n    }\n    distance(arg1, y) {\n        let fromX;\n        let fromY;\n        if (typeof arg1 === \"number\") {\n            fromX = arg1;\n            fromY = y;\n        }\n        else if (arg1 instanceof Turtle) {\n            ;\n            [fromX, fromY] = arg1.position();\n        }\n        else {\n            fromX = arg1[0];\n            fromY = arg1[1];\n        }\n        return Math.sqrt(Math.pow(fromX - this._position[0], 2) +\n            Math.pow(fromY - this._position[1], 2));\n    }\n    degrees(fullcircle = 360) {\n        this.angleUnit = \"degrees\";\n        this.fullCircle = fullcircle;\n    }\n    radians() {\n        this.angleUnit = \"radians\";\n    }\n    penDown() {\n        this.isPenDown = true;\n    }\n    penUp() {\n        this.isPenDown = false;\n    }\n    pensize(size) {\n        if (size) {\n            this.penSize = size;\n        }\n        else {\n            return this.penSize;\n        }\n    }\n    // TODO: implement this function\n    pen() { }\n    isdown() {\n        return this.isPenDown;\n    }\n    onclick(callback) {\n        this.draw.mousedown(({ offsetX, offsetY }) => {\n            const x = offsetX - this.screenWidth / 2;\n            const y = offsetY - this.screenHeight / 2;\n            callback(x, y);\n        });\n    }\n    onrelease(callback) {\n        this.draw.mouseup(({ offsetX, offsetY }) => {\n            const x = offsetX - this.screenWidth / 2;\n            const y = offsetY - this.screenHeight / 2;\n            callback(x, y);\n        });\n    }\n}\n","<script setup>\r\nimport { onMounted } from 'vue'\r\n// import Turtle from 'turtle-js';\r\nimport { Turtle } from 'turtle-graphics';\r\n\r\nonMounted(() => {\r\n    const canvas = document.getElementById('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n    const turtle = new Turtle(canvas);\r\n    console.log(turtle.turtle    )\r\n    turtle.turtle.goto( 100, 100)\r\n    turtle.turtle.goto( 100,-100)\r\n    turtle.turtle.goto(-100,-100)\r\n    turtle.turtle.goto(-100, 100)\r\n    turtle.turtle.goto(0,0)\r\n})\r\n\r\n</script>\r\n\r\n<template>\r\n    <div>\r\n        <canvas style=\"width: 500px; height: 500px;\" id=\"canvas\"></canvas>\r\n    </div>\r\n</template>\r\n\r\n<style scoped></style>"],"names":["methods","defaults","Symbol","x","y","cx","cy","width","height","this"],"mappings":"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"}